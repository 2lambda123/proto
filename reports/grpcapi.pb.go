// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: reports/grpcapi.proto

package reports

import (
	context "context"
	common "github.com/SKF/proto/v2/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeepPingOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DeepPingOutput) Reset() {
	*x = DeepPingOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reports_grpcapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeepPingOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepPingOutput) ProtoMessage() {}

func (x *DeepPingOutput) ProtoReflect() protoreflect.Message {
	mi := &file_reports_grpcapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepPingOutput.ProtoReflect.Descriptor instead.
func (*DeepPingOutput) Descriptor() ([]byte, []int) {
	return file_reports_grpcapi_proto_rawDescGZIP(), []int{0}
}

func (x *DeepPingOutput) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Return asset health for the requested asset node
type GetAssetHealthInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *GetAssetHealthInput) Reset() {
	*x = GetAssetHealthInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reports_grpcapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssetHealthInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetHealthInput) ProtoMessage() {}

func (x *GetAssetHealthInput) ProtoReflect() protoreflect.Message {
	mi := &file_reports_grpcapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetHealthInput.ProtoReflect.Descriptor instead.
func (*GetAssetHealthInput) Descriptor() ([]byte, []int) {
	return file_reports_grpcapi_proto_rawDescGZIP(), []int{1}
}

func (x *GetAssetHealthInput) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type GetAssetHealthOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HealthStatus string `protobuf:"bytes,1,opt,name=health_status,json=healthStatus,proto3" json:"health_status,omitempty"`
}

func (x *GetAssetHealthOutput) Reset() {
	*x = GetAssetHealthOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reports_grpcapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssetHealthOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetHealthOutput) ProtoMessage() {}

func (x *GetAssetHealthOutput) ProtoReflect() protoreflect.Message {
	mi := &file_reports_grpcapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetHealthOutput.ProtoReflect.Descriptor instead.
func (*GetAssetHealthOutput) Descriptor() ([]byte, []int) {
	return file_reports_grpcapi_proto_rawDescGZIP(), []int{2}
}

func (x *GetAssetHealthOutput) GetHealthStatus() string {
	if x != nil {
		return x.HealthStatus
	}
	return ""
}

// Return functional location health for requested functional location node
type GetFunctionalLocationHealthInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *GetFunctionalLocationHealthInput) Reset() {
	*x = GetFunctionalLocationHealthInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reports_grpcapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionalLocationHealthInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionalLocationHealthInput) ProtoMessage() {}

func (x *GetFunctionalLocationHealthInput) ProtoReflect() protoreflect.Message {
	mi := &file_reports_grpcapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionalLocationHealthInput.ProtoReflect.Descriptor instead.
func (*GetFunctionalLocationHealthInput) Descriptor() ([]byte, []int) {
	return file_reports_grpcapi_proto_rawDescGZIP(), []int{3}
}

func (x *GetFunctionalLocationHealthInput) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type GetFunctionalLocationHealthOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HealthStatus string `protobuf:"bytes,1,opt,name=health_status,json=healthStatus,proto3" json:"health_status,omitempty"`
}

func (x *GetFunctionalLocationHealthOutput) Reset() {
	*x = GetFunctionalLocationHealthOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reports_grpcapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFunctionalLocationHealthOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFunctionalLocationHealthOutput) ProtoMessage() {}

func (x *GetFunctionalLocationHealthOutput) ProtoReflect() protoreflect.Message {
	mi := &file_reports_grpcapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFunctionalLocationHealthOutput.ProtoReflect.Descriptor instead.
func (*GetFunctionalLocationHealthOutput) Descriptor() ([]byte, []int) {
	return file_reports_grpcapi_proto_rawDescGZIP(), []int{4}
}

func (x *GetFunctionalLocationHealthOutput) GetHealthStatus() string {
	if x != nil {
		return x.HealthStatus
	}
	return ""
}

// Return the compliance log for the supplied hierarchy node
type GetComplianceLogInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *GetComplianceLogInput) Reset() {
	*x = GetComplianceLogInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reports_grpcapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComplianceLogInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComplianceLogInput) ProtoMessage() {}

func (x *GetComplianceLogInput) ProtoReflect() protoreflect.Message {
	mi := &file_reports_grpcapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComplianceLogInput.ProtoReflect.Descriptor instead.
func (*GetComplianceLogInput) Descriptor() ([]byte, []int) {
	return file_reports_grpcapi_proto_rawDescGZIP(), []int{5}
}

func (x *GetComplianceLogInput) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type GetComplianceLogOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComplianceList []*ComplianceItem `protobuf:"bytes,1,rep,name=compliance_list,json=complianceList,proto3" json:"compliance_list,omitempty"`
}

func (x *GetComplianceLogOutput) Reset() {
	*x = GetComplianceLogOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reports_grpcapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComplianceLogOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComplianceLogOutput) ProtoMessage() {}

func (x *GetComplianceLogOutput) ProtoReflect() protoreflect.Message {
	mi := &file_reports_grpcapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComplianceLogOutput.ProtoReflect.Descriptor instead.
func (*GetComplianceLogOutput) Descriptor() ([]byte, []int) {
	return file_reports_grpcapi_proto_rawDescGZIP(), []int{6}
}

func (x *GetComplianceLogOutput) GetComplianceList() []*ComplianceItem {
	if x != nil {
		return x.ComplianceList
	}
	return nil
}

type ComplianceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetClassId   string `protobuf:"bytes,1,opt,name=asset_class_id,json=assetClassId,proto3" json:"asset_class_id,omitempty"`
	IsCompliant    bool   `protobuf:"varint,2,opt,name=is_compliant,json=isCompliant,proto3" json:"is_compliant,omitempty"`
	ComplianceNote string `protobuf:"bytes,3,opt,name=compliance_note,json=complianceNote,proto3" json:"compliance_note,omitempty"`
	Created        int64  `protobuf:"varint,4,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *ComplianceItem) Reset() {
	*x = ComplianceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reports_grpcapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceItem) ProtoMessage() {}

func (x *ComplianceItem) ProtoReflect() protoreflect.Message {
	mi := &file_reports_grpcapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceItem.ProtoReflect.Descriptor instead.
func (*ComplianceItem) Descriptor() ([]byte, []int) {
	return file_reports_grpcapi_proto_rawDescGZIP(), []int{7}
}

func (x *ComplianceItem) GetAssetClassId() string {
	if x != nil {
		return x.AssetClassId
	}
	return ""
}

func (x *ComplianceItem) GetIsCompliant() bool {
	if x != nil {
		return x.IsCompliant
	}
	return false
}

func (x *ComplianceItem) GetComplianceNote() string {
	if x != nil {
		return x.ComplianceNote
	}
	return ""
}

func (x *ComplianceItem) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

// Return list of functional locations with their faults for the supplied list of hierarchy nodes
type GetReportsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeIds []string `protobuf:"bytes,1,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
}

func (x *GetReportsInput) Reset() {
	*x = GetReportsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reports_grpcapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportsInput) ProtoMessage() {}

func (x *GetReportsInput) ProtoReflect() protoreflect.Message {
	mi := &file_reports_grpcapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportsInput.ProtoReflect.Descriptor instead.
func (*GetReportsInput) Descriptor() ([]byte, []int) {
	return file_reports_grpcapi_proto_rawDescGZIP(), []int{8}
}

func (x *GetReportsInput) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

type GetReportsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportsList []*ReportsItem `protobuf:"bytes,1,rep,name=reports_list,json=reportsList,proto3" json:"reports_list,omitempty"`
}

func (x *GetReportsOutput) Reset() {
	*x = GetReportsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reports_grpcapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportsOutput) ProtoMessage() {}

func (x *GetReportsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_reports_grpcapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportsOutput.ProtoReflect.Descriptor instead.
func (*GetReportsOutput) Descriptor() ([]byte, []int) {
	return file_reports_grpcapi_proto_rawDescGZIP(), []int{9}
}

func (x *GetReportsOutput) GetReportsList() []*ReportsItem {
	if x != nil {
		return x.ReportsList
	}
	return nil
}

type ReportsItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FunctionalLocationId     string   `protobuf:"bytes,1,opt,name=functional_location_id,json=functionalLocationId,proto3" json:"functional_location_id,omitempty"`
	FunctionalLocationName   string   `protobuf:"bytes,2,opt,name=functional_location_name,json=functionalLocationName,proto3" json:"functional_location_name,omitempty"`
	FunctionalLocationRisk   float64  `protobuf:"fixed64,3,opt,name=functional_location_risk,json=functionalLocationRisk,proto3" json:"functional_location_risk,omitempty"`
	FunctionalLocationHealth string   `protobuf:"bytes,4,opt,name=functional_location_health,json=functionalLocationHealth,proto3" json:"functional_location_health,omitempty"`
	Names                    []string `protobuf:"bytes,5,rep,name=names,proto3" json:"names,omitempty"`
	Uuids                    []string `protobuf:"bytes,6,rep,name=uuids,proto3" json:"uuids,omitempty"`
	Assets                   []*Asset `protobuf:"bytes,7,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (x *ReportsItem) Reset() {
	*x = ReportsItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reports_grpcapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportsItem) ProtoMessage() {}

func (x *ReportsItem) ProtoReflect() protoreflect.Message {
	mi := &file_reports_grpcapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportsItem.ProtoReflect.Descriptor instead.
func (*ReportsItem) Descriptor() ([]byte, []int) {
	return file_reports_grpcapi_proto_rawDescGZIP(), []int{10}
}

func (x *ReportsItem) GetFunctionalLocationId() string {
	if x != nil {
		return x.FunctionalLocationId
	}
	return ""
}

func (x *ReportsItem) GetFunctionalLocationName() string {
	if x != nil {
		return x.FunctionalLocationName
	}
	return ""
}

func (x *ReportsItem) GetFunctionalLocationRisk() float64 {
	if x != nil {
		return x.FunctionalLocationRisk
	}
	return 0
}

func (x *ReportsItem) GetFunctionalLocationHealth() string {
	if x != nil {
		return x.FunctionalLocationHealth
	}
	return ""
}

func (x *ReportsItem) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *ReportsItem) GetUuids() []string {
	if x != nil {
		return x.Uuids
	}
	return nil
}

func (x *ReportsItem) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetClassId             string       `protobuf:"bytes,1,opt,name=asset_class_id,json=assetClassId,proto3" json:"asset_class_id,omitempty"`
	AssetClassName           string       `protobuf:"bytes,2,opt,name=asset_class_name,json=assetClassName,proto3" json:"asset_class_name,omitempty"`
	AssetClassRisk           float64      `protobuf:"fixed64,3,opt,name=asset_class_risk,json=assetClassRisk,proto3" json:"asset_class_risk,omitempty"`
	AssetClassHealth         string       `protobuf:"bytes,4,opt,name=asset_class_health,json=assetClassHealth,proto3" json:"asset_class_health,omitempty"`
	AssetClassRiskLabelSince int64        `protobuf:"varint,5,opt,name=asset_class_risk_label_since,json=assetClassRiskLabelSince,proto3" json:"asset_class_risk_label_since,omitempty"`
	ComplianceStatus         string       `protobuf:"bytes,6,opt,name=compliance_status,json=complianceStatus,proto3" json:"compliance_status,omitempty"`
	Faults                   []*FaultItem `protobuf:"bytes,7,rep,name=faults,proto3" json:"faults,omitempty"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reports_grpcapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_reports_grpcapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_reports_grpcapi_proto_rawDescGZIP(), []int{11}
}

func (x *Asset) GetAssetClassId() string {
	if x != nil {
		return x.AssetClassId
	}
	return ""
}

func (x *Asset) GetAssetClassName() string {
	if x != nil {
		return x.AssetClassName
	}
	return ""
}

func (x *Asset) GetAssetClassRisk() float64 {
	if x != nil {
		return x.AssetClassRisk
	}
	return 0
}

func (x *Asset) GetAssetClassHealth() string {
	if x != nil {
		return x.AssetClassHealth
	}
	return ""
}

func (x *Asset) GetAssetClassRiskLabelSince() int64 {
	if x != nil {
		return x.AssetClassRiskLabelSince
	}
	return 0
}

func (x *Asset) GetComplianceStatus() string {
	if x != nil {
		return x.ComplianceStatus
	}
	return ""
}

func (x *Asset) GetFaults() []*FaultItem {
	if x != nil {
		return x.Faults
	}
	return nil
}

type FaultItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fault_UUID         string                   `protobuf:"bytes,1,opt,name=fault_UUID,json=faultUUID,proto3" json:"fault_UUID,omitempty"`
	AssetClassId       string                   `protobuf:"bytes,2,opt,name=asset_class_id,json=assetClassId,proto3" json:"asset_class_id,omitempty"`
	FaultType          string                   `protobuf:"bytes,3,opt,name=fault_type,json=faultType,proto3" json:"fault_type,omitempty"`
	Author             string                   `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	Created            int64                    `protobuf:"varint,5,opt,name=created,proto3" json:"created,omitempty"`
	LastModified       int64                    `protobuf:"varint,6,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	IsOpen             bool                     `protobuf:"varint,7,opt,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`
	FaultStatus        string                   `protobuf:"bytes,8,opt,name=fault_status,json=faultStatus,proto3" json:"fault_status,omitempty"`
	FaultObservation   string                   `protobuf:"bytes,9,opt,name=fault_observation,json=faultObservation,proto3" json:"fault_observation,omitempty"`
	Severity           string                   `protobuf:"bytes,10,opt,name=severity,proto3" json:"severity,omitempty"`
	CloseComment       string                   `protobuf:"bytes,11,opt,name=close_comment,json=closeComment,proto3" json:"close_comment,omitempty"`
	RecommendedActions []*RecommendedActionItem `protobuf:"bytes,12,rep,name=recommended_actions,json=recommendedActions,proto3" json:"recommended_actions,omitempty"`
}

func (x *FaultItem) Reset() {
	*x = FaultItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reports_grpcapi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaultItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaultItem) ProtoMessage() {}

func (x *FaultItem) ProtoReflect() protoreflect.Message {
	mi := &file_reports_grpcapi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaultItem.ProtoReflect.Descriptor instead.
func (*FaultItem) Descriptor() ([]byte, []int) {
	return file_reports_grpcapi_proto_rawDescGZIP(), []int{12}
}

func (x *FaultItem) GetFault_UUID() string {
	if x != nil {
		return x.Fault_UUID
	}
	return ""
}

func (x *FaultItem) GetAssetClassId() string {
	if x != nil {
		return x.AssetClassId
	}
	return ""
}

func (x *FaultItem) GetFaultType() string {
	if x != nil {
		return x.FaultType
	}
	return ""
}

func (x *FaultItem) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *FaultItem) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *FaultItem) GetLastModified() int64 {
	if x != nil {
		return x.LastModified
	}
	return 0
}

func (x *FaultItem) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *FaultItem) GetFaultStatus() string {
	if x != nil {
		return x.FaultStatus
	}
	return ""
}

func (x *FaultItem) GetFaultObservation() string {
	if x != nil {
		return x.FaultObservation
	}
	return ""
}

func (x *FaultItem) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *FaultItem) GetCloseComment() string {
	if x != nil {
		return x.CloseComment
	}
	return ""
}

func (x *FaultItem) GetRecommendedActions() []*RecommendedActionItem {
	if x != nil {
		return x.RecommendedActions
	}
	return nil
}

type RecommendedActionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action       string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Created      int64  `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
	Comment      string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	WorkId       string `protobuf:"bytes,4,opt,name=work_id,json=workId,proto3" json:"work_id,omitempty"`
	LastModified int64  `protobuf:"varint,5,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	Action_UUID  string `protobuf:"bytes,6,opt,name=action_UUID,json=actionUUID,proto3" json:"action_UUID,omitempty"`
	Status       string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RecommendedActionItem) Reset() {
	*x = RecommendedActionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reports_grpcapi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendedActionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendedActionItem) ProtoMessage() {}

func (x *RecommendedActionItem) ProtoReflect() protoreflect.Message {
	mi := &file_reports_grpcapi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendedActionItem.ProtoReflect.Descriptor instead.
func (*RecommendedActionItem) Descriptor() ([]byte, []int) {
	return file_reports_grpcapi_proto_rawDescGZIP(), []int{13}
}

func (x *RecommendedActionItem) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *RecommendedActionItem) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *RecommendedActionItem) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *RecommendedActionItem) GetWorkId() string {
	if x != nil {
		return x.WorkId
	}
	return ""
}

func (x *RecommendedActionItem) GetLastModified() int64 {
	if x != nil {
		return x.LastModified
	}
	return 0
}

func (x *RecommendedActionItem) GetAction_UUID() string {
	if x != nil {
		return x.Action_UUID
	}
	return ""
}

func (x *RecommendedActionItem) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetComplianceSummaryInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuids []string `protobuf:"bytes,1,rep,name=uuids,proto3" json:"uuids,omitempty"`
	Start int64    `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End   int64    `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *GetComplianceSummaryInput) Reset() {
	*x = GetComplianceSummaryInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reports_grpcapi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComplianceSummaryInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComplianceSummaryInput) ProtoMessage() {}

func (x *GetComplianceSummaryInput) ProtoReflect() protoreflect.Message {
	mi := &file_reports_grpcapi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComplianceSummaryInput.ProtoReflect.Descriptor instead.
func (*GetComplianceSummaryInput) Descriptor() ([]byte, []int) {
	return file_reports_grpcapi_proto_rawDescGZIP(), []int{14}
}

func (x *GetComplianceSummaryInput) GetUuids() []string {
	if x != nil {
		return x.Uuids
	}
	return nil
}

func (x *GetComplianceSummaryInput) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetComplianceSummaryInput) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type GetComplianceSummaryOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start            int64         `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End              int64         `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	StatusNotes      []*StatusNote `protobuf:"bytes,3,rep,name=status_notes,json=statusNotes,proto3" json:"status_notes,omitempty"`
	Systems          []*System     `protobuf:"bytes,4,rep,name=systems,proto3" json:"systems,omitempty"`
	TimeNonCompliant []int64       `protobuf:"varint,5,rep,packed,name=time_non_compliant,json=timeNonCompliant,proto3" json:"time_non_compliant,omitempty"`
}

func (x *GetComplianceSummaryOutput) Reset() {
	*x = GetComplianceSummaryOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reports_grpcapi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComplianceSummaryOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComplianceSummaryOutput) ProtoMessage() {}

func (x *GetComplianceSummaryOutput) ProtoReflect() protoreflect.Message {
	mi := &file_reports_grpcapi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComplianceSummaryOutput.ProtoReflect.Descriptor instead.
func (*GetComplianceSummaryOutput) Descriptor() ([]byte, []int) {
	return file_reports_grpcapi_proto_rawDescGZIP(), []int{15}
}

func (x *GetComplianceSummaryOutput) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetComplianceSummaryOutput) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *GetComplianceSummaryOutput) GetStatusNotes() []*StatusNote {
	if x != nil {
		return x.StatusNotes
	}
	return nil
}

func (x *GetComplianceSummaryOutput) GetSystems() []*System {
	if x != nil {
		return x.Systems
	}
	return nil
}

func (x *GetComplianceSummaryOutput) GetTimeNonCompliant() []int64 {
	if x != nil {
		return x.TimeNonCompliant
	}
	return nil
}

type StatusNote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	Count  int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *StatusNote) Reset() {
	*x = StatusNote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reports_grpcapi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusNote) ProtoMessage() {}

func (x *StatusNote) ProtoReflect() protoreflect.Message {
	mi := &file_reports_grpcapi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusNote.ProtoReflect.Descriptor instead.
func (*StatusNote) Descriptor() ([]byte, []int) {
	return file_reports_grpcapi_proto_rawDescGZIP(), []int{16}
}

func (x *StatusNote) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *StatusNote) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type System struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaId       string `protobuf:"bytes,1,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	AreaName     string `protobuf:"bytes,2,opt,name=area_name,json=areaName,proto3" json:"area_name,omitempty"`
	Compliant    int64  `protobuf:"varint,3,opt,name=compliant,proto3" json:"compliant,omitempty"`
	NonCompliant int64  `protobuf:"varint,4,opt,name=non_compliant,json=nonCompliant,proto3" json:"non_compliant,omitempty"`
	Overdue      int64  `protobuf:"varint,5,opt,name=overdue,proto3" json:"overdue,omitempty"`
}

func (x *System) Reset() {
	*x = System{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reports_grpcapi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *System) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*System) ProtoMessage() {}

func (x *System) ProtoReflect() protoreflect.Message {
	mi := &file_reports_grpcapi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use System.ProtoReflect.Descriptor instead.
func (*System) Descriptor() ([]byte, []int) {
	return file_reports_grpcapi_proto_rawDescGZIP(), []int{17}
}

func (x *System) GetAreaId() string {
	if x != nil {
		return x.AreaId
	}
	return ""
}

func (x *System) GetAreaName() string {
	if x != nil {
		return x.AreaName
	}
	return ""
}

func (x *System) GetCompliant() int64 {
	if x != nil {
		return x.Compliant
	}
	return 0
}

func (x *System) GetNonCompliant() int64 {
	if x != nil {
		return x.NonCompliant
	}
	return 0
}

func (x *System) GetOverdue() int64 {
	if x != nil {
		return x.Overdue
	}
	return 0
}

var File_reports_grpcapi_proto protoreflect.FileDescriptor

var file_reports_grpcapi_proto_rawDesc = []byte{
	0x0a, 0x15, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x26, 0x0a, 0x0e, 0x44, 0x65, 0x65, 0x70, 0x50, 0x69, 0x6e,
	0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x3b, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3b, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x30, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x40, 0x0a,
	0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x9c, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x4e, 0x6f, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x2c,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x22, 0x4b, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x37, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xc9, 0x02, 0x0a, 0x0b, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x34, 0x0a, 0x16, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x38, 0x0a, 0x18, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x16, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x69, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x69, 0x73, 0x6b, 0x12, 0x3c, 0x0a, 0x1a, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x75, 0x69, 0x64, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x75, 0x69, 0x64, 0x73, 0x12, 0x26, 0x0a,
	0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x06, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x22, 0xc8, 0x02, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x72,
	0x69, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x69, 0x73, 0x6b, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x3e, 0x0a, 0x1c, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x69, 0x73, 0x6b, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x46,
	0x61, 0x75, 0x6c, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73,
	0x22, 0xc1, 0x03, 0x0a, 0x09, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x24, 0x0a,
	0x0e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73,
	0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x70,
	0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x55, 0x55, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x55, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x59, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x75, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75,
	0x75, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0xd5, 0x01, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x12, 0x36, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x6f,
	0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x0b,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6e,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x4e, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x74, 0x22, 0x3a, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x9b, 0x01, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72,
	0x65, 0x61, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x6e, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6e, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x75, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x75, 0x65, 0x32, 0x86,
	0x04, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x44, 0x65,
	0x65, 0x70, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x56, 0x6f, 0x69, 0x64, 0x1a, 0x17, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x44,
	0x65, 0x65, 0x70, 0x50, 0x69, 0x6e, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12,
	0x4f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x1d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00,
	0x12, 0x76, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12,
	0x29, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2a, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x1e, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1f, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x18, 0x2e,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x19, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x22, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x23, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x42, 0x38, 0x5a, 0x1c, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x4b, 0x46, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0xaa, 0x02, 0x17, 0x53, 0x4b, 0x46, 0x2e, 0x45, 0x6e,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_reports_grpcapi_proto_rawDescOnce sync.Once
	file_reports_grpcapi_proto_rawDescData = file_reports_grpcapi_proto_rawDesc
)

func file_reports_grpcapi_proto_rawDescGZIP() []byte {
	file_reports_grpcapi_proto_rawDescOnce.Do(func() {
		file_reports_grpcapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_reports_grpcapi_proto_rawDescData)
	})
	return file_reports_grpcapi_proto_rawDescData
}

var file_reports_grpcapi_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_reports_grpcapi_proto_goTypes = []interface{}{
	(*DeepPingOutput)(nil),                    // 0: reports.DeepPingOutput
	(*GetAssetHealthInput)(nil),               // 1: reports.GetAssetHealthInput
	(*GetAssetHealthOutput)(nil),              // 2: reports.GetAssetHealthOutput
	(*GetFunctionalLocationHealthInput)(nil),  // 3: reports.GetFunctionalLocationHealthInput
	(*GetFunctionalLocationHealthOutput)(nil), // 4: reports.GetFunctionalLocationHealthOutput
	(*GetComplianceLogInput)(nil),             // 5: reports.GetComplianceLogInput
	(*GetComplianceLogOutput)(nil),            // 6: reports.GetComplianceLogOutput
	(*ComplianceItem)(nil),                    // 7: reports.ComplianceItem
	(*GetReportsInput)(nil),                   // 8: reports.GetReportsInput
	(*GetReportsOutput)(nil),                  // 9: reports.GetReportsOutput
	(*ReportsItem)(nil),                       // 10: reports.ReportsItem
	(*Asset)(nil),                             // 11: reports.Asset
	(*FaultItem)(nil),                         // 12: reports.FaultItem
	(*RecommendedActionItem)(nil),             // 13: reports.RecommendedActionItem
	(*GetComplianceSummaryInput)(nil),         // 14: reports.GetComplianceSummaryInput
	(*GetComplianceSummaryOutput)(nil),        // 15: reports.GetComplianceSummaryOutput
	(*StatusNote)(nil),                        // 16: reports.StatusNote
	(*System)(nil),                            // 17: reports.System
	(*common.Void)(nil),                       // 18: common.Void
}
var file_reports_grpcapi_proto_depIdxs = []int32{
	7,  // 0: reports.GetComplianceLogOutput.compliance_list:type_name -> reports.ComplianceItem
	10, // 1: reports.GetReportsOutput.reports_list:type_name -> reports.ReportsItem
	11, // 2: reports.ReportsItem.assets:type_name -> reports.Asset
	12, // 3: reports.Asset.faults:type_name -> reports.FaultItem
	13, // 4: reports.FaultItem.recommended_actions:type_name -> reports.RecommendedActionItem
	16, // 5: reports.GetComplianceSummaryOutput.status_notes:type_name -> reports.StatusNote
	17, // 6: reports.GetComplianceSummaryOutput.systems:type_name -> reports.System
	18, // 7: reports.Reports.DeepPing:input_type -> common.Void
	1,  // 8: reports.Reports.GetAssetHealth:input_type -> reports.GetAssetHealthInput
	3,  // 9: reports.Reports.GetFunctionalLocationHealth:input_type -> reports.GetFunctionalLocationHealthInput
	5,  // 10: reports.Reports.GetComplianceLog:input_type -> reports.GetComplianceLogInput
	8,  // 11: reports.Reports.GetReports:input_type -> reports.GetReportsInput
	14, // 12: reports.Reports.GetComplianceSummary:input_type -> reports.GetComplianceSummaryInput
	0,  // 13: reports.Reports.DeepPing:output_type -> reports.DeepPingOutput
	2,  // 14: reports.Reports.GetAssetHealth:output_type -> reports.GetAssetHealthOutput
	4,  // 15: reports.Reports.GetFunctionalLocationHealth:output_type -> reports.GetFunctionalLocationHealthOutput
	6,  // 16: reports.Reports.GetComplianceLog:output_type -> reports.GetComplianceLogOutput
	9,  // 17: reports.Reports.GetReports:output_type -> reports.GetReportsOutput
	15, // 18: reports.Reports.GetComplianceSummary:output_type -> reports.GetComplianceSummaryOutput
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_reports_grpcapi_proto_init() }
func file_reports_grpcapi_proto_init() {
	if File_reports_grpcapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_reports_grpcapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeepPingOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reports_grpcapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssetHealthInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reports_grpcapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssetHealthOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reports_grpcapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFunctionalLocationHealthInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reports_grpcapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFunctionalLocationHealthOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reports_grpcapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComplianceLogInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reports_grpcapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComplianceLogOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reports_grpcapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplianceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reports_grpcapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reports_grpcapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reports_grpcapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportsItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reports_grpcapi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reports_grpcapi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaultItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reports_grpcapi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendedActionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reports_grpcapi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComplianceSummaryInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reports_grpcapi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComplianceSummaryOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reports_grpcapi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusNote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reports_grpcapi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*System); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_reports_grpcapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_reports_grpcapi_proto_goTypes,
		DependencyIndexes: file_reports_grpcapi_proto_depIdxs,
		MessageInfos:      file_reports_grpcapi_proto_msgTypes,
	}.Build()
	File_reports_grpcapi_proto = out.File
	file_reports_grpcapi_proto_rawDesc = nil
	file_reports_grpcapi_proto_goTypes = nil
	file_reports_grpcapi_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ReportsClient is the client API for Reports service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReportsClient interface {
	DeepPing(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*DeepPingOutput, error)
	GetAssetHealth(ctx context.Context, in *GetAssetHealthInput, opts ...grpc.CallOption) (*GetAssetHealthOutput, error)
	GetFunctionalLocationHealth(ctx context.Context, in *GetFunctionalLocationHealthInput, opts ...grpc.CallOption) (*GetFunctionalLocationHealthOutput, error)
	GetComplianceLog(ctx context.Context, in *GetComplianceLogInput, opts ...grpc.CallOption) (*GetComplianceLogOutput, error)
	GetReports(ctx context.Context, in *GetReportsInput, opts ...grpc.CallOption) (*GetReportsOutput, error)
	GetComplianceSummary(ctx context.Context, in *GetComplianceSummaryInput, opts ...grpc.CallOption) (*GetComplianceSummaryOutput, error)
}

type reportsClient struct {
	cc grpc.ClientConnInterface
}

func NewReportsClient(cc grpc.ClientConnInterface) ReportsClient {
	return &reportsClient{cc}
}

func (c *reportsClient) DeepPing(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*DeepPingOutput, error) {
	out := new(DeepPingOutput)
	err := c.cc.Invoke(ctx, "/reports.Reports/DeepPing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportsClient) GetAssetHealth(ctx context.Context, in *GetAssetHealthInput, opts ...grpc.CallOption) (*GetAssetHealthOutput, error) {
	out := new(GetAssetHealthOutput)
	err := c.cc.Invoke(ctx, "/reports.Reports/GetAssetHealth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportsClient) GetFunctionalLocationHealth(ctx context.Context, in *GetFunctionalLocationHealthInput, opts ...grpc.CallOption) (*GetFunctionalLocationHealthOutput, error) {
	out := new(GetFunctionalLocationHealthOutput)
	err := c.cc.Invoke(ctx, "/reports.Reports/GetFunctionalLocationHealth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportsClient) GetComplianceLog(ctx context.Context, in *GetComplianceLogInput, opts ...grpc.CallOption) (*GetComplianceLogOutput, error) {
	out := new(GetComplianceLogOutput)
	err := c.cc.Invoke(ctx, "/reports.Reports/GetComplianceLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportsClient) GetReports(ctx context.Context, in *GetReportsInput, opts ...grpc.CallOption) (*GetReportsOutput, error) {
	out := new(GetReportsOutput)
	err := c.cc.Invoke(ctx, "/reports.Reports/GetReports", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportsClient) GetComplianceSummary(ctx context.Context, in *GetComplianceSummaryInput, opts ...grpc.CallOption) (*GetComplianceSummaryOutput, error) {
	out := new(GetComplianceSummaryOutput)
	err := c.cc.Invoke(ctx, "/reports.Reports/GetComplianceSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReportsServer is the server API for Reports service.
type ReportsServer interface {
	DeepPing(context.Context, *common.Void) (*DeepPingOutput, error)
	GetAssetHealth(context.Context, *GetAssetHealthInput) (*GetAssetHealthOutput, error)
	GetFunctionalLocationHealth(context.Context, *GetFunctionalLocationHealthInput) (*GetFunctionalLocationHealthOutput, error)
	GetComplianceLog(context.Context, *GetComplianceLogInput) (*GetComplianceLogOutput, error)
	GetReports(context.Context, *GetReportsInput) (*GetReportsOutput, error)
	GetComplianceSummary(context.Context, *GetComplianceSummaryInput) (*GetComplianceSummaryOutput, error)
}

// UnimplementedReportsServer can be embedded to have forward compatible implementations.
type UnimplementedReportsServer struct {
}

func (*UnimplementedReportsServer) DeepPing(context.Context, *common.Void) (*DeepPingOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeepPing not implemented")
}
func (*UnimplementedReportsServer) GetAssetHealth(context.Context, *GetAssetHealthInput) (*GetAssetHealthOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAssetHealth not implemented")
}
func (*UnimplementedReportsServer) GetFunctionalLocationHealth(context.Context, *GetFunctionalLocationHealthInput) (*GetFunctionalLocationHealthOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFunctionalLocationHealth not implemented")
}
func (*UnimplementedReportsServer) GetComplianceLog(context.Context, *GetComplianceLogInput) (*GetComplianceLogOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComplianceLog not implemented")
}
func (*UnimplementedReportsServer) GetReports(context.Context, *GetReportsInput) (*GetReportsOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReports not implemented")
}
func (*UnimplementedReportsServer) GetComplianceSummary(context.Context, *GetComplianceSummaryInput) (*GetComplianceSummaryOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComplianceSummary not implemented")
}

func RegisterReportsServer(s *grpc.Server, srv ReportsServer) {
	s.RegisterService(&_Reports_serviceDesc, srv)
}

func _Reports_DeepPing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportsServer).DeepPing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reports.Reports/DeepPing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportsServer).DeepPing(ctx, req.(*common.Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reports_GetAssetHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetHealthInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportsServer).GetAssetHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reports.Reports/GetAssetHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportsServer).GetAssetHealth(ctx, req.(*GetAssetHealthInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reports_GetFunctionalLocationHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFunctionalLocationHealthInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportsServer).GetFunctionalLocationHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reports.Reports/GetFunctionalLocationHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportsServer).GetFunctionalLocationHealth(ctx, req.(*GetFunctionalLocationHealthInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reports_GetComplianceLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetComplianceLogInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportsServer).GetComplianceLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reports.Reports/GetComplianceLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportsServer).GetComplianceLog(ctx, req.(*GetComplianceLogInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reports_GetReports_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReportsInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportsServer).GetReports(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reports.Reports/GetReports",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportsServer).GetReports(ctx, req.(*GetReportsInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reports_GetComplianceSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetComplianceSummaryInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportsServer).GetComplianceSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reports.Reports/GetComplianceSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportsServer).GetComplianceSummary(ctx, req.(*GetComplianceSummaryInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _Reports_serviceDesc = grpc.ServiceDesc{
	ServiceName: "reports.Reports",
	HandlerType: (*ReportsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeepPing",
			Handler:    _Reports_DeepPing_Handler,
		},
		{
			MethodName: "GetAssetHealth",
			Handler:    _Reports_GetAssetHealth_Handler,
		},
		{
			MethodName: "GetFunctionalLocationHealth",
			Handler:    _Reports_GetFunctionalLocationHealth_Handler,
		},
		{
			MethodName: "GetComplianceLog",
			Handler:    _Reports_GetComplianceLog_Handler,
		},
		{
			MethodName: "GetReports",
			Handler:    _Reports_GetReports_Handler,
		},
		{
			MethodName: "GetComplianceSummary",
			Handler:    _Reports_GetComplianceSummary_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "reports/grpcapi.proto",
}
