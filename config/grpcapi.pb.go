// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config/grpcapi.proto

package grpcapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "github.com/SKF/proto/v2/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TargetType int32

const (
	TargetType_TARGET_GENERIC                         TargetType = 0
	TargetType_TARGET_QUICK_COLLECT_MEASUREMENT_POINT TargetType = 1
)

var TargetType_name = map[int32]string{
	0: "TARGET_GENERIC",
	1: "TARGET_QUICK_COLLECT_MEASUREMENT_POINT",
}
var TargetType_value = map[string]int32{
	"TARGET_GENERIC":                         0,
	"TARGET_QUICK_COLLECT_MEASUREMENT_POINT": 1,
}

func (x TargetType) String() string {
	return proto.EnumName(TargetType_name, int32(x))
}
func (TargetType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{0}
}

type SampleRate int32

const (
	SampleRate_RATE_UNKNOWN SampleRate = 0
	SampleRate_RATE_256     SampleRate = 1
	SampleRate_RATE_1280    SampleRate = 2
	SampleRate_RATE_2560    SampleRate = 3
	SampleRate_RATE_5120    SampleRate = 4
	SampleRate_RATE_12800   SampleRate = 5
	SampleRate_RATE_25600   SampleRate = 6
	SampleRate_RATE_51200   SampleRate = 7
	SampleRate_RATE_102400  SampleRate = 8
)

var SampleRate_name = map[int32]string{
	0: "RATE_UNKNOWN",
	1: "RATE_256",
	2: "RATE_1280",
	3: "RATE_2560",
	4: "RATE_5120",
	5: "RATE_12800",
	6: "RATE_25600",
	7: "RATE_51200",
	8: "RATE_102400",
}
var SampleRate_value = map[string]int32{
	"RATE_UNKNOWN": 0,
	"RATE_256":     1,
	"RATE_1280":    2,
	"RATE_2560":    3,
	"RATE_5120":    4,
	"RATE_12800":   5,
	"RATE_25600":   6,
	"RATE_51200":   7,
	"RATE_102400":  8,
}

func (x SampleRate) String() string {
	return proto.EnumName(SampleRate_name, int32(x))
}
func (SampleRate) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{1}
}

type SampleAmount int32

const (
	SampleAmount_AMOUNT_UNKNOWN SampleAmount = 0
	SampleAmount_AMOUNT_256     SampleAmount = 1
	SampleAmount_AMOUNT_512     SampleAmount = 2
	SampleAmount_AMOUNT_1024    SampleAmount = 3
	SampleAmount_AMOUNT_2048    SampleAmount = 4
	SampleAmount_AMOUNT_4096    SampleAmount = 5
	SampleAmount_AMOUNT_8192    SampleAmount = 6
)

var SampleAmount_name = map[int32]string{
	0: "AMOUNT_UNKNOWN",
	1: "AMOUNT_256",
	2: "AMOUNT_512",
	3: "AMOUNT_1024",
	4: "AMOUNT_2048",
	5: "AMOUNT_4096",
	6: "AMOUNT_8192",
}
var SampleAmount_value = map[string]int32{
	"AMOUNT_UNKNOWN": 0,
	"AMOUNT_256":     1,
	"AMOUNT_512":     2,
	"AMOUNT_1024":    3,
	"AMOUNT_2048":    4,
	"AMOUNT_4096":    5,
	"AMOUNT_8192":    6,
}

func (x SampleAmount) String() string {
	return proto.EnumName(SampleAmount_name, int32(x))
}
func (SampleAmount) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{2}
}

type EnvelopeBandSelection int32

const (
	EnvelopeBandSelection_BAND_UNKNOWN EnvelopeBandSelection = 0
	EnvelopeBandSelection_BAND_1       EnvelopeBandSelection = 1
	EnvelopeBandSelection_BAND_2       EnvelopeBandSelection = 2
	EnvelopeBandSelection_BAND_3       EnvelopeBandSelection = 3
)

var EnvelopeBandSelection_name = map[int32]string{
	0: "BAND_UNKNOWN",
	1: "BAND_1",
	2: "BAND_2",
	3: "BAND_3",
}
var EnvelopeBandSelection_value = map[string]int32{
	"BAND_UNKNOWN": 0,
	"BAND_1":       1,
	"BAND_2":       2,
	"BAND_3":       3,
}

func (x EnvelopeBandSelection) String() string {
	return proto.EnumName(EnvelopeBandSelection_name, int32(x))
}
func (EnvelopeBandSelection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{3}
}

type ExternalSensorEngineeringUnits int32

const (
	ExternalSensorEngineeringUnits_UNIT_UNKNOWN             ExternalSensorEngineeringUnits = 0
	ExternalSensorEngineeringUnits_UNIT_ACCELERATION_EUS_GS ExternalSensorEngineeringUnits = 1
)

var ExternalSensorEngineeringUnits_name = map[int32]string{
	0: "UNIT_UNKNOWN",
	1: "UNIT_ACCELERATION_EUS_GS",
}
var ExternalSensorEngineeringUnits_value = map[string]int32{
	"UNIT_UNKNOWN":             0,
	"UNIT_ACCELERATION_EUS_GS": 1,
}

func (x ExternalSensorEngineeringUnits) String() string {
	return proto.EnumName(ExternalSensorEngineeringUnits_name, int32(x))
}
func (ExternalSensorEngineeringUnits) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{4}
}

type ExternalSensorSensitivity int32

const (
	ExternalSensorSensitivity_SENSITIVITY_UNKNOWN       ExternalSensorSensitivity = 0
	ExternalSensorSensitivity_SENSITIVITY_100_MV_PER_EU ExternalSensorSensitivity = 1
)

var ExternalSensorSensitivity_name = map[int32]string{
	0: "SENSITIVITY_UNKNOWN",
	1: "SENSITIVITY_100_MV_PER_EU",
}
var ExternalSensorSensitivity_value = map[string]int32{
	"SENSITIVITY_UNKNOWN":       0,
	"SENSITIVITY_100_MV_PER_EU": 1,
}

func (x ExternalSensorSensitivity) String() string {
	return proto.EnumName(ExternalSensorSensitivity_name, int32(x))
}
func (ExternalSensorSensitivity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{5}
}

type ExternalSensorICP int32

const (
	ExternalSensorICP_ICP_UNKNOWN              ExternalSensorICP = 0
	ExternalSensorICP_ICP_REQUIRED_WHEN_IN_USE ExternalSensorICP = 1
)

var ExternalSensorICP_name = map[int32]string{
	0: "ICP_UNKNOWN",
	1: "ICP_REQUIRED_WHEN_IN_USE",
}
var ExternalSensorICP_value = map[string]int32{
	"ICP_UNKNOWN":              0,
	"ICP_REQUIRED_WHEN_IN_USE": 1,
}

func (x ExternalSensorICP) String() string {
	return proto.EnumName(ExternalSensorICP_name, int32(x))
}
func (ExternalSensorICP) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{6}
}

type ViewSignalType int32

const (
	ViewSignalType_VIEW_SIGNAL_UNKNOWN           ViewSignalType = 0
	ViewSignalType_VIEW_SIGNAL_SPECTRUM_ONLY     ViewSignalType = 1
	ViewSignalType_VIEW_SIGNAL_SPECTRUM_AND_TIME ViewSignalType = 2
)

var ViewSignalType_name = map[int32]string{
	0: "VIEW_SIGNAL_UNKNOWN",
	1: "VIEW_SIGNAL_SPECTRUM_ONLY",
	2: "VIEW_SIGNAL_SPECTRUM_AND_TIME",
}
var ViewSignalType_value = map[string]int32{
	"VIEW_SIGNAL_UNKNOWN":           0,
	"VIEW_SIGNAL_SPECTRUM_ONLY":     1,
	"VIEW_SIGNAL_SPECTRUM_AND_TIME": 2,
}

func (x ViewSignalType) String() string {
	return proto.EnumName(ViewSignalType_name, int32(x))
}
func (ViewSignalType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{7}
}

type YAxisUnits int32

const (
	YAxisUnits_Y_AXIS_UNKNOWN                YAxisUnits = 0
	YAxisUnits_Y_AXIS_ACCELERATION_IN_GS     YAxisUnits = 1
	YAxisUnits_Y_AXIS_VELOCITY_IN_MM_PER_SEC YAxisUnits = 2
	YAxisUnits_Y_AXIS_ENVELOPED_GE_IN_GES    YAxisUnits = 3
)

var YAxisUnits_name = map[int32]string{
	0: "Y_AXIS_UNKNOWN",
	1: "Y_AXIS_ACCELERATION_IN_GS",
	2: "Y_AXIS_VELOCITY_IN_MM_PER_SEC",
	3: "Y_AXIS_ENVELOPED_GE_IN_GES",
}
var YAxisUnits_value = map[string]int32{
	"Y_AXIS_UNKNOWN":                0,
	"Y_AXIS_ACCELERATION_IN_GS":     1,
	"Y_AXIS_VELOCITY_IN_MM_PER_SEC": 2,
	"Y_AXIS_ENVELOPED_GE_IN_GES":    3,
}

func (x YAxisUnits) String() string {
	return proto.EnumName(YAxisUnits_name, int32(x))
}
func (YAxisUnits) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{8}
}

type XAxisUnits int32

const (
	XAxisUnits_X_AXIS_UNKNONW         XAxisUnits = 0
	XAxisUnits_X_AXIS_FREQUENCY_IN_HZ XAxisUnits = 1
)

var XAxisUnits_name = map[int32]string{
	0: "X_AXIS_UNKNONW",
	1: "X_AXIS_FREQUENCY_IN_HZ",
}
var XAxisUnits_value = map[string]int32{
	"X_AXIS_UNKNONW":         0,
	"X_AXIS_FREQUENCY_IN_HZ": 1,
}

func (x XAxisUnits) String() string {
	return proto.EnumName(XAxisUnits_name, int32(x))
}
func (XAxisUnits) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{9}
}

type YAxisDisplay int32

const (
	YAxisDisplay_Y_AXIS_DISPLAY_UNKNOWN  YAxisDisplay = 0
	YAxisDisplay_Y_AXIS_DISPLAY_LINEARLY YAxisDisplay = 1
)

var YAxisDisplay_name = map[int32]string{
	0: "Y_AXIS_DISPLAY_UNKNOWN",
	1: "Y_AXIS_DISPLAY_LINEARLY",
}
var YAxisDisplay_value = map[string]int32{
	"Y_AXIS_DISPLAY_UNKNOWN":  0,
	"Y_AXIS_DISPLAY_LINEARLY": 1,
}

func (x YAxisDisplay) String() string {
	return proto.EnumName(YAxisDisplay_name, int32(x))
}
func (YAxisDisplay) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{10}
}

type InputRange int32

const (
	InputRange_RANGE_UNKNOWN InputRange = 0
	InputRange_RANGE_100_GS  InputRange = 1
)

var InputRange_name = map[int32]string{
	0: "RANGE_UNKNOWN",
	1: "RANGE_100_GS",
}
var InputRange_value = map[string]int32{
	"RANGE_UNKNOWN": 0,
	"RANGE_100_GS":  1,
}

func (x InputRange) String() string {
	return proto.EnumName(InputRange_name, int32(x))
}
func (InputRange) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{11}
}

type DetectionType int32

const (
	DetectionType_DETECTION_UNKNOWN                          DetectionType = 0
	DetectionType_DETECTION_RMS                              DetectionType = 1
	DetectionType_DETECTION_PEAK_CALCULATED_FROM_RMS         DetectionType = 2
	DetectionType_DETECTION_PEAK_TO_PEAK_CALCULATED_FROM_RMS DetectionType = 3
	DetectionType_DETECTION_TRUE_PEAK_FROM_PEAK_TO_PEAK      DetectionType = 4
	DetectionType_DETECTION_TRUE_PEAK_TO_PEAK                DetectionType = 5
)

var DetectionType_name = map[int32]string{
	0: "DETECTION_UNKNOWN",
	1: "DETECTION_RMS",
	2: "DETECTION_PEAK_CALCULATED_FROM_RMS",
	3: "DETECTION_PEAK_TO_PEAK_CALCULATED_FROM_RMS",
	4: "DETECTION_TRUE_PEAK_FROM_PEAK_TO_PEAK",
	5: "DETECTION_TRUE_PEAK_TO_PEAK",
}
var DetectionType_value = map[string]int32{
	"DETECTION_UNKNOWN":                          0,
	"DETECTION_RMS":                              1,
	"DETECTION_PEAK_CALCULATED_FROM_RMS":         2,
	"DETECTION_PEAK_TO_PEAK_CALCULATED_FROM_RMS": 3,
	"DETECTION_TRUE_PEAK_FROM_PEAK_TO_PEAK":      4,
	"DETECTION_TRUE_PEAK_TO_PEAK":                5,
}

func (x DetectionType) String() string {
	return proto.EnumName(DetectionType_name, int32(x))
}
func (DetectionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{12}
}

type WindowType int32

const (
	WindowType_WINDOW_UNKNOWN WindowType = 0
	WindowType_WINDOW_HANNING WindowType = 1
)

var WindowType_name = map[int32]string{
	0: "WINDOW_UNKNOWN",
	1: "WINDOW_HANNING",
}
var WindowType_value = map[string]int32{
	"WINDOW_UNKNOWN": 0,
	"WINDOW_HANNING": 1,
}

func (x WindowType) String() string {
	return proto.EnumName(WindowType_name, int32(x))
}
func (WindowType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{13}
}

type HighPassFilter int32

const (
	HighPassFilter_FILTER_UNKNOWN HighPassFilter = 0
	HighPassFilter_FILTER_OFF     HighPassFilter = 1
	HighPassFilter_FILTER_2_HZ    HighPassFilter = 2
	HighPassFilter_FILTER_10_HZ   HighPassFilter = 3
	HighPassFilter_FILTER_70_HZ   HighPassFilter = 4
)

var HighPassFilter_name = map[int32]string{
	0: "FILTER_UNKNOWN",
	1: "FILTER_OFF",
	2: "FILTER_2_HZ",
	3: "FILTER_10_HZ",
	4: "FILTER_70_HZ",
}
var HighPassFilter_value = map[string]int32{
	"FILTER_UNKNOWN": 0,
	"FILTER_OFF":     1,
	"FILTER_2_HZ":    2,
	"FILTER_10_HZ":   3,
	"FILTER_70_HZ":   4,
}

func (x HighPassFilter) String() string {
	return proto.EnumName(HighPassFilter_name, int32(x))
}
func (HighPassFilter) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{14}
}

type Temperature int32

const (
	Temperature_TEMPERATURE_UNKNOWN            Temperature = 0
	Temperature_TEMPERATURE_DEGREES_FAHRENHEIT Temperature = 1
	Temperature_TEMPERATURE_DEGREES_CELCIUS    Temperature = 2
	Temperature_TEMPERATURE_DEGREES_KELVIN     Temperature = 3
)

var Temperature_name = map[int32]string{
	0: "TEMPERATURE_UNKNOWN",
	1: "TEMPERATURE_DEGREES_FAHRENHEIT",
	2: "TEMPERATURE_DEGREES_CELCIUS",
	3: "TEMPERATURE_DEGREES_KELVIN",
}
var Temperature_value = map[string]int32{
	"TEMPERATURE_UNKNOWN":            0,
	"TEMPERATURE_DEGREES_FAHRENHEIT": 1,
	"TEMPERATURE_DEGREES_CELCIUS":    2,
	"TEMPERATURE_DEGREES_KELVIN":     3,
}

func (x Temperature) String() string {
	return proto.EnumName(Temperature_name, int32(x))
}
func (Temperature) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{15}
}

type ExternalSensorUsage int32

const (
	ExternalSensorUsage_ExternalSensorUsage_DISABLED ExternalSensorUsage = 0
	ExternalSensorUsage_ExternalSensorUsage_ENABLED  ExternalSensorUsage = 1
)

var ExternalSensorUsage_name = map[int32]string{
	0: "ExternalSensorUsage_DISABLED",
	1: "ExternalSensorUsage_ENABLED",
}
var ExternalSensorUsage_value = map[string]int32{
	"ExternalSensorUsage_DISABLED": 0,
	"ExternalSensorUsage_ENABLED":  1,
}

func (x ExternalSensorUsage) String() string {
	return proto.EnumName(ExternalSensorUsage_name, int32(x))
}
func (ExternalSensorUsage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{16}
}

type SpecificationRequest struct {
	TargetType           TargetType `protobuf:"varint,1,opt,name=targetType,proto3,enum=grpcapi.TargetType" json:"targetType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SpecificationRequest) Reset()         { *m = SpecificationRequest{} }
func (m *SpecificationRequest) String() string { return proto.CompactTextString(m) }
func (*SpecificationRequest) ProtoMessage()    {}
func (*SpecificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{0}
}
func (m *SpecificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpecificationRequest.Unmarshal(m, b)
}
func (m *SpecificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpecificationRequest.Marshal(b, m, deterministic)
}
func (dst *SpecificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpecificationRequest.Merge(dst, src)
}
func (m *SpecificationRequest) XXX_Size() int {
	return xxx_messageInfo_SpecificationRequest.Size(m)
}
func (m *SpecificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SpecificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SpecificationRequest proto.InternalMessageInfo

func (m *SpecificationRequest) GetTargetType() TargetType {
	if m != nil {
		return m.TargetType
	}
	return TargetType_TARGET_GENERIC
}

type SpecificationResponse struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	VersionID            string   `protobuf:"bytes,2,opt,name=versionID,proto3" json:"versionID,omitempty"`
	CreatedAtDate        string   `protobuf:"bytes,3,opt,name=createdAtDate,proto3" json:"createdAtDate,omitempty"`
	Specification        []byte   `protobuf:"bytes,4,opt,name=specification,proto3" json:"specification,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpecificationResponse) Reset()         { *m = SpecificationResponse{} }
func (m *SpecificationResponse) String() string { return proto.CompactTextString(m) }
func (*SpecificationResponse) ProtoMessage()    {}
func (*SpecificationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{1}
}
func (m *SpecificationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpecificationResponse.Unmarshal(m, b)
}
func (m *SpecificationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpecificationResponse.Marshal(b, m, deterministic)
}
func (dst *SpecificationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpecificationResponse.Merge(dst, src)
}
func (m *SpecificationResponse) XXX_Size() int {
	return xxx_messageInfo_SpecificationResponse.Size(m)
}
func (m *SpecificationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SpecificationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SpecificationResponse proto.InternalMessageInfo

func (m *SpecificationResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *SpecificationResponse) GetVersionID() string {
	if m != nil {
		return m.VersionID
	}
	return ""
}

func (m *SpecificationResponse) GetCreatedAtDate() string {
	if m != nil {
		return m.CreatedAtDate
	}
	return ""
}

func (m *SpecificationResponse) GetSpecification() []byte {
	if m != nil {
		return m.Specification
	}
	return nil
}

type ConfigRequest struct {
	ConfigIDs            []string `protobuf:"bytes,1,rep,name=configIDs,proto3" json:"configIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigRequest) Reset()         { *m = ConfigRequest{} }
func (m *ConfigRequest) String() string { return proto.CompactTextString(m) }
func (*ConfigRequest) ProtoMessage()    {}
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{2}
}
func (m *ConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigRequest.Unmarshal(m, b)
}
func (m *ConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigRequest.Marshal(b, m, deterministic)
}
func (dst *ConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigRequest.Merge(dst, src)
}
func (m *ConfigRequest) XXX_Size() int {
	return xxx_messageInfo_ConfigRequest.Size(m)
}
func (m *ConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigRequest proto.InternalMessageInfo

func (m *ConfigRequest) GetConfigIDs() []string {
	if m != nil {
		return m.ConfigIDs
	}
	return nil
}

type ConfigsResponse struct {
	Configs              []*ConfigResponse `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ConfigsResponse) Reset()         { *m = ConfigsResponse{} }
func (m *ConfigsResponse) String() string { return proto.CompactTextString(m) }
func (*ConfigsResponse) ProtoMessage()    {}
func (*ConfigsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{3}
}
func (m *ConfigsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigsResponse.Unmarshal(m, b)
}
func (m *ConfigsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigsResponse.Marshal(b, m, deterministic)
}
func (dst *ConfigsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigsResponse.Merge(dst, src)
}
func (m *ConfigsResponse) XXX_Size() int {
	return xxx_messageInfo_ConfigsResponse.Size(m)
}
func (m *ConfigsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigsResponse proto.InternalMessageInfo

func (m *ConfigsResponse) GetConfigs() []*ConfigResponse {
	if m != nil {
		return m.Configs
	}
	return nil
}

type Configs struct {
	ConfigQC             *QCMeasurementPointConfig `protobuf:"bytes,1,opt,name=configQC,proto3" json:"configQC,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Configs) Reset()         { *m = Configs{} }
func (m *Configs) String() string { return proto.CompactTextString(m) }
func (*Configs) ProtoMessage()    {}
func (*Configs) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{4}
}
func (m *Configs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Configs.Unmarshal(m, b)
}
func (m *Configs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Configs.Marshal(b, m, deterministic)
}
func (dst *Configs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configs.Merge(dst, src)
}
func (m *Configs) XXX_Size() int {
	return xxx_messageInfo_Configs.Size(m)
}
func (m *Configs) XXX_DiscardUnknown() {
	xxx_messageInfo_Configs.DiscardUnknown(m)
}

var xxx_messageInfo_Configs proto.InternalMessageInfo

func (m *Configs) GetConfigQC() *QCMeasurementPointConfig {
	if m != nil {
		return m.ConfigQC
	}
	return nil
}

type ConfigResponse struct {
	ConfigID             string                    `protobuf:"bytes,1,opt,name=configID,proto3" json:"configID,omitempty"`
	VersionID            string                    `protobuf:"bytes,2,opt,name=versionID,proto3" json:"versionID,omitempty"`
	CreatedAtDate        string                    `protobuf:"bytes,3,opt,name=createdAtDate,proto3" json:"createdAtDate,omitempty"`
	TargetID             []string                  `protobuf:"bytes,4,rep,name=targetID,proto3" json:"targetID,omitempty"`
	ConfigQC             *QCMeasurementPointConfig `protobuf:"bytes,5,opt,name=configQC,proto3" json:"configQC,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ConfigResponse) Reset()         { *m = ConfigResponse{} }
func (m *ConfigResponse) String() string { return proto.CompactTextString(m) }
func (*ConfigResponse) ProtoMessage()    {}
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{5}
}
func (m *ConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigResponse.Unmarshal(m, b)
}
func (m *ConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigResponse.Marshal(b, m, deterministic)
}
func (dst *ConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigResponse.Merge(dst, src)
}
func (m *ConfigResponse) XXX_Size() int {
	return xxx_messageInfo_ConfigResponse.Size(m)
}
func (m *ConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigResponse proto.InternalMessageInfo

func (m *ConfigResponse) GetConfigID() string {
	if m != nil {
		return m.ConfigID
	}
	return ""
}

func (m *ConfigResponse) GetVersionID() string {
	if m != nil {
		return m.VersionID
	}
	return ""
}

func (m *ConfigResponse) GetCreatedAtDate() string {
	if m != nil {
		return m.CreatedAtDate
	}
	return ""
}

func (m *ConfigResponse) GetTargetID() []string {
	if m != nil {
		return m.TargetID
	}
	return nil
}

func (m *ConfigResponse) GetConfigQC() *QCMeasurementPointConfig {
	if m != nil {
		return m.ConfigQC
	}
	return nil
}

type LatestConfigRequest struct {
	TargetIDs            []string `protobuf:"bytes,1,rep,name=targetIDs,proto3" json:"targetIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LatestConfigRequest) Reset()         { *m = LatestConfigRequest{} }
func (m *LatestConfigRequest) String() string { return proto.CompactTextString(m) }
func (*LatestConfigRequest) ProtoMessage()    {}
func (*LatestConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{6}
}
func (m *LatestConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatestConfigRequest.Unmarshal(m, b)
}
func (m *LatestConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatestConfigRequest.Marshal(b, m, deterministic)
}
func (dst *LatestConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatestConfigRequest.Merge(dst, src)
}
func (m *LatestConfigRequest) XXX_Size() int {
	return xxx_messageInfo_LatestConfigRequest.Size(m)
}
func (m *LatestConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LatestConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LatestConfigRequest proto.InternalMessageInfo

func (m *LatestConfigRequest) GetTargetIDs() []string {
	if m != nil {
		return m.TargetIDs
	}
	return nil
}

type SetConfigRequest struct {
	ConfigQC             *QCMeasurementPointConfig `protobuf:"bytes,2,opt,name=configQC,proto3" json:"configQC,omitempty"`
	TargetIDs            []string                  `protobuf:"bytes,1,rep,name=targetIDs,proto3" json:"targetIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SetConfigRequest) Reset()         { *m = SetConfigRequest{} }
func (m *SetConfigRequest) String() string { return proto.CompactTextString(m) }
func (*SetConfigRequest) ProtoMessage()    {}
func (*SetConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{7}
}
func (m *SetConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigRequest.Unmarshal(m, b)
}
func (m *SetConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigRequest.Marshal(b, m, deterministic)
}
func (dst *SetConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigRequest.Merge(dst, src)
}
func (m *SetConfigRequest) XXX_Size() int {
	return xxx_messageInfo_SetConfigRequest.Size(m)
}
func (m *SetConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigRequest proto.InternalMessageInfo

func (m *SetConfigRequest) GetConfigQC() *QCMeasurementPointConfig {
	if m != nil {
		return m.ConfigQC
	}
	return nil
}

func (m *SetConfigRequest) GetTargetIDs() []string {
	if m != nil {
		return m.TargetIDs
	}
	return nil
}

type QCMeasurementPointConfig struct {
	SampleRate                     SampleRate                     `protobuf:"varint,1,opt,name=sampleRate,proto3,enum=grpcapi.SampleRate" json:"sampleRate,omitempty"`
	SampleAmount                   SampleAmount                   `protobuf:"varint,2,opt,name=sampleAmount,proto3,enum=grpcapi.SampleAmount" json:"sampleAmount,omitempty"`
	EnvelopeBandSelection          EnvelopeBandSelection          `protobuf:"varint,5,opt,name=envelopeBandSelection,proto3,enum=grpcapi.EnvelopeBandSelection" json:"envelopeBandSelection,omitempty"`
	ExternalSensorEngineeringUnits ExternalSensorEngineeringUnits `protobuf:"varint,6,opt,name=externalSensorEngineeringUnits,proto3,enum=grpcapi.ExternalSensorEngineeringUnits" json:"externalSensorEngineeringUnits,omitempty"`
	ExternalSensorSensitivity      ExternalSensorSensitivity      `protobuf:"varint,7,opt,name=externalSensorSensitivity,proto3,enum=grpcapi.ExternalSensorSensitivity" json:"externalSensorSensitivity,omitempty"`
	ExternalSensorICP              ExternalSensorICP              `protobuf:"varint,8,opt,name=externalSensorICP,proto3,enum=grpcapi.ExternalSensorICP" json:"externalSensorICP,omitempty"`
	ViewSignalType                 ViewSignalType                 `protobuf:"varint,9,opt,name=viewSignalType,proto3,enum=grpcapi.ViewSignalType" json:"viewSignalType,omitempty"`
	YAxisUnits                     YAxisUnits                     `protobuf:"varint,10,opt,name=yAxisUnits,proto3,enum=grpcapi.YAxisUnits" json:"yAxisUnits,omitempty"`
	XAxisUnits                     XAxisUnits                     `protobuf:"varint,11,opt,name=XAxisUnits,proto3,enum=grpcapi.XAxisUnits" json:"XAxisUnits,omitempty"`
	YAxisDisplay                   YAxisDisplay                   `protobuf:"varint,12,opt,name=yAxisDisplay,proto3,enum=grpcapi.YAxisDisplay" json:"yAxisDisplay,omitempty"`
	InputRange                     InputRange                     `protobuf:"varint,13,opt,name=inputRange,proto3,enum=grpcapi.InputRange" json:"inputRange,omitempty"`
	DetectionType                  DetectionType                  `protobuf:"varint,14,opt,name=detectionType,proto3,enum=grpcapi.DetectionType" json:"detectionType,omitempty"`
	WindowType                     WindowType                     `protobuf:"varint,18,opt,name=windowType,proto3,enum=grpcapi.WindowType" json:"windowType,omitempty"`
	HighPassFilter                 HighPassFilter                 `protobuf:"varint,19,opt,name=highPassFilter,proto3,enum=grpcapi.HighPassFilter" json:"highPassFilter,omitempty"`
	Temperature                    Temperature                    `protobuf:"varint,20,opt,name=temperature,proto3,enum=grpcapi.Temperature" json:"temperature,omitempty"`
	ExternalSensorUsage            ExternalSensorUsage            `protobuf:"varint,21,opt,name=externalSensorUsage,proto3,enum=grpcapi.ExternalSensorUsage" json:"externalSensorUsage,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}                       `json:"-"`
	XXX_unrecognized               []byte                         `json:"-"`
	XXX_sizecache                  int32                          `json:"-"`
}

func (m *QCMeasurementPointConfig) Reset()         { *m = QCMeasurementPointConfig{} }
func (m *QCMeasurementPointConfig) String() string { return proto.CompactTextString(m) }
func (*QCMeasurementPointConfig) ProtoMessage()    {}
func (*QCMeasurementPointConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpcapi_4c08d17d77c79ec0, []int{8}
}
func (m *QCMeasurementPointConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QCMeasurementPointConfig.Unmarshal(m, b)
}
func (m *QCMeasurementPointConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QCMeasurementPointConfig.Marshal(b, m, deterministic)
}
func (dst *QCMeasurementPointConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QCMeasurementPointConfig.Merge(dst, src)
}
func (m *QCMeasurementPointConfig) XXX_Size() int {
	return xxx_messageInfo_QCMeasurementPointConfig.Size(m)
}
func (m *QCMeasurementPointConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_QCMeasurementPointConfig.DiscardUnknown(m)
}

var xxx_messageInfo_QCMeasurementPointConfig proto.InternalMessageInfo

func (m *QCMeasurementPointConfig) GetSampleRate() SampleRate {
	if m != nil {
		return m.SampleRate
	}
	return SampleRate_RATE_UNKNOWN
}

func (m *QCMeasurementPointConfig) GetSampleAmount() SampleAmount {
	if m != nil {
		return m.SampleAmount
	}
	return SampleAmount_AMOUNT_UNKNOWN
}

func (m *QCMeasurementPointConfig) GetEnvelopeBandSelection() EnvelopeBandSelection {
	if m != nil {
		return m.EnvelopeBandSelection
	}
	return EnvelopeBandSelection_BAND_UNKNOWN
}

func (m *QCMeasurementPointConfig) GetExternalSensorEngineeringUnits() ExternalSensorEngineeringUnits {
	if m != nil {
		return m.ExternalSensorEngineeringUnits
	}
	return ExternalSensorEngineeringUnits_UNIT_UNKNOWN
}

func (m *QCMeasurementPointConfig) GetExternalSensorSensitivity() ExternalSensorSensitivity {
	if m != nil {
		return m.ExternalSensorSensitivity
	}
	return ExternalSensorSensitivity_SENSITIVITY_UNKNOWN
}

func (m *QCMeasurementPointConfig) GetExternalSensorICP() ExternalSensorICP {
	if m != nil {
		return m.ExternalSensorICP
	}
	return ExternalSensorICP_ICP_UNKNOWN
}

func (m *QCMeasurementPointConfig) GetViewSignalType() ViewSignalType {
	if m != nil {
		return m.ViewSignalType
	}
	return ViewSignalType_VIEW_SIGNAL_UNKNOWN
}

func (m *QCMeasurementPointConfig) GetYAxisUnits() YAxisUnits {
	if m != nil {
		return m.YAxisUnits
	}
	return YAxisUnits_Y_AXIS_UNKNOWN
}

func (m *QCMeasurementPointConfig) GetXAxisUnits() XAxisUnits {
	if m != nil {
		return m.XAxisUnits
	}
	return XAxisUnits_X_AXIS_UNKNONW
}

func (m *QCMeasurementPointConfig) GetYAxisDisplay() YAxisDisplay {
	if m != nil {
		return m.YAxisDisplay
	}
	return YAxisDisplay_Y_AXIS_DISPLAY_UNKNOWN
}

func (m *QCMeasurementPointConfig) GetInputRange() InputRange {
	if m != nil {
		return m.InputRange
	}
	return InputRange_RANGE_UNKNOWN
}

func (m *QCMeasurementPointConfig) GetDetectionType() DetectionType {
	if m != nil {
		return m.DetectionType
	}
	return DetectionType_DETECTION_UNKNOWN
}

func (m *QCMeasurementPointConfig) GetWindowType() WindowType {
	if m != nil {
		return m.WindowType
	}
	return WindowType_WINDOW_UNKNOWN
}

func (m *QCMeasurementPointConfig) GetHighPassFilter() HighPassFilter {
	if m != nil {
		return m.HighPassFilter
	}
	return HighPassFilter_FILTER_UNKNOWN
}

func (m *QCMeasurementPointConfig) GetTemperature() Temperature {
	if m != nil {
		return m.Temperature
	}
	return Temperature_TEMPERATURE_UNKNOWN
}

func (m *QCMeasurementPointConfig) GetExternalSensorUsage() ExternalSensorUsage {
	if m != nil {
		return m.ExternalSensorUsage
	}
	return ExternalSensorUsage_ExternalSensorUsage_DISABLED
}

func init() {
	proto.RegisterType((*SpecificationRequest)(nil), "grpcapi.SpecificationRequest")
	proto.RegisterType((*SpecificationResponse)(nil), "grpcapi.SpecificationResponse")
	proto.RegisterType((*ConfigRequest)(nil), "grpcapi.ConfigRequest")
	proto.RegisterType((*ConfigsResponse)(nil), "grpcapi.ConfigsResponse")
	proto.RegisterType((*Configs)(nil), "grpcapi.Configs")
	proto.RegisterType((*ConfigResponse)(nil), "grpcapi.ConfigResponse")
	proto.RegisterType((*LatestConfigRequest)(nil), "grpcapi.LatestConfigRequest")
	proto.RegisterType((*SetConfigRequest)(nil), "grpcapi.SetConfigRequest")
	proto.RegisterType((*QCMeasurementPointConfig)(nil), "grpcapi.QCMeasurementPointConfig")
	proto.RegisterEnum("grpcapi.TargetType", TargetType_name, TargetType_value)
	proto.RegisterEnum("grpcapi.SampleRate", SampleRate_name, SampleRate_value)
	proto.RegisterEnum("grpcapi.SampleAmount", SampleAmount_name, SampleAmount_value)
	proto.RegisterEnum("grpcapi.EnvelopeBandSelection", EnvelopeBandSelection_name, EnvelopeBandSelection_value)
	proto.RegisterEnum("grpcapi.ExternalSensorEngineeringUnits", ExternalSensorEngineeringUnits_name, ExternalSensorEngineeringUnits_value)
	proto.RegisterEnum("grpcapi.ExternalSensorSensitivity", ExternalSensorSensitivity_name, ExternalSensorSensitivity_value)
	proto.RegisterEnum("grpcapi.ExternalSensorICP", ExternalSensorICP_name, ExternalSensorICP_value)
	proto.RegisterEnum("grpcapi.ViewSignalType", ViewSignalType_name, ViewSignalType_value)
	proto.RegisterEnum("grpcapi.YAxisUnits", YAxisUnits_name, YAxisUnits_value)
	proto.RegisterEnum("grpcapi.XAxisUnits", XAxisUnits_name, XAxisUnits_value)
	proto.RegisterEnum("grpcapi.YAxisDisplay", YAxisDisplay_name, YAxisDisplay_value)
	proto.RegisterEnum("grpcapi.InputRange", InputRange_name, InputRange_value)
	proto.RegisterEnum("grpcapi.DetectionType", DetectionType_name, DetectionType_value)
	proto.RegisterEnum("grpcapi.WindowType", WindowType_name, WindowType_value)
	proto.RegisterEnum("grpcapi.HighPassFilter", HighPassFilter_name, HighPassFilter_value)
	proto.RegisterEnum("grpcapi.Temperature", Temperature_name, Temperature_value)
	proto.RegisterEnum("grpcapi.ExternalSensorUsage", ExternalSensorUsage_name, ExternalSensorUsage_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResourceConfigClient is the client API for ResourceConfig service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResourceConfigClient interface {
	GetSpecification(ctx context.Context, in *SpecificationRequest, opts ...grpc.CallOption) (*SpecificationResponse, error)
	GetConfig(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*ConfigsResponse, error)
	GetLatestConfigByTargetID(ctx context.Context, in *LatestConfigRequest, opts ...grpc.CallOption) (*ConfigsResponse, error)
	GetAllLatestConfigs(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*ConfigsResponse, error)
	SetConfigByTargetIDs(ctx context.Context, in *SetConfigRequest, opts ...grpc.CallOption) (*ConfigResponse, error)
}

type resourceConfigClient struct {
	cc *grpc.ClientConn
}

func NewResourceConfigClient(cc *grpc.ClientConn) ResourceConfigClient {
	return &resourceConfigClient{cc}
}

func (c *resourceConfigClient) GetSpecification(ctx context.Context, in *SpecificationRequest, opts ...grpc.CallOption) (*SpecificationResponse, error) {
	out := new(SpecificationResponse)
	err := c.cc.Invoke(ctx, "/grpcapi.ResourceConfig/GetSpecification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceConfigClient) GetConfig(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*ConfigsResponse, error) {
	out := new(ConfigsResponse)
	err := c.cc.Invoke(ctx, "/grpcapi.ResourceConfig/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceConfigClient) GetLatestConfigByTargetID(ctx context.Context, in *LatestConfigRequest, opts ...grpc.CallOption) (*ConfigsResponse, error) {
	out := new(ConfigsResponse)
	err := c.cc.Invoke(ctx, "/grpcapi.ResourceConfig/GetLatestConfigByTargetID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceConfigClient) GetAllLatestConfigs(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*ConfigsResponse, error) {
	out := new(ConfigsResponse)
	err := c.cc.Invoke(ctx, "/grpcapi.ResourceConfig/GetAllLatestConfigs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceConfigClient) SetConfigByTargetIDs(ctx context.Context, in *SetConfigRequest, opts ...grpc.CallOption) (*ConfigResponse, error) {
	out := new(ConfigResponse)
	err := c.cc.Invoke(ctx, "/grpcapi.ResourceConfig/SetConfigByTargetIDs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResourceConfigServer is the server API for ResourceConfig service.
type ResourceConfigServer interface {
	GetSpecification(context.Context, *SpecificationRequest) (*SpecificationResponse, error)
	GetConfig(context.Context, *ConfigRequest) (*ConfigsResponse, error)
	GetLatestConfigByTargetID(context.Context, *LatestConfigRequest) (*ConfigsResponse, error)
	GetAllLatestConfigs(context.Context, *common.Void) (*ConfigsResponse, error)
	SetConfigByTargetIDs(context.Context, *SetConfigRequest) (*ConfigResponse, error)
}

func RegisterResourceConfigServer(s *grpc.Server, srv ResourceConfigServer) {
	s.RegisterService(&_ResourceConfig_serviceDesc, srv)
}

func _ResourceConfig_GetSpecification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SpecificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceConfigServer).GetSpecification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcapi.ResourceConfig/GetSpecification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceConfigServer).GetSpecification(ctx, req.(*SpecificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceConfig_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceConfigServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcapi.ResourceConfig/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceConfigServer).GetConfig(ctx, req.(*ConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceConfig_GetLatestConfigByTargetID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LatestConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceConfigServer).GetLatestConfigByTargetID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcapi.ResourceConfig/GetLatestConfigByTargetID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceConfigServer).GetLatestConfigByTargetID(ctx, req.(*LatestConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceConfig_GetAllLatestConfigs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceConfigServer).GetAllLatestConfigs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcapi.ResourceConfig/GetAllLatestConfigs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceConfigServer).GetAllLatestConfigs(ctx, req.(*common.Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceConfig_SetConfigByTargetIDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceConfigServer).SetConfigByTargetIDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcapi.ResourceConfig/SetConfigByTargetIDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceConfigServer).SetConfigByTargetIDs(ctx, req.(*SetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResourceConfig_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcapi.ResourceConfig",
	HandlerType: (*ResourceConfigServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSpecification",
			Handler:    _ResourceConfig_GetSpecification_Handler,
		},
		{
			MethodName: "GetConfig",
			Handler:    _ResourceConfig_GetConfig_Handler,
		},
		{
			MethodName: "GetLatestConfigByTargetID",
			Handler:    _ResourceConfig_GetLatestConfigByTargetID_Handler,
		},
		{
			MethodName: "GetAllLatestConfigs",
			Handler:    _ResourceConfig_GetAllLatestConfigs_Handler,
		},
		{
			MethodName: "SetConfigByTargetIDs",
			Handler:    _ResourceConfig_SetConfigByTargetIDs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "config/grpcapi.proto",
}

func init() { proto.RegisterFile("config/grpcapi.proto", fileDescriptor_grpcapi_4c08d17d77c79ec0) }

var fileDescriptor_grpcapi_4c08d17d77c79ec0 = []byte{
	// 1644 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xdd, 0x72, 0xdb, 0xb8,
	0x15, 0x36, 0x25, 0xd9, 0x96, 0x8f, 0x6d, 0x05, 0x86, 0xed, 0x44, 0xf6, 0x3a, 0x6e, 0x56, 0xd3,
	0x6e, 0xb7, 0x9c, 0xa9, 0x57, 0x52, 0x7e, 0x9a, 0xcc, 0x6c, 0x27, 0x43, 0x93, 0xb0, 0x0c, 0x5b,
	0xa2, 0x14, 0x90, 0xf2, 0x4f, 0x6f, 0x58, 0xd5, 0xc6, 0x2a, 0x9c, 0xca, 0x94, 0x2a, 0xd2, 0xc9,
	0xfa, 0xb6, 0x17, 0xbd, 0x69, 0x6f, 0x7a, 0xdb, 0x47, 0xe8, 0xab, 0xf4, 0x19, 0xfa, 0x12, 0x7d,
	0x82, 0x0e, 0x40, 0x89, 0x04, 0x15, 0x29, 0x3b, 0x99, 0xd9, 0x1b, 0x9b, 0xf8, 0xce, 0x77, 0xbe,
	0x73, 0x70, 0x00, 0x1c, 0x08, 0xb0, 0x73, 0x33, 0x0c, 0x7e, 0xf0, 0xfb, 0xdf, 0xf5, 0xc7, 0xa3,
	0x9b, 0xde, 0xc8, 0x3f, 0x1a, 0x8d, 0x87, 0xd1, 0x10, 0xaf, 0x4e, 0x86, 0xfb, 0xdb, 0x37, 0xc3,
	0xbb, 0xbb, 0x61, 0xf0, 0x5d, 0xfc, 0x2f, 0xb6, 0x56, 0xce, 0x61, 0xc7, 0x19, 0xf1, 0x1b, 0xff,
	0x07, 0xff, 0xa6, 0x17, 0xf9, 0xc3, 0x80, 0xf1, 0xbf, 0xdc, 0xf3, 0x30, 0xc2, 0xcf, 0x01, 0xa2,
	0xde, 0xb8, 0xcf, 0x23, 0xf7, 0x61, 0xc4, 0xcb, 0xda, 0x33, 0xed, 0xdb, 0x52, 0x7d, 0xfb, 0x68,
	0xaa, 0xec, 0x26, 0x26, 0xa6, 0xd0, 0x2a, 0xff, 0xd4, 0x60, 0x77, 0x46, 0x2d, 0x1c, 0x0d, 0x83,
	0x90, 0xe3, 0x12, 0xe4, 0xa8, 0x25, 0x65, 0xd6, 0x58, 0x8e, 0x5a, 0xf8, 0x00, 0xd6, 0x3e, 0xf0,
	0x71, 0xe8, 0x0f, 0x03, 0x6a, 0x95, 0x73, 0x12, 0x4e, 0x01, 0xfc, 0x4b, 0xd8, 0xbc, 0x19, 0xf3,
	0x5e, 0xc4, 0x6f, 0x8d, 0xc8, 0xea, 0x45, 0xbc, 0x9c, 0x97, 0x8c, 0x2c, 0x28, 0x58, 0xa1, 0x1a,
	0xac, 0x5c, 0x78, 0xa6, 0x7d, 0xbb, 0xc1, 0xb2, 0x60, 0xe5, 0xb7, 0xb0, 0x69, 0xca, 0xb2, 0x4c,
	0x67, 0x76, 0x00, 0x6b, 0x71, 0x9d, 0xa8, 0x15, 0x96, 0xb5, 0x67, 0x79, 0x11, 0x3a, 0x01, 0x2a,
	0x16, 0x3c, 0x8a, 0xe9, 0x61, 0x92, 0x7b, 0x0d, 0x56, 0x63, 0x7b, 0x4c, 0x5f, 0xaf, 0x3f, 0x49,
	0xea, 0x30, 0x55, 0x8e, 0x99, 0x6c, 0xca, 0xab, 0x9c, 0xc2, 0xea, 0x44, 0x05, 0xff, 0x1e, 0x8a,
	0x31, 0xfa, 0xce, 0x94, 0xf3, 0x5f, 0xaf, 0x7f, 0x9d, 0xb8, 0xbf, 0x33, 0x5b, 0xbc, 0x17, 0xde,
	0x8f, 0xf9, 0x1d, 0x0f, 0xa2, 0xce, 0xd0, 0x0f, 0xa2, 0x89, 0x60, 0xe2, 0x52, 0xf9, 0x8f, 0x06,
	0xa5, 0x6c, 0x14, 0xbc, 0x3f, 0x55, 0x4c, 0x2a, 0x9a, 0x8c, 0x7f, 0x96, 0xba, 0xee, 0x43, 0x31,
	0x5e, 0x53, 0x6a, 0x95, 0x0b, 0xb2, 0x3e, 0xc9, 0x38, 0x33, 0x9b, 0xe5, 0x2f, 0x9f, 0xcd, 0x73,
	0xd8, 0x6e, 0xf6, 0x22, 0x1e, 0x46, 0x9f, 0x2c, 0xc9, 0x34, 0x42, 0xb2, 0x24, 0x09, 0x50, 0x19,
	0x02, 0x72, 0xf8, 0x8c, 0x87, 0x9a, 0x47, 0xee, 0x8b, 0xf3, 0xf8, 0x89, 0x80, 0xff, 0x2b, 0x42,
	0x79, 0x91, 0x88, 0x38, 0x18, 0x61, 0xef, 0x6e, 0x34, 0xe0, 0x4c, 0x14, 0x70, 0xf6, 0x60, 0x38,
	0x89, 0x89, 0x29, 0x34, 0xfc, 0x06, 0x36, 0xe2, 0x91, 0x71, 0x37, 0xbc, 0x0f, 0x22, 0x99, 0x72,
	0xa9, 0xbe, 0x3b, 0xe3, 0x16, 0x1b, 0x59, 0x86, 0x8a, 0x5d, 0xd8, 0xe5, 0xc1, 0x07, 0x3e, 0x18,
	0x8e, 0xf8, 0x71, 0x2f, 0xb8, 0x75, 0xf8, 0x80, 0xdf, 0xc8, 0xdd, 0xbe, 0x2c, 0x35, 0x0e, 0x13,
	0x0d, 0x32, 0x8f, 0xc5, 0xe6, 0x3b, 0xe3, 0x21, 0x1c, 0xf2, 0x1f, 0x23, 0x3e, 0x0e, 0x7a, 0x03,
	0x87, 0x07, 0xe1, 0x70, 0x4c, 0x82, 0xbe, 0x1f, 0x70, 0x3e, 0xf6, 0x83, 0x7e, 0x37, 0xf0, 0xa3,
	0xb0, 0xbc, 0x22, 0xe5, 0x7f, 0x9d, 0xca, 0x7f, 0x96, 0xce, 0x7e, 0x42, 0x0e, 0xff, 0x11, 0xf6,
	0xb2, 0x0c, 0xf1, 0xd7, 0x8f, 0xfc, 0x0f, 0x7e, 0xf4, 0x50, 0x5e, 0x95, 0xb1, 0x2a, 0x0b, 0x62,
	0x29, 0x4c, 0xb6, 0x58, 0x04, 0x9f, 0xc2, 0x56, 0xd6, 0x48, 0xcd, 0x4e, 0xb9, 0x28, 0x95, 0xf7,
	0x17, 0x28, 0x53, 0xb3, 0xc3, 0x3e, 0x75, 0xc2, 0x6f, 0xa1, 0xf4, 0xc1, 0xe7, 0x1f, 0x1d, 0xbf,
	0x1f, 0xf4, 0x06, 0xb2, 0xff, 0xad, 0x49, 0x99, 0xf4, 0xdc, 0x5f, 0x64, 0xcc, 0x6c, 0x86, 0x2e,
	0xf6, 0xc8, 0x83, 0xf1, 0xa3, 0x1f, 0xc6, 0x95, 0x84, 0x99, 0x3d, 0x72, 0x9d, 0x98, 0x98, 0x42,
	0x13, 0x4e, 0x57, 0xa9, 0xd3, 0xfa, 0x8c, 0xd3, 0x95, 0xe2, 0x94, 0x7e, 0x8b, 0x8d, 0x25, 0x25,
	0x2c, 0x3f, 0x1c, 0x0d, 0x7a, 0x0f, 0xe5, 0x8d, 0x99, 0x8d, 0x75, 0xad, 0x18, 0x59, 0x86, 0x2a,
	0xe2, 0xf9, 0xc1, 0xe8, 0x3e, 0x62, 0xbd, 0xa0, 0xcf, 0xcb, 0x9b, 0x33, 0xf1, 0x68, 0x62, 0x62,
	0x0a, 0x0d, 0x7f, 0x0f, 0x9b, 0xb7, 0x3c, 0x8a, 0x37, 0x91, 0xac, 0x4c, 0x49, 0xfa, 0x3d, 0x4e,
	0xfc, 0x2c, 0xd5, 0xca, 0xb2, 0x64, 0x11, 0xf2, 0xa3, 0x1f, 0xdc, 0x0e, 0x3f, 0x4a, 0x57, 0x3c,
	0x13, 0xf2, 0x32, 0x31, 0x31, 0x85, 0x26, 0x56, 0xe3, 0xbd, 0xdf, 0x7f, 0xdf, 0xe9, 0x85, 0xe1,
	0x89, 0x3f, 0x88, 0xf8, 0xb8, 0xbc, 0x3d, 0xb3, 0x1a, 0xa7, 0x19, 0x33, 0x9b, 0xa1, 0xe3, 0x57,
	0xb0, 0x1e, 0xf1, 0xbb, 0x11, 0x1f, 0xf7, 0xa2, 0xfb, 0x31, 0x2f, 0xef, 0x48, 0xef, 0x9d, 0xf4,
	0x2e, 0x4b, 0x6d, 0x4c, 0x25, 0x62, 0x1b, 0xb6, 0xb3, 0x7b, 0xa3, 0x1b, 0xf6, 0xfa, 0xbc, 0xbc,
	0x2b, 0xfd, 0x0f, 0x16, 0x6c, 0x29, 0xc9, 0x61, 0xf3, 0x1c, 0xcf, 0x0a, 0xc5, 0x3c, 0x2a, 0x9c,
	0x15, 0x8a, 0x05, 0xb4, 0x7c, 0x56, 0x28, 0x3e, 0x42, 0xe8, 0xac, 0x50, 0x44, 0x68, 0xeb, 0xac,
	0x50, 0xdc, 0x42, 0x58, 0x6f, 0x02, 0xa4, 0xb7, 0x2a, 0xc6, 0x50, 0x72, 0x0d, 0xd6, 0x20, 0xae,
	0xd7, 0x20, 0x36, 0x61, 0xd4, 0x44, 0x4b, 0x58, 0x87, 0x6f, 0x26, 0xd8, 0xbb, 0x2e, 0x35, 0xcf,
	0x3d, 0xb3, 0xdd, 0x6c, 0x12, 0xd3, 0xf5, 0x5a, 0xc4, 0x70, 0xba, 0x8c, 0xb4, 0x88, 0xed, 0x7a,
	0x9d, 0x36, 0xb5, 0x5d, 0xa4, 0xe9, 0xff, 0xd2, 0x00, 0xd2, 0x5e, 0x84, 0x11, 0x6c, 0x30, 0xc3,
	0x25, 0x5e, 0xd7, 0x3e, 0xb7, 0xdb, 0x97, 0x36, 0x5a, 0xc2, 0x1b, 0x50, 0x94, 0x48, 0xfd, 0xe5,
	0x2b, 0xa4, 0xe1, 0x4d, 0x58, 0x93, 0xa3, 0x5a, 0xfd, 0x75, 0x15, 0xe5, 0x92, 0x61, 0xfd, 0xe5,
	0xab, 0x2a, 0xca, 0x27, 0xc3, 0x97, 0xb5, 0x7a, 0x15, 0x15, 0x70, 0x09, 0x20, 0x21, 0x57, 0xd1,
	0x72, 0x32, 0x16, 0xec, 0x2a, 0x5a, 0x49, 0xc6, 0x82, 0x5e, 0x45, 0xab, 0xf8, 0x11, 0xac, 0xc7,
	0xfc, 0x6a, 0xfd, 0x45, 0xb5, 0x8a, 0x8a, 0xfa, 0xdf, 0x34, 0xd8, 0x50, 0x3b, 0x9e, 0x98, 0xad,
	0xd1, 0x6a, 0x77, 0x6d, 0x57, 0x49, 0xb0, 0x04, 0x30, 0xc1, 0xe2, 0x14, 0xd3, 0xf1, 0xcb, 0x5a,
	0x1d, 0xe5, 0x84, 0xea, 0x64, 0x2c, 0x74, 0x51, 0x5e, 0x01, 0xea, 0xd5, 0x17, 0xaf, 0x51, 0x41,
	0x01, 0x5e, 0x54, 0xdf, 0xbc, 0x42, 0xcb, 0x0a, 0xf0, 0xba, 0xf6, 0xa6, 0x8e, 0x56, 0xf4, 0x16,
	0xec, 0xce, 0xed, 0x9a, 0xa2, 0x5e, 0xc7, 0x86, 0x6d, 0x29, 0xe9, 0x00, 0xac, 0x48, 0xa4, 0x86,
	0xb4, 0xe4, 0x5b, 0xa4, 0x31, 0xfd, 0x7e, 0x8e, 0xf2, 0x7a, 0x07, 0x0e, 0x3f, 0xdf, 0x25, 0x85,
	0x6e, 0xd7, 0xa6, 0xea, 0x34, 0x0f, 0xa0, 0x2c, 0x11, 0xc3, 0x34, 0x49, 0x93, 0x30, 0xc3, 0xa5,
	0x6d, 0xdb, 0x23, 0x5d, 0xc7, 0x6b, 0x38, 0x48, 0xd3, 0x1d, 0xd8, 0x5b, 0xd8, 0x0b, 0xf1, 0x13,
	0xd8, 0x76, 0x88, 0xed, 0x50, 0x97, 0x5e, 0x50, 0xf7, 0x5a, 0xd1, 0x7c, 0x0a, 0x7b, 0xaa, 0xa1,
	0x56, 0xad, 0x7a, 0xad, 0x0b, 0xaf, 0x43, 0x98, 0x47, 0xba, 0x48, 0xd3, 0x8f, 0x61, 0xeb, 0x93,
	0x36, 0x28, 0x6a, 0x43, 0xcd, 0x4e, 0x36, 0x31, 0x01, 0x30, 0xf2, 0xae, 0x4b, 0x19, 0xb1, 0xbc,
	0xcb, 0x53, 0x62, 0x7b, 0xd4, 0xf6, 0xba, 0x0e, 0x41, 0x9a, 0xfe, 0x67, 0x28, 0x65, 0x7b, 0xa0,
	0xc8, 0xe6, 0x82, 0x92, 0x4b, 0xcf, 0xa1, 0x0d, 0xdb, 0x68, 0x66, 0xb3, 0x51, 0x0d, 0x4e, 0x87,
	0x98, 0x2e, 0xeb, 0xb6, 0xbc, 0xb6, 0xdd, 0xbc, 0x46, 0x1a, 0xfe, 0x1a, 0x9e, 0xce, 0x35, 0x8b,
	0xa2, 0xba, 0xb4, 0x45, 0x50, 0x4e, 0xff, 0xab, 0x06, 0x90, 0x36, 0x4d, 0xb1, 0x5b, 0xae, 0x3d,
	0xe3, 0x8a, 0x3a, 0xd9, 0x20, 0x13, 0x2c, 0x53, 0x48, 0x6a, 0xcb, 0x3a, 0x8a, 0x20, 0x13, 0xf3,
	0x05, 0x69, 0xb6, 0x4d, 0x51, 0x15, 0x6a, 0x7b, 0xad, 0x96, 0x2c, 0x8a, 0x43, 0x4c, 0x94, 0xc3,
	0x87, 0xb0, 0x3f, 0xa1, 0x10, 0x5b, 0x90, 0x3a, 0xc4, 0xf2, 0x1a, 0x44, 0x2a, 0x10, 0x07, 0xe5,
	0xf5, 0xef, 0xd5, 0xf6, 0x2c, 0x72, 0xb8, 0x52, 0x72, 0xb0, 0x2f, 0xd1, 0x12, 0xde, 0x87, 0xc7,
	0x13, 0xec, 0x44, 0x54, 0x8d, 0xd8, 0xa6, 0x8c, 0x72, 0xfa, 0x07, 0xa4, 0xe9, 0x0d, 0xd8, 0x50,
	0x5b, 0xb1, 0xe0, 0x4e, 0xa2, 0x59, 0xd4, 0xe9, 0x34, 0x0d, 0x75, 0xf9, 0xbe, 0x82, 0x27, 0x33,
	0xb6, 0x26, 0xb5, 0x89, 0xc1, 0x44, 0xb9, 0xf4, 0x1a, 0x40, 0xda, 0x9a, 0xf1, 0x16, 0x6c, 0x32,
	0xc3, 0x6e, 0xa8, 0x07, 0x5b, 0x1e, 0x75, 0x01, 0x89, 0x65, 0x97, 0x9b, 0xe8, 0xbf, 0x1a, 0x6c,
	0x66, 0xda, 0x32, 0xde, 0x85, 0x2d, 0x8b, 0xb8, 0xc4, 0x94, 0x35, 0x4a, 0x5d, 0xb7, 0x60, 0x33,
	0x85, 0x59, 0x4b, 0x14, 0xee, 0x1b, 0xa8, 0xa4, 0x50, 0x87, 0x18, 0xe7, 0x9e, 0x69, 0x34, 0xcd,
	0x6e, 0xd3, 0x70, 0x89, 0xe5, 0x9d, 0xb0, 0x76, 0x4b, 0xf2, 0x72, 0xf8, 0x08, 0xf4, 0x19, 0x9e,
	0xdb, 0x5e, 0xcc, 0xcf, 0xe3, 0xdf, 0xc0, 0xaf, 0x52, 0xbe, 0xcb, 0xba, 0x24, 0x26, 0x4b, 0x86,
	0xea, 0x8e, 0x0a, 0xf8, 0x17, 0xf0, 0xd5, 0x3c, 0xea, 0x94, 0xb0, 0xac, 0xbf, 0x00, 0x48, 0xaf,
	0x0e, 0xb1, 0x32, 0x97, 0xd4, 0xb6, 0xda, 0x97, 0xca, 0xc4, 0x52, 0xec, 0xd4, 0xb0, 0x6d, 0x6a,
	0x37, 0x90, 0xa6, 0xfb, 0x50, 0xca, 0xde, 0x1b, 0x82, 0x75, 0x42, 0x9b, 0x2e, 0x61, 0xd9, 0x2e,
	0x34, 0xc1, 0xda, 0x27, 0x27, 0x48, 0x13, 0xc7, 0x64, 0x32, 0xae, 0x8b, 0x85, 0xcd, 0x89, 0x72,
	0x4f, 0x80, 0x5a, 0x55, 0x20, 0x79, 0x05, 0xf9, 0x9d, 0x44, 0x0a, 0xfa, 0xdf, 0x35, 0x58, 0x57,
	0x6e, 0x19, 0x71, 0x54, 0x5c, 0xd2, 0xea, 0x88, 0x4d, 0xda, 0x65, 0xea, 0xda, 0x55, 0xe0, 0x50,
	0x35, 0x58, 0xa4, 0xc1, 0x08, 0x71, 0xbc, 0x13, 0xe3, 0x94, 0x11, 0xfb, 0x94, 0x50, 0x17, 0x69,
	0xa2, 0x1c, 0xf3, 0x38, 0x26, 0x69, 0x9a, 0xb4, 0xeb, 0xc4, 0x1b, 0x79, 0x1e, 0xe1, 0x9c, 0x34,
	0x2f, 0xa8, 0x8d, 0xf2, 0xfa, 0x15, 0x6c, 0xcf, 0xb9, 0xb2, 0xf0, 0x33, 0x38, 0x98, 0x03, 0x8b,
	0x2d, 0x68, 0x1c, 0x37, 0x89, 0x85, 0x96, 0x44, 0xe4, 0x79, 0x0c, 0x62, 0xc7, 0x04, 0xad, 0xfe,
	0x8f, 0x3c, 0x94, 0x18, 0x0f, 0x87, 0xf7, 0xe3, 0x1b, 0x3e, 0xf9, 0xb5, 0xec, 0x00, 0x6a, 0xf0,
	0x28, 0xf3, 0x26, 0xc4, 0x4f, 0xd3, 0x9f, 0xbd, 0x73, 0x5e, 0x9e, 0xfb, 0x87, 0x8b, 0xcc, 0xf1,
	0xf3, 0xa7, 0xb2, 0x84, 0xdf, 0xc2, 0x5a, 0x63, 0xfa, 0x20, 0xc0, 0x8f, 0x3f, 0x79, 0x8c, 0xc5,
	0x32, 0xe5, 0x19, 0x3c, 0x54, 0x04, 0xba, 0xb0, 0xd7, 0xe0, 0x91, 0xfa, 0x12, 0x39, 0x7e, 0x70,
	0xa7, 0x4f, 0x9c, 0xf4, 0x66, 0x9f, 0xf3, 0x54, 0xf9, 0xac, 0xec, 0x5b, 0xd8, 0x6e, 0xf0, 0xc8,
	0x18, 0x0c, 0x54, 0xc7, 0x10, 0x6f, 0x1c, 0x4d, 0x5e, 0xdc, 0x17, 0x43, 0xff, 0xf6, 0xb3, 0x02,
	0x4d, 0xd8, 0x49, 0x5e, 0x3a, 0x69, 0x46, 0x21, 0xde, 0x4b, 0x4b, 0x32, 0xf3, 0x10, 0xda, 0x5f,
	0xf4, 0x16, 0xad, 0x2c, 0x1d, 0xef, 0xfd, 0x3b, 0xf7, 0xd8, 0x39, 0x3f, 0x39, 0x22, 0xc1, 0xc0,
	0xef, 0xbf, 0x8f, 0x8e, 0x8c, 0x0e, 0x9d, 0x90, 0xfe, 0xb4, 0x22, 0x1f, 0xff, 0xcf, 0xff, 0x1f,
	0x00, 0x00, 0xff, 0xff, 0xef, 0x98, 0x2a, 0x9c, 0x32, 0x10, 0x00, 0x00,
}
