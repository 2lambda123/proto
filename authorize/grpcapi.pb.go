// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: authorize/grpcapi.proto

package authorize

import (
	context "context"
	common "github.com/SKF/proto/2/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Actions []string `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *UserRole) Reset() {
	*x = UserRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRole) ProtoMessage() {}

func (x *UserRole) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRole.ProtoReflect.Descriptor instead.
func (*UserRole) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{0}
}

func (x *UserRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserRole) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

type ApplyRolesForUserOnResourcesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string           `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Roles     []string         `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	Resources []*common.Origin `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *ApplyRolesForUserOnResourcesInput) Reset() {
	*x = ApplyRolesForUserOnResourcesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyRolesForUserOnResourcesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyRolesForUserOnResourcesInput) ProtoMessage() {}

func (x *ApplyRolesForUserOnResourcesInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyRolesForUserOnResourcesInput.ProtoReflect.Descriptor instead.
func (*ApplyRolesForUserOnResourcesInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{1}
}

func (x *ApplyRolesForUserOnResourcesInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ApplyRolesForUserOnResourcesInput) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *ApplyRolesForUserOnResourcesInput) GetResources() []*common.Origin {
	if x != nil {
		return x.Resources
	}
	return nil
}

type GetUserActionsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserActionsInput) Reset() {
	*x = GetUserActionsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserActionsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserActionsInput) ProtoMessage() {}

func (x *GetUserActionsInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserActionsInput.ProtoReflect.Descriptor instead.
func (*GetUserActionsInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserActionsInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserActionsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions []*Action `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *GetUserActionsOutput) Reset() {
	*x = GetUserActionsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserActionsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserActionsOutput) ProtoMessage() {}

func (x *GetUserActionsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserActionsOutput.ProtoReflect.Descriptor instead.
func (*GetUserActionsOutput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserActionsOutput) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

type GetUserRoleInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleName string `protobuf:"bytes,1,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
}

func (x *GetUserRoleInput) Reset() {
	*x = GetUserRoleInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRoleInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRoleInput) ProtoMessage() {}

func (x *GetUserRoleInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRoleInput.ProtoReflect.Descriptor instead.
func (*GetUserRoleInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserRoleInput) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type RemoveUserRoleInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleName string `protobuf:"bytes,1,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
}

func (x *RemoveUserRoleInput) Reset() {
	*x = RemoveUserRoleInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserRoleInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserRoleInput) ProtoMessage() {}

func (x *RemoveUserRoleInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserRoleInput.ProtoReflect.Descriptor instead.
func (*RemoveUserRoleInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveUserRoleInput) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type IsAuthorizedInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string         `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Action   string         `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Resource *common.Origin `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *IsAuthorizedInput) Reset() {
	*x = IsAuthorizedInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAuthorizedInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAuthorizedInput) ProtoMessage() {}

func (x *IsAuthorizedInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAuthorizedInput.ProtoReflect.Descriptor instead.
func (*IsAuthorizedInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{6}
}

func (x *IsAuthorizedInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *IsAuthorizedInput) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *IsAuthorizedInput) GetResource() *common.Origin {
	if x != nil {
		return x.Resource
	}
	return nil
}

type IsAuthorizedBulkInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string           `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Action    string           `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Resources []*common.Origin `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *IsAuthorizedBulkInput) Reset() {
	*x = IsAuthorizedBulkInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAuthorizedBulkInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAuthorizedBulkInput) ProtoMessage() {}

func (x *IsAuthorizedBulkInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAuthorizedBulkInput.ProtoReflect.Descriptor instead.
func (*IsAuthorizedBulkInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{7}
}

func (x *IsAuthorizedBulkInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *IsAuthorizedBulkInput) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *IsAuthorizedBulkInput) GetResources() []*common.Origin {
	if x != nil {
		return x.Resources
	}
	return nil
}

type IsAuthorizedOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *IsAuthorizedOutput) Reset() {
	*x = IsAuthorizedOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAuthorizedOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAuthorizedOutput) ProtoMessage() {}

func (x *IsAuthorizedOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAuthorizedOutput.ProtoReflect.Descriptor instead.
func (*IsAuthorizedOutput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{8}
}

func (x *IsAuthorizedOutput) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type GetResourceOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *common.Origin `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *GetResourceOutput) Reset() {
	*x = GetResourceOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceOutput) ProtoMessage() {}

func (x *GetResourceOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceOutput.ProtoReflect.Descriptor instead.
func (*GetResourceOutput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{9}
}

func (x *GetResourceOutput) GetResource() *common.Origin {
	if x != nil {
		return x.Resource
	}
	return nil
}

type GetResourceInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OriginType string `protobuf:"bytes,2,opt,name=origin_type,json=originType,proto3" json:"origin_type,omitempty"`
}

func (x *GetResourceInput) Reset() {
	*x = GetResourceInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceInput) ProtoMessage() {}

func (x *GetResourceInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceInput.ProtoReflect.Descriptor instead.
func (*GetResourceInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{10}
}

func (x *GetResourceInput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetResourceInput) GetOriginType() string {
	if x != nil {
		return x.OriginType
	}
	return ""
}

type GetResourceParentsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource         *common.Origin `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	ParentOriginType string         `protobuf:"bytes,2,opt,name=parent_origin_type,json=parentOriginType,proto3" json:"parent_origin_type,omitempty"`
}

func (x *GetResourceParentsInput) Reset() {
	*x = GetResourceParentsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceParentsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceParentsInput) ProtoMessage() {}

func (x *GetResourceParentsInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceParentsInput.ProtoReflect.Descriptor instead.
func (*GetResourceParentsInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{11}
}

func (x *GetResourceParentsInput) GetResource() *common.Origin {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *GetResourceParentsInput) GetParentOriginType() string {
	if x != nil {
		return x.ParentOriginType
	}
	return ""
}

type GetResourceChildrenInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource        *common.Origin `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	ChildOriginType string         `protobuf:"bytes,2,opt,name=child_origin_type,json=childOriginType,proto3" json:"child_origin_type,omitempty"`
}

func (x *GetResourceChildrenInput) Reset() {
	*x = GetResourceChildrenInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceChildrenInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceChildrenInput) ProtoMessage() {}

func (x *GetResourceChildrenInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceChildrenInput.ProtoReflect.Descriptor instead.
func (*GetResourceChildrenInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{12}
}

func (x *GetResourceChildrenInput) GetResource() *common.Origin {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *GetResourceChildrenInput) GetChildOriginType() string {
	if x != nil {
		return x.ChildOriginType
	}
	return ""
}

type GetResourcesOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*common.Origin `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *GetResourcesOutput) Reset() {
	*x = GetResourcesOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesOutput) ProtoMessage() {}

func (x *GetResourcesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesOutput.ProtoReflect.Descriptor instead.
func (*GetResourcesOutput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{13}
}

func (x *GetResourcesOutput) GetResources() []*common.Origin {
	if x != nil {
		return x.Resources
	}
	return nil
}

type IsAuthorizedOutItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	ResourceId string         `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Ok         bool           `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
	Resource   *common.Origin `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *IsAuthorizedOutItem) Reset() {
	*x = IsAuthorizedOutItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAuthorizedOutItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAuthorizedOutItem) ProtoMessage() {}

func (x *IsAuthorizedOutItem) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAuthorizedOutItem.ProtoReflect.Descriptor instead.
func (*IsAuthorizedOutItem) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{14}
}

// Deprecated: Do not use.
func (x *IsAuthorizedOutItem) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *IsAuthorizedOutItem) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *IsAuthorizedOutItem) GetResource() *common.Origin {
	if x != nil {
		return x.Resource
	}
	return nil
}

type IsAuthorizedBulkOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*IsAuthorizedOutItem `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *IsAuthorizedBulkOutput) Reset() {
	*x = IsAuthorizedBulkOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAuthorizedBulkOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAuthorizedBulkOutput) ProtoMessage() {}

func (x *IsAuthorizedBulkOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAuthorizedBulkOutput.ProtoReflect.Descriptor instead.
func (*IsAuthorizedBulkOutput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{15}
}

func (x *IsAuthorizedBulkOutput) GetResponses() []*IsAuthorizedOutItem {
	if x != nil {
		return x.Responses
	}
	return nil
}

type IsAuthorizedByEndpointInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api      string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Method   string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	UserId   string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *IsAuthorizedByEndpointInput) Reset() {
	*x = IsAuthorizedByEndpointInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAuthorizedByEndpointInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAuthorizedByEndpointInput) ProtoMessage() {}

func (x *IsAuthorizedByEndpointInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAuthorizedByEndpointInput.ProtoReflect.Descriptor instead.
func (*IsAuthorizedByEndpointInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{16}
}

func (x *IsAuthorizedByEndpointInput) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *IsAuthorizedByEndpointInput) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *IsAuthorizedByEndpointInput) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *IsAuthorizedByEndpointInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type IsAuthorizedByEndpointOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *IsAuthorizedByEndpointOutput) Reset() {
	*x = IsAuthorizedByEndpointOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAuthorizedByEndpointOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAuthorizedByEndpointOutput) ProtoMessage() {}

func (x *IsAuthorizedByEndpointOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAuthorizedByEndpointOutput.ProtoReflect.Descriptor instead.
func (*IsAuthorizedByEndpointOutput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{17}
}

func (x *IsAuthorizedByEndpointOutput) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type AddResourceInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *common.Origin `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *AddResourceInput) Reset() {
	*x = AddResourceInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddResourceInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResourceInput) ProtoMessage() {}

func (x *AddResourceInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResourceInput.ProtoReflect.Descriptor instead.
func (*AddResourceInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{18}
}

func (x *AddResourceInput) GetResource() *common.Origin {
	if x != nil {
		return x.Resource
	}
	return nil
}

type RemoveResourceInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *common.Origin `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *RemoveResourceInput) Reset() {
	*x = RemoveResourceInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveResourceInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveResourceInput) ProtoMessage() {}

func (x *RemoveResourceInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveResourceInput.ProtoReflect.Descriptor instead.
func (*RemoveResourceInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{19}
}

func (x *RemoveResourceInput) GetResource() *common.Origin {
	if x != nil {
		return x.Resource
	}
	return nil
}

type AddResourcesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource []*common.Origin `protobuf:"bytes,1,rep,name=resource,proto3" json:"resource,omitempty"`
}

func (x *AddResourcesInput) Reset() {
	*x = AddResourcesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddResourcesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResourcesInput) ProtoMessage() {}

func (x *AddResourcesInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResourcesInput.ProtoReflect.Descriptor instead.
func (*AddResourcesInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{20}
}

func (x *AddResourcesInput) GetResource() []*common.Origin {
	if x != nil {
		return x.Resource
	}
	return nil
}

type RemoveResourcesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource []*common.Origin `protobuf:"bytes,1,rep,name=resource,proto3" json:"resource,omitempty"`
}

func (x *RemoveResourcesInput) Reset() {
	*x = RemoveResourcesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveResourcesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveResourcesInput) ProtoMessage() {}

func (x *RemoveResourcesInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveResourcesInput.ProtoReflect.Descriptor instead.
func (*RemoveResourcesInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{21}
}

func (x *RemoveResourcesInput) GetResource() []*common.Origin {
	if x != nil {
		return x.Resource
	}
	return nil
}

type GetResourcesWithActionsAccessInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions      []string       `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
	ResourceType string         `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	Resource     *common.Origin `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *GetResourcesWithActionsAccessInput) Reset() {
	*x = GetResourcesWithActionsAccessInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesWithActionsAccessInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesWithActionsAccessInput) ProtoMessage() {}

func (x *GetResourcesWithActionsAccessInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesWithActionsAccessInput.ProtoReflect.Descriptor instead.
func (*GetResourcesWithActionsAccessInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{22}
}

func (x *GetResourcesWithActionsAccessInput) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *GetResourcesWithActionsAccessInput) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *GetResourcesWithActionsAccessInput) GetResource() *common.Origin {
	if x != nil {
		return x.Resource
	}
	return nil
}

type GetResourcesWithActionsAccessOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*common.Origin `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *GetResourcesWithActionsAccessOutput) Reset() {
	*x = GetResourcesWithActionsAccessOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesWithActionsAccessOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesWithActionsAccessOutput) ProtoMessage() {}

func (x *GetResourcesWithActionsAccessOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesWithActionsAccessOutput.ProtoReflect.Descriptor instead.
func (*GetResourcesWithActionsAccessOutput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{23}
}

func (x *GetResourcesWithActionsAccessOutput) GetResources() []*common.Origin {
	if x != nil {
		return x.Resources
	}
	return nil
}

type GetResourcesByUserActionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Action       string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	ResourceType string `protobuf:"bytes,3,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
}

func (x *GetResourcesByUserActionInput) Reset() {
	*x = GetResourcesByUserActionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesByUserActionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesByUserActionInput) ProtoMessage() {}

func (x *GetResourcesByUserActionInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesByUserActionInput.ProtoReflect.Descriptor instead.
func (*GetResourcesByUserActionInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{24}
}

func (x *GetResourcesByUserActionInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetResourcesByUserActionInput) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *GetResourcesByUserActionInput) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

type GetResourcesByUserActionOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*common.Origin `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *GetResourcesByUserActionOutput) Reset() {
	*x = GetResourcesByUserActionOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesByUserActionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesByUserActionOutput) ProtoMessage() {}

func (x *GetResourcesByUserActionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesByUserActionOutput.ProtoReflect.Descriptor instead.
func (*GetResourcesByUserActionOutput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{25}
}

func (x *GetResourcesByUserActionOutput) GetResources() []*common.Origin {
	if x != nil {
		return x.Resources
	}
	return nil
}

type GetResourcesByTypeInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceType string `protobuf:"bytes,1,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
}

func (x *GetResourcesByTypeInput) Reset() {
	*x = GetResourcesByTypeInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesByTypeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesByTypeInput) ProtoMessage() {}

func (x *GetResourcesByTypeInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesByTypeInput.ProtoReflect.Descriptor instead.
func (*GetResourcesByTypeInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{26}
}

func (x *GetResourcesByTypeInput) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

type GetResourcesByOriginAndTypeInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource     *common.Origin `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	ResourceType string         `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	Depth        int32          `protobuf:"varint,3,opt,name=depth,proto3" json:"depth,omitempty"`
}

func (x *GetResourcesByOriginAndTypeInput) Reset() {
	*x = GetResourcesByOriginAndTypeInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesByOriginAndTypeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesByOriginAndTypeInput) ProtoMessage() {}

func (x *GetResourcesByOriginAndTypeInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesByOriginAndTypeInput.ProtoReflect.Descriptor instead.
func (*GetResourcesByOriginAndTypeInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{27}
}

func (x *GetResourcesByOriginAndTypeInput) GetResource() *common.Origin {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *GetResourcesByOriginAndTypeInput) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *GetResourcesByOriginAndTypeInput) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

type GetUserIDsWithAccessToResourceInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *common.Origin `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *GetUserIDsWithAccessToResourceInput) Reset() {
	*x = GetUserIDsWithAccessToResourceInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserIDsWithAccessToResourceInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserIDsWithAccessToResourceInput) ProtoMessage() {}

func (x *GetUserIDsWithAccessToResourceInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserIDsWithAccessToResourceInput.ProtoReflect.Descriptor instead.
func (*GetUserIDsWithAccessToResourceInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{28}
}

func (x *GetUserIDsWithAccessToResourceInput) GetResource() *common.Origin {
	if x != nil {
		return x.Resource
	}
	return nil
}

type GetResourcesByTypeOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*common.Origin `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *GetResourcesByTypeOutput) Reset() {
	*x = GetResourcesByTypeOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesByTypeOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesByTypeOutput) ProtoMessage() {}

func (x *GetResourcesByTypeOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesByTypeOutput.ProtoReflect.Descriptor instead.
func (*GetResourcesByTypeOutput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{29}
}

func (x *GetResourcesByTypeOutput) GetResources() []*common.Origin {
	if x != nil {
		return x.Resources
	}
	return nil
}

type GetResourcesByOriginAndTypeOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*common.Origin `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *GetResourcesByOriginAndTypeOutput) Reset() {
	*x = GetResourcesByOriginAndTypeOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesByOriginAndTypeOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesByOriginAndTypeOutput) ProtoMessage() {}

func (x *GetResourcesByOriginAndTypeOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesByOriginAndTypeOutput.ProtoReflect.Descriptor instead.
func (*GetResourcesByOriginAndTypeOutput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{30}
}

func (x *GetResourcesByOriginAndTypeOutput) GetResources() []*common.Origin {
	if x != nil {
		return x.Resources
	}
	return nil
}

type GetUserIDsWithAccessToResourceOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []string `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *GetUserIDsWithAccessToResourceOutput) Reset() {
	*x = GetUserIDsWithAccessToResourceOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserIDsWithAccessToResourceOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserIDsWithAccessToResourceOutput) ProtoMessage() {}

func (x *GetUserIDsWithAccessToResourceOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserIDsWithAccessToResourceOutput.ProtoReflect.Descriptor instead.
func (*GetUserIDsWithAccessToResourceOutput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{31}
}

func (x *GetUserIDsWithAccessToResourceOutput) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type AddResourceRelationInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *common.Origin `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Parent   *common.Origin `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
}

func (x *AddResourceRelationInput) Reset() {
	*x = AddResourceRelationInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddResourceRelationInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResourceRelationInput) ProtoMessage() {}

func (x *AddResourceRelationInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResourceRelationInput.ProtoReflect.Descriptor instead.
func (*AddResourceRelationInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{32}
}

func (x *AddResourceRelationInput) GetResource() *common.Origin {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *AddResourceRelationInput) GetParent() *common.Origin {
	if x != nil {
		return x.Parent
	}
	return nil
}

type RemoveResourceRelationInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *common.Origin `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Parent   *common.Origin `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
}

func (x *RemoveResourceRelationInput) Reset() {
	*x = RemoveResourceRelationInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveResourceRelationInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveResourceRelationInput) ProtoMessage() {}

func (x *RemoveResourceRelationInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveResourceRelationInput.ProtoReflect.Descriptor instead.
func (*RemoveResourceRelationInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{33}
}

func (x *RemoveResourceRelationInput) GetResource() *common.Origin {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *RemoveResourceRelationInput) GetParent() *common.Origin {
	if x != nil {
		return x.Parent
	}
	return nil
}

type AddResourceRelationsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relation []*AddResourceRelationInput `protobuf:"bytes,1,rep,name=relation,proto3" json:"relation,omitempty"`
}

func (x *AddResourceRelationsInput) Reset() {
	*x = AddResourceRelationsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddResourceRelationsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResourceRelationsInput) ProtoMessage() {}

func (x *AddResourceRelationsInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResourceRelationsInput.ProtoReflect.Descriptor instead.
func (*AddResourceRelationsInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{34}
}

func (x *AddResourceRelationsInput) GetRelation() []*AddResourceRelationInput {
	if x != nil {
		return x.Relation
	}
	return nil
}

type RemoveResourceRelationsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relation []*RemoveResourceRelationInput `protobuf:"bytes,1,rep,name=relation,proto3" json:"relation,omitempty"`
}

func (x *RemoveResourceRelationsInput) Reset() {
	*x = RemoveResourceRelationsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveResourceRelationsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveResourceRelationsInput) ProtoMessage() {}

func (x *RemoveResourceRelationsInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveResourceRelationsInput.ProtoReflect.Descriptor instead.
func (*RemoveResourceRelationsInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{35}
}

func (x *RemoveResourceRelationsInput) GetRelation() []*RemoveResourceRelationInput {
	if x != nil {
		return x.Relation
	}
	return nil
}

type ApplyUserActionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string         `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Action   string         `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Resource *common.Origin `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *ApplyUserActionInput) Reset() {
	*x = ApplyUserActionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyUserActionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyUserActionInput) ProtoMessage() {}

func (x *ApplyUserActionInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyUserActionInput.ProtoReflect.Descriptor instead.
func (*ApplyUserActionInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{36}
}

func (x *ApplyUserActionInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ApplyUserActionInput) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ApplyUserActionInput) GetResource() *common.Origin {
	if x != nil {
		return x.Resource
	}
	return nil
}

type RemoveUserActionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string         `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Action   string         `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Resource *common.Origin `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *RemoveUserActionInput) Reset() {
	*x = RemoveUserActionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserActionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserActionInput) ProtoMessage() {}

func (x *RemoveUserActionInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserActionInput.ProtoReflect.Descriptor instead.
func (*RemoveUserActionInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{37}
}

func (x *RemoveUserActionInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RemoveUserActionInput) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *RemoveUserActionInput) GetResource() *common.Origin {
	if x != nil {
		return x.Resource
	}
	return nil
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type string            `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Data map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{38}
}

func (x *Action) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Action) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Action) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetActionsByUserRoleInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserRole string `protobuf:"bytes,1,opt,name=user_role,json=userRole,proto3" json:"user_role,omitempty"`
}

func (x *GetActionsByUserRoleInput) Reset() {
	*x = GetActionsByUserRoleInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActionsByUserRoleInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActionsByUserRoleInput) ProtoMessage() {}

func (x *GetActionsByUserRoleInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActionsByUserRoleInput.ProtoReflect.Descriptor instead.
func (*GetActionsByUserRoleInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{39}
}

func (x *GetActionsByUserRoleInput) GetUserRole() string {
	if x != nil {
		return x.UserRole
	}
	return ""
}

type GetActionsByUserRoleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions []*Action `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *GetActionsByUserRoleOutput) Reset() {
	*x = GetActionsByUserRoleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActionsByUserRoleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActionsByUserRoleOutput) ProtoMessage() {}

func (x *GetActionsByUserRoleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActionsByUserRoleOutput.ProtoReflect.Descriptor instead.
func (*GetActionsByUserRoleOutput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{40}
}

func (x *GetActionsByUserRoleOutput) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

type ActionResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionName string         `protobuf:"bytes,1,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	Resource   *common.Origin `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *ActionResource) Reset() {
	*x = ActionResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResource) ProtoMessage() {}

func (x *ActionResource) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResource.ProtoReflect.Descriptor instead.
func (*ActionResource) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{41}
}

func (x *ActionResource) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *ActionResource) GetResource() *common.Origin {
	if x != nil {
		return x.Resource
	}
	return nil
}

type GetResourcesAndActionsByUserInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetResourcesAndActionsByUserInput) Reset() {
	*x = GetResourcesAndActionsByUserInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesAndActionsByUserInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesAndActionsByUserInput) ProtoMessage() {}

func (x *GetResourcesAndActionsByUserInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesAndActionsByUserInput.ProtoReflect.Descriptor instead.
func (*GetResourcesAndActionsByUserInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{42}
}

func (x *GetResourcesAndActionsByUserInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetResourcesAndActionsByUserOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ActionResource `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetResourcesAndActionsByUserOutput) Reset() {
	*x = GetResourcesAndActionsByUserOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesAndActionsByUserOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesAndActionsByUserOutput) ProtoMessage() {}

func (x *GetResourcesAndActionsByUserOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesAndActionsByUserOutput.ProtoReflect.Descriptor instead.
func (*GetResourcesAndActionsByUserOutput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{43}
}

func (x *GetResourcesAndActionsByUserOutput) GetData() []*ActionResource {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetResourcesAndActionsByUserAndResourceInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string         `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Resource *common.Origin `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *GetResourcesAndActionsByUserAndResourceInput) Reset() {
	*x = GetResourcesAndActionsByUserAndResourceInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesAndActionsByUserAndResourceInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesAndActionsByUserAndResourceInput) ProtoMessage() {}

func (x *GetResourcesAndActionsByUserAndResourceInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesAndActionsByUserAndResourceInput.ProtoReflect.Descriptor instead.
func (*GetResourcesAndActionsByUserAndResourceInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{44}
}

func (x *GetResourcesAndActionsByUserAndResourceInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetResourcesAndActionsByUserAndResourceInput) GetResource() *common.Origin {
	if x != nil {
		return x.Resource
	}
	return nil
}

type GetResourcesAndActionsByUserAndResourceOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ActionResource `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetResourcesAndActionsByUserAndResourceOutput) Reset() {
	*x = GetResourcesAndActionsByUserAndResourceOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesAndActionsByUserAndResourceOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesAndActionsByUserAndResourceOutput) ProtoMessage() {}

func (x *GetResourcesAndActionsByUserAndResourceOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesAndActionsByUserAndResourceOutput.ProtoReflect.Descriptor instead.
func (*GetResourcesAndActionsByUserAndResourceOutput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{45}
}

func (x *GetResourcesAndActionsByUserAndResourceOutput) GetData() []*ActionResource {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddActionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action *Action `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *AddActionInput) Reset() {
	*x = AddActionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddActionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddActionInput) ProtoMessage() {}

func (x *AddActionInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddActionInput.ProtoReflect.Descriptor instead.
func (*AddActionInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{46}
}

func (x *AddActionInput) GetAction() *Action {
	if x != nil {
		return x.Action
	}
	return nil
}

type RemoveActionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RemoveActionInput) Reset() {
	*x = RemoveActionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveActionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveActionInput) ProtoMessage() {}

func (x *RemoveActionInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveActionInput.ProtoReflect.Descriptor instead.
func (*RemoveActionInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{47}
}

func (x *RemoveActionInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetActionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetActionInput) Reset() {
	*x = GetActionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActionInput) ProtoMessage() {}

func (x *GetActionInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActionInput.ProtoReflect.Descriptor instead.
func (*GetActionInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{48}
}

func (x *GetActionInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetActionOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action *Action `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *GetActionOutput) Reset() {
	*x = GetActionOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActionOutput) ProtoMessage() {}

func (x *GetActionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActionOutput.ProtoReflect.Descriptor instead.
func (*GetActionOutput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{49}
}

func (x *GetActionOutput) GetAction() *Action {
	if x != nil {
		return x.Action
	}
	return nil
}

type GetAllActionsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions []*Action `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *GetAllActionsOutput) Reset() {
	*x = GetAllActionsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllActionsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllActionsOutput) ProtoMessage() {}

func (x *GetAllActionsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllActionsOutput.ProtoReflect.Descriptor instead.
func (*GetAllActionsOutput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{50}
}

func (x *GetAllActionsOutput) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

type LogClientStateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State    string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
}

func (x *LogClientStateInput) Reset() {
	*x = LogClientStateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogClientStateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogClientStateInput) ProtoMessage() {}

func (x *LogClientStateInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogClientStateInput.ProtoReflect.Descriptor instead.
func (*LogClientStateInput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{51}
}

func (x *LogClientStateInput) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *LogClientStateInput) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type IsAuthorizedWithReasonOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok     bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *IsAuthorizedWithReasonOutput) Reset() {
	*x = IsAuthorizedWithReasonOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorize_grpcapi_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAuthorizedWithReasonOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAuthorizedWithReasonOutput) ProtoMessage() {}

func (x *IsAuthorizedWithReasonOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorize_grpcapi_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAuthorizedWithReasonOutput.ProtoReflect.Descriptor instead.
func (*IsAuthorizedWithReasonOutput) Descriptor() ([]byte, []int) {
	return file_authorize_grpcapi_proto_rawDescGZIP(), []int{52}
}

func (x *IsAuthorizedWithReasonOutput) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *IsAuthorizedWithReasonOutput) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_authorize_grpcapi_proto protoreflect.FileDescriptor

var file_authorize_grpcapi_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x21, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x2e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2b,
	0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2f, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x13,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x70, 0x0a, 0x11, 0x49, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x76, 0x0a, 0x15, 0x49, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x64, 0x42, 0x75, 0x6c, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x09,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52,
	0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x24, 0x0a, 0x12, 0x49, 0x73,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b,
	0x22, 0x3f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x43, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x73, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2c, 0x0a,
	0x12, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x72, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x42, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x22, 0x76, 0x0a, 0x13, 0x49, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x23, 0x0a, 0x0b, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x02, 0x18, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12,
	0x2a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x56, 0x0a, 0x16, 0x49,
	0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x42, 0x75, 0x6c, 0x6b, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x2e, 0x49, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x4f, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x73, 0x22, 0x7c, 0x0a, 0x1b, 0x49, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x64, 0x42, 0x79, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x61, 0x70, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x2e, 0x0a, 0x1c, 0x49, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x42, 0x79, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f,
	0x6b, 0x22, 0x3e, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x41, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x22, 0x3f, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x42, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x22, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x53, 0x0a, 0x23, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x2c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x22, 0x75, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4e, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2c, 0x0a, 0x09, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x09, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x3e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x41, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65,
	0x70, 0x74, 0x68, 0x22, 0x51, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x48, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x2c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x22, 0x51, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x22, 0x41, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x6e, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x26,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x71, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x5c, 0x0a, 0x19, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x08, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x42, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x14, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x22, 0x74, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x38, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x49, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5d, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x3c, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x73, 0x0a, 0x2c, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0x5e, 0x0a, 0x2d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41,
	0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x3b, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x29, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x11,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x29,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x2b, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x47, 0x0a,
	0x13, 0x4c, 0x6f, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x1c, 0x49, 0x73, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x32, 0x93,
	0x18, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x33, 0x0a, 0x08,
	0x44, 0x65, 0x65, 0x70, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22,
	0x00, 0x12, 0x40, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e,
	0x4c, 0x6f, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69,
	0x64, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x49, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x64, 0x12, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e,
	0x49, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x49, 0x73,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x49, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x64, 0x42, 0x75, 0x6c, 0x6b, 0x12, 0x20, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x2e, 0x49, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x42,
	0x75, 0x6c, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x2e, 0x49, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x42, 0x75, 0x6c, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x6b, 0x0a,
	0x16, 0x49, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x42, 0x79, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x26, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x2e, 0x49, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64,
	0x42, 0x79, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x27, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x49, 0x73, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x42, 0x79, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x16, 0x49, 0x73,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x2e, 0x49, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x49,
	0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x3a, 0x0a,
	0x0b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56,
	0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x29, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x59, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12,
	0x23, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x24, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x9e, 0x01, 0x0a, 0x27,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x37, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x41, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x38, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x79, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x41, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x6e, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2d, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2e,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2f,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x00, 0x12, 0x4a, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x50, 0x0a,
	0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x52, 0x0a,
	0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22,
	0x00, 0x12, 0x5c, 0x0a, 0x1c, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x46,
	0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x2c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12,
	0x42, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69,
	0x64, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x32,
	0x0a, 0x0b, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x13, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x13,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x2e, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12,
	0x3c, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x44, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6f,
	0x69, 0x64, 0x1a, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x00, 0x42, 0x3c, 0x5a, 0x1e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x53, 0x4b, 0x46, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0xaa, 0x02, 0x19, 0x53, 0x4b, 0x46, 0x2e, 0x45, 0x6e, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_authorize_grpcapi_proto_rawDescOnce sync.Once
	file_authorize_grpcapi_proto_rawDescData = file_authorize_grpcapi_proto_rawDesc
)

func file_authorize_grpcapi_proto_rawDescGZIP() []byte {
	file_authorize_grpcapi_proto_rawDescOnce.Do(func() {
		file_authorize_grpcapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_authorize_grpcapi_proto_rawDescData)
	})
	return file_authorize_grpcapi_proto_rawDescData
}

var file_authorize_grpcapi_proto_msgTypes = make([]protoimpl.MessageInfo, 54)
var file_authorize_grpcapi_proto_goTypes = []interface{}{
	(*UserRole)(nil), // 0: authorize.UserRole
	(*ApplyRolesForUserOnResourcesInput)(nil),             // 1: authorize.ApplyRolesForUserOnResourcesInput
	(*GetUserActionsInput)(nil),                           // 2: authorize.GetUserActionsInput
	(*GetUserActionsOutput)(nil),                          // 3: authorize.GetUserActionsOutput
	(*GetUserRoleInput)(nil),                              // 4: authorize.GetUserRoleInput
	(*RemoveUserRoleInput)(nil),                           // 5: authorize.RemoveUserRoleInput
	(*IsAuthorizedInput)(nil),                             // 6: authorize.IsAuthorizedInput
	(*IsAuthorizedBulkInput)(nil),                         // 7: authorize.IsAuthorizedBulkInput
	(*IsAuthorizedOutput)(nil),                            // 8: authorize.IsAuthorizedOutput
	(*GetResourceOutput)(nil),                             // 9: authorize.GetResourceOutput
	(*GetResourceInput)(nil),                              // 10: authorize.GetResourceInput
	(*GetResourceParentsInput)(nil),                       // 11: authorize.GetResourceParentsInput
	(*GetResourceChildrenInput)(nil),                      // 12: authorize.GetResourceChildrenInput
	(*GetResourcesOutput)(nil),                            // 13: authorize.GetResourcesOutput
	(*IsAuthorizedOutItem)(nil),                           // 14: authorize.IsAuthorizedOutItem
	(*IsAuthorizedBulkOutput)(nil),                        // 15: authorize.IsAuthorizedBulkOutput
	(*IsAuthorizedByEndpointInput)(nil),                   // 16: authorize.IsAuthorizedByEndpointInput
	(*IsAuthorizedByEndpointOutput)(nil),                  // 17: authorize.IsAuthorizedByEndpointOutput
	(*AddResourceInput)(nil),                              // 18: authorize.AddResourceInput
	(*RemoveResourceInput)(nil),                           // 19: authorize.RemoveResourceInput
	(*AddResourcesInput)(nil),                             // 20: authorize.AddResourcesInput
	(*RemoveResourcesInput)(nil),                          // 21: authorize.RemoveResourcesInput
	(*GetResourcesWithActionsAccessInput)(nil),            // 22: authorize.GetResourcesWithActionsAccessInput
	(*GetResourcesWithActionsAccessOutput)(nil),           // 23: authorize.GetResourcesWithActionsAccessOutput
	(*GetResourcesByUserActionInput)(nil),                 // 24: authorize.GetResourcesByUserActionInput
	(*GetResourcesByUserActionOutput)(nil),                // 25: authorize.GetResourcesByUserActionOutput
	(*GetResourcesByTypeInput)(nil),                       // 26: authorize.GetResourcesByTypeInput
	(*GetResourcesByOriginAndTypeInput)(nil),              // 27: authorize.GetResourcesByOriginAndTypeInput
	(*GetUserIDsWithAccessToResourceInput)(nil),           // 28: authorize.GetUserIDsWithAccessToResourceInput
	(*GetResourcesByTypeOutput)(nil),                      // 29: authorize.GetResourcesByTypeOutput
	(*GetResourcesByOriginAndTypeOutput)(nil),             // 30: authorize.GetResourcesByOriginAndTypeOutput
	(*GetUserIDsWithAccessToResourceOutput)(nil),          // 31: authorize.GetUserIDsWithAccessToResourceOutput
	(*AddResourceRelationInput)(nil),                      // 32: authorize.AddResourceRelationInput
	(*RemoveResourceRelationInput)(nil),                   // 33: authorize.RemoveResourceRelationInput
	(*AddResourceRelationsInput)(nil),                     // 34: authorize.AddResourceRelationsInput
	(*RemoveResourceRelationsInput)(nil),                  // 35: authorize.RemoveResourceRelationsInput
	(*ApplyUserActionInput)(nil),                          // 36: authorize.ApplyUserActionInput
	(*RemoveUserActionInput)(nil),                         // 37: authorize.RemoveUserActionInput
	(*Action)(nil),                                        // 38: authorize.Action
	(*GetActionsByUserRoleInput)(nil),                     // 39: authorize.GetActionsByUserRoleInput
	(*GetActionsByUserRoleOutput)(nil),                    // 40: authorize.GetActionsByUserRoleOutput
	(*ActionResource)(nil),                                // 41: authorize.ActionResource
	(*GetResourcesAndActionsByUserInput)(nil),             // 42: authorize.GetResourcesAndActionsByUserInput
	(*GetResourcesAndActionsByUserOutput)(nil),            // 43: authorize.GetResourcesAndActionsByUserOutput
	(*GetResourcesAndActionsByUserAndResourceInput)(nil),  // 44: authorize.GetResourcesAndActionsByUserAndResourceInput
	(*GetResourcesAndActionsByUserAndResourceOutput)(nil), // 45: authorize.GetResourcesAndActionsByUserAndResourceOutput
	(*AddActionInput)(nil),                                // 46: authorize.AddActionInput
	(*RemoveActionInput)(nil),                             // 47: authorize.RemoveActionInput
	(*GetActionInput)(nil),                                // 48: authorize.GetActionInput
	(*GetActionOutput)(nil),                               // 49: authorize.GetActionOutput
	(*GetAllActionsOutput)(nil),                           // 50: authorize.GetAllActionsOutput
	(*LogClientStateInput)(nil),                           // 51: authorize.LogClientStateInput
	(*IsAuthorizedWithReasonOutput)(nil),                  // 52: authorize.IsAuthorizedWithReasonOutput
	nil,                                                   // 53: authorize.Action.DataEntry
	(*common.Origin)(nil),                                 // 54: common.Origin
	(*common.Void)(nil),                                   // 55: common.Void
	(*common.PrimitiveString)(nil),                        // 56: common.PrimitiveString
}
var file_authorize_grpcapi_proto_depIdxs = []int32{
	54, // 0: authorize.ApplyRolesForUserOnResourcesInput.resources:type_name -> common.Origin
	38, // 1: authorize.GetUserActionsOutput.actions:type_name -> authorize.Action
	54, // 2: authorize.IsAuthorizedInput.resource:type_name -> common.Origin
	54, // 3: authorize.IsAuthorizedBulkInput.resources:type_name -> common.Origin
	54, // 4: authorize.GetResourceOutput.resource:type_name -> common.Origin
	54, // 5: authorize.GetResourceParentsInput.resource:type_name -> common.Origin
	54, // 6: authorize.GetResourceChildrenInput.resource:type_name -> common.Origin
	54, // 7: authorize.GetResourcesOutput.resources:type_name -> common.Origin
	54, // 8: authorize.IsAuthorizedOutItem.resource:type_name -> common.Origin
	14, // 9: authorize.IsAuthorizedBulkOutput.responses:type_name -> authorize.IsAuthorizedOutItem
	54, // 10: authorize.AddResourceInput.resource:type_name -> common.Origin
	54, // 11: authorize.RemoveResourceInput.resource:type_name -> common.Origin
	54, // 12: authorize.AddResourcesInput.resource:type_name -> common.Origin
	54, // 13: authorize.RemoveResourcesInput.resource:type_name -> common.Origin
	54, // 14: authorize.GetResourcesWithActionsAccessInput.resource:type_name -> common.Origin
	54, // 15: authorize.GetResourcesWithActionsAccessOutput.resources:type_name -> common.Origin
	54, // 16: authorize.GetResourcesByUserActionOutput.resources:type_name -> common.Origin
	54, // 17: authorize.GetResourcesByOriginAndTypeInput.resource:type_name -> common.Origin
	54, // 18: authorize.GetUserIDsWithAccessToResourceInput.resource:type_name -> common.Origin
	54, // 19: authorize.GetResourcesByTypeOutput.resources:type_name -> common.Origin
	54, // 20: authorize.GetResourcesByOriginAndTypeOutput.resources:type_name -> common.Origin
	54, // 21: authorize.AddResourceRelationInput.resource:type_name -> common.Origin
	54, // 22: authorize.AddResourceRelationInput.parent:type_name -> common.Origin
	54, // 23: authorize.RemoveResourceRelationInput.resource:type_name -> common.Origin
	54, // 24: authorize.RemoveResourceRelationInput.parent:type_name -> common.Origin
	32, // 25: authorize.AddResourceRelationsInput.relation:type_name -> authorize.AddResourceRelationInput
	33, // 26: authorize.RemoveResourceRelationsInput.relation:type_name -> authorize.RemoveResourceRelationInput
	54, // 27: authorize.ApplyUserActionInput.resource:type_name -> common.Origin
	54, // 28: authorize.RemoveUserActionInput.resource:type_name -> common.Origin
	53, // 29: authorize.Action.data:type_name -> authorize.Action.DataEntry
	38, // 30: authorize.GetActionsByUserRoleOutput.actions:type_name -> authorize.Action
	54, // 31: authorize.ActionResource.resource:type_name -> common.Origin
	41, // 32: authorize.GetResourcesAndActionsByUserOutput.data:type_name -> authorize.ActionResource
	54, // 33: authorize.GetResourcesAndActionsByUserAndResourceInput.resource:type_name -> common.Origin
	41, // 34: authorize.GetResourcesAndActionsByUserAndResourceOutput.data:type_name -> authorize.ActionResource
	38, // 35: authorize.AddActionInput.action:type_name -> authorize.Action
	38, // 36: authorize.GetActionOutput.action:type_name -> authorize.Action
	38, // 37: authorize.GetAllActionsOutput.actions:type_name -> authorize.Action
	55, // 38: authorize.Authorize.DeepPing:input_type -> common.Void
	51, // 39: authorize.Authorize.LogClientState:input_type -> authorize.LogClientStateInput
	6,  // 40: authorize.Authorize.IsAuthorized:input_type -> authorize.IsAuthorizedInput
	7,  // 41: authorize.Authorize.IsAuthorizedBulk:input_type -> authorize.IsAuthorizedBulkInput
	16, // 42: authorize.Authorize.IsAuthorizedByEndpoint:input_type -> authorize.IsAuthorizedByEndpointInput
	6,  // 43: authorize.Authorize.IsAuthorizedWithReason:input_type -> authorize.IsAuthorizedInput
	18, // 44: authorize.Authorize.AddResource:input_type -> authorize.AddResourceInput
	19, // 45: authorize.Authorize.RemoveResource:input_type -> authorize.RemoveResourceInput
	10, // 46: authorize.Authorize.GetResource:input_type -> authorize.GetResourceInput
	20, // 47: authorize.Authorize.AddResources:input_type -> authorize.AddResourcesInput
	21, // 48: authorize.Authorize.RemoveResources:input_type -> authorize.RemoveResourcesInput
	24, // 49: authorize.Authorize.GetResourcesByUserAction:input_type -> authorize.GetResourcesByUserActionInput
	26, // 50: authorize.Authorize.GetResourcesByType:input_type -> authorize.GetResourcesByTypeInput
	11, // 51: authorize.Authorize.GetResourceParents:input_type -> authorize.GetResourceParentsInput
	12, // 52: authorize.Authorize.GetResourceChildren:input_type -> authorize.GetResourceChildrenInput
	39, // 53: authorize.Authorize.GetActionsByUserRole:input_type -> authorize.GetActionsByUserRoleInput
	42, // 54: authorize.Authorize.GetResourcesAndActionsByUser:input_type -> authorize.GetResourcesAndActionsByUserInput
	44, // 55: authorize.Authorize.GetResourcesAndActionsByUserAndResource:input_type -> authorize.GetResourcesAndActionsByUserAndResourceInput
	27, // 56: authorize.Authorize.GetResourcesByOriginAndType:input_type -> authorize.GetResourcesByOriginAndTypeInput
	22, // 57: authorize.Authorize.GetResourcesWithActionsAccess:input_type -> authorize.GetResourcesWithActionsAccessInput
	28, // 58: authorize.Authorize.GetUserIDsWithAccessToResource:input_type -> authorize.GetUserIDsWithAccessToResourceInput
	32, // 59: authorize.Authorize.AddResourceRelation:input_type -> authorize.AddResourceRelationInput
	33, // 60: authorize.Authorize.RemoveResourceRelation:input_type -> authorize.RemoveResourceRelationInput
	34, // 61: authorize.Authorize.AddResourceRelations:input_type -> authorize.AddResourceRelationsInput
	35, // 62: authorize.Authorize.RemoveResourceRelations:input_type -> authorize.RemoveResourceRelationsInput
	1,  // 63: authorize.Authorize.ApplyRolesForUserOnResources:input_type -> authorize.ApplyRolesForUserOnResourcesInput
	36, // 64: authorize.Authorize.ApplyUserAction:input_type -> authorize.ApplyUserActionInput
	2,  // 65: authorize.Authorize.GetUserActions:input_type -> authorize.GetUserActionsInput
	37, // 66: authorize.Authorize.RemoveUserAction:input_type -> authorize.RemoveUserActionInput
	0,  // 67: authorize.Authorize.AddUserRole:input_type -> authorize.UserRole
	4,  // 68: authorize.Authorize.GetUserRole:input_type -> authorize.GetUserRoleInput
	5,  // 69: authorize.Authorize.RemoveUserRole:input_type -> authorize.RemoveUserRoleInput
	46, // 70: authorize.Authorize.AddAction:input_type -> authorize.AddActionInput
	47, // 71: authorize.Authorize.RemoveAction:input_type -> authorize.RemoveActionInput
	48, // 72: authorize.Authorize.GetAction:input_type -> authorize.GetActionInput
	55, // 73: authorize.Authorize.GetAllActions:input_type -> common.Void
	56, // 74: authorize.Authorize.DeepPing:output_type -> common.PrimitiveString
	55, // 75: authorize.Authorize.LogClientState:output_type -> common.Void
	8,  // 76: authorize.Authorize.IsAuthorized:output_type -> authorize.IsAuthorizedOutput
	15, // 77: authorize.Authorize.IsAuthorizedBulk:output_type -> authorize.IsAuthorizedBulkOutput
	17, // 78: authorize.Authorize.IsAuthorizedByEndpoint:output_type -> authorize.IsAuthorizedByEndpointOutput
	52, // 79: authorize.Authorize.IsAuthorizedWithReason:output_type -> authorize.IsAuthorizedWithReasonOutput
	55, // 80: authorize.Authorize.AddResource:output_type -> common.Void
	55, // 81: authorize.Authorize.RemoveResource:output_type -> common.Void
	9,  // 82: authorize.Authorize.GetResource:output_type -> authorize.GetResourceOutput
	55, // 83: authorize.Authorize.AddResources:output_type -> common.Void
	55, // 84: authorize.Authorize.RemoveResources:output_type -> common.Void
	25, // 85: authorize.Authorize.GetResourcesByUserAction:output_type -> authorize.GetResourcesByUserActionOutput
	29, // 86: authorize.Authorize.GetResourcesByType:output_type -> authorize.GetResourcesByTypeOutput
	13, // 87: authorize.Authorize.GetResourceParents:output_type -> authorize.GetResourcesOutput
	13, // 88: authorize.Authorize.GetResourceChildren:output_type -> authorize.GetResourcesOutput
	40, // 89: authorize.Authorize.GetActionsByUserRole:output_type -> authorize.GetActionsByUserRoleOutput
	43, // 90: authorize.Authorize.GetResourcesAndActionsByUser:output_type -> authorize.GetResourcesAndActionsByUserOutput
	45, // 91: authorize.Authorize.GetResourcesAndActionsByUserAndResource:output_type -> authorize.GetResourcesAndActionsByUserAndResourceOutput
	30, // 92: authorize.Authorize.GetResourcesByOriginAndType:output_type -> authorize.GetResourcesByOriginAndTypeOutput
	23, // 93: authorize.Authorize.GetResourcesWithActionsAccess:output_type -> authorize.GetResourcesWithActionsAccessOutput
	31, // 94: authorize.Authorize.GetUserIDsWithAccessToResource:output_type -> authorize.GetUserIDsWithAccessToResourceOutput
	55, // 95: authorize.Authorize.AddResourceRelation:output_type -> common.Void
	55, // 96: authorize.Authorize.RemoveResourceRelation:output_type -> common.Void
	55, // 97: authorize.Authorize.AddResourceRelations:output_type -> common.Void
	55, // 98: authorize.Authorize.RemoveResourceRelations:output_type -> common.Void
	55, // 99: authorize.Authorize.ApplyRolesForUserOnResources:output_type -> common.Void
	55, // 100: authorize.Authorize.ApplyUserAction:output_type -> common.Void
	3,  // 101: authorize.Authorize.GetUserActions:output_type -> authorize.GetUserActionsOutput
	55, // 102: authorize.Authorize.RemoveUserAction:output_type -> common.Void
	55, // 103: authorize.Authorize.AddUserRole:output_type -> common.Void
	0,  // 104: authorize.Authorize.GetUserRole:output_type -> authorize.UserRole
	55, // 105: authorize.Authorize.RemoveUserRole:output_type -> common.Void
	55, // 106: authorize.Authorize.AddAction:output_type -> common.Void
	55, // 107: authorize.Authorize.RemoveAction:output_type -> common.Void
	49, // 108: authorize.Authorize.GetAction:output_type -> authorize.GetActionOutput
	50, // 109: authorize.Authorize.GetAllActions:output_type -> authorize.GetAllActionsOutput
	74, // [74:110] is the sub-list for method output_type
	38, // [38:74] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_authorize_grpcapi_proto_init() }
func file_authorize_grpcapi_proto_init() {
	if File_authorize_grpcapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_authorize_grpcapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyRolesForUserOnResourcesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserActionsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserActionsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRoleInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserRoleInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAuthorizedInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAuthorizedBulkInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAuthorizedOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceParentsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceChildrenInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAuthorizedOutItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAuthorizedBulkOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAuthorizedByEndpointInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAuthorizedByEndpointOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddResourceInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveResourceInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddResourcesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveResourcesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesWithActionsAccessInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesWithActionsAccessOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesByUserActionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesByUserActionOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesByTypeInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesByOriginAndTypeInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserIDsWithAccessToResourceInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesByTypeOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesByOriginAndTypeOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserIDsWithAccessToResourceOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddResourceRelationInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveResourceRelationInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddResourceRelationsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveResourceRelationsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyUserActionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserActionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActionsByUserRoleInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActionsByUserRoleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesAndActionsByUserInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesAndActionsByUserOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesAndActionsByUserAndResourceInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesAndActionsByUserAndResourceOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddActionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveActionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActionOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllActionsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogClientStateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorize_grpcapi_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAuthorizedWithReasonOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_authorize_grpcapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   54,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_authorize_grpcapi_proto_goTypes,
		DependencyIndexes: file_authorize_grpcapi_proto_depIdxs,
		MessageInfos:      file_authorize_grpcapi_proto_msgTypes,
	}.Build()
	File_authorize_grpcapi_proto = out.File
	file_authorize_grpcapi_proto_rawDesc = nil
	file_authorize_grpcapi_proto_goTypes = nil
	file_authorize_grpcapi_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthorizeClient is the client API for Authorize service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthorizeClient interface {
	DeepPing(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*common.PrimitiveString, error)
	LogClientState(ctx context.Context, in *LogClientStateInput, opts ...grpc.CallOption) (*common.Void, error)
	IsAuthorized(ctx context.Context, in *IsAuthorizedInput, opts ...grpc.CallOption) (*IsAuthorizedOutput, error)
	IsAuthorizedBulk(ctx context.Context, in *IsAuthorizedBulkInput, opts ...grpc.CallOption) (*IsAuthorizedBulkOutput, error)
	IsAuthorizedByEndpoint(ctx context.Context, in *IsAuthorizedByEndpointInput, opts ...grpc.CallOption) (*IsAuthorizedByEndpointOutput, error)
	IsAuthorizedWithReason(ctx context.Context, in *IsAuthorizedInput, opts ...grpc.CallOption) (*IsAuthorizedWithReasonOutput, error)
	AddResource(ctx context.Context, in *AddResourceInput, opts ...grpc.CallOption) (*common.Void, error)
	RemoveResource(ctx context.Context, in *RemoveResourceInput, opts ...grpc.CallOption) (*common.Void, error)
	GetResource(ctx context.Context, in *GetResourceInput, opts ...grpc.CallOption) (*GetResourceOutput, error)
	AddResources(ctx context.Context, in *AddResourcesInput, opts ...grpc.CallOption) (*common.Void, error)
	RemoveResources(ctx context.Context, in *RemoveResourcesInput, opts ...grpc.CallOption) (*common.Void, error)
	GetResourcesByUserAction(ctx context.Context, in *GetResourcesByUserActionInput, opts ...grpc.CallOption) (*GetResourcesByUserActionOutput, error)
	GetResourcesByType(ctx context.Context, in *GetResourcesByTypeInput, opts ...grpc.CallOption) (*GetResourcesByTypeOutput, error)
	GetResourceParents(ctx context.Context, in *GetResourceParentsInput, opts ...grpc.CallOption) (*GetResourcesOutput, error)
	GetResourceChildren(ctx context.Context, in *GetResourceChildrenInput, opts ...grpc.CallOption) (*GetResourcesOutput, error)
	GetActionsByUserRole(ctx context.Context, in *GetActionsByUserRoleInput, opts ...grpc.CallOption) (*GetActionsByUserRoleOutput, error)
	GetResourcesAndActionsByUser(ctx context.Context, in *GetResourcesAndActionsByUserInput, opts ...grpc.CallOption) (*GetResourcesAndActionsByUserOutput, error)
	GetResourcesAndActionsByUserAndResource(ctx context.Context, in *GetResourcesAndActionsByUserAndResourceInput, opts ...grpc.CallOption) (*GetResourcesAndActionsByUserAndResourceOutput, error)
	GetResourcesByOriginAndType(ctx context.Context, in *GetResourcesByOriginAndTypeInput, opts ...grpc.CallOption) (*GetResourcesByOriginAndTypeOutput, error)
	GetResourcesWithActionsAccess(ctx context.Context, in *GetResourcesWithActionsAccessInput, opts ...grpc.CallOption) (*GetResourcesWithActionsAccessOutput, error)
	GetUserIDsWithAccessToResource(ctx context.Context, in *GetUserIDsWithAccessToResourceInput, opts ...grpc.CallOption) (*GetUserIDsWithAccessToResourceOutput, error)
	AddResourceRelation(ctx context.Context, in *AddResourceRelationInput, opts ...grpc.CallOption) (*common.Void, error)
	RemoveResourceRelation(ctx context.Context, in *RemoveResourceRelationInput, opts ...grpc.CallOption) (*common.Void, error)
	AddResourceRelations(ctx context.Context, in *AddResourceRelationsInput, opts ...grpc.CallOption) (*common.Void, error)
	RemoveResourceRelations(ctx context.Context, in *RemoveResourceRelationsInput, opts ...grpc.CallOption) (*common.Void, error)
	ApplyRolesForUserOnResources(ctx context.Context, in *ApplyRolesForUserOnResourcesInput, opts ...grpc.CallOption) (*common.Void, error)
	ApplyUserAction(ctx context.Context, in *ApplyUserActionInput, opts ...grpc.CallOption) (*common.Void, error)
	GetUserActions(ctx context.Context, in *GetUserActionsInput, opts ...grpc.CallOption) (*GetUserActionsOutput, error)
	RemoveUserAction(ctx context.Context, in *RemoveUserActionInput, opts ...grpc.CallOption) (*common.Void, error)
	AddUserRole(ctx context.Context, in *UserRole, opts ...grpc.CallOption) (*common.Void, error)
	GetUserRole(ctx context.Context, in *GetUserRoleInput, opts ...grpc.CallOption) (*UserRole, error)
	RemoveUserRole(ctx context.Context, in *RemoveUserRoleInput, opts ...grpc.CallOption) (*common.Void, error)
	AddAction(ctx context.Context, in *AddActionInput, opts ...grpc.CallOption) (*common.Void, error)
	RemoveAction(ctx context.Context, in *RemoveActionInput, opts ...grpc.CallOption) (*common.Void, error)
	GetAction(ctx context.Context, in *GetActionInput, opts ...grpc.CallOption) (*GetActionOutput, error)
	GetAllActions(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*GetAllActionsOutput, error)
}

type authorizeClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthorizeClient(cc grpc.ClientConnInterface) AuthorizeClient {
	return &authorizeClient{cc}
}

func (c *authorizeClient) DeepPing(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*common.PrimitiveString, error) {
	out := new(common.PrimitiveString)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/DeepPing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) LogClientState(ctx context.Context, in *LogClientStateInput, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/LogClientState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) IsAuthorized(ctx context.Context, in *IsAuthorizedInput, opts ...grpc.CallOption) (*IsAuthorizedOutput, error) {
	out := new(IsAuthorizedOutput)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/IsAuthorized", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) IsAuthorizedBulk(ctx context.Context, in *IsAuthorizedBulkInput, opts ...grpc.CallOption) (*IsAuthorizedBulkOutput, error) {
	out := new(IsAuthorizedBulkOutput)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/IsAuthorizedBulk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) IsAuthorizedByEndpoint(ctx context.Context, in *IsAuthorizedByEndpointInput, opts ...grpc.CallOption) (*IsAuthorizedByEndpointOutput, error) {
	out := new(IsAuthorizedByEndpointOutput)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/IsAuthorizedByEndpoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) IsAuthorizedWithReason(ctx context.Context, in *IsAuthorizedInput, opts ...grpc.CallOption) (*IsAuthorizedWithReasonOutput, error) {
	out := new(IsAuthorizedWithReasonOutput)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/IsAuthorizedWithReason", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) AddResource(ctx context.Context, in *AddResourceInput, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/AddResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) RemoveResource(ctx context.Context, in *RemoveResourceInput, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/RemoveResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) GetResource(ctx context.Context, in *GetResourceInput, opts ...grpc.CallOption) (*GetResourceOutput, error) {
	out := new(GetResourceOutput)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/GetResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) AddResources(ctx context.Context, in *AddResourcesInput, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/AddResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) RemoveResources(ctx context.Context, in *RemoveResourcesInput, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/RemoveResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) GetResourcesByUserAction(ctx context.Context, in *GetResourcesByUserActionInput, opts ...grpc.CallOption) (*GetResourcesByUserActionOutput, error) {
	out := new(GetResourcesByUserActionOutput)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/GetResourcesByUserAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) GetResourcesByType(ctx context.Context, in *GetResourcesByTypeInput, opts ...grpc.CallOption) (*GetResourcesByTypeOutput, error) {
	out := new(GetResourcesByTypeOutput)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/GetResourcesByType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) GetResourceParents(ctx context.Context, in *GetResourceParentsInput, opts ...grpc.CallOption) (*GetResourcesOutput, error) {
	out := new(GetResourcesOutput)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/GetResourceParents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) GetResourceChildren(ctx context.Context, in *GetResourceChildrenInput, opts ...grpc.CallOption) (*GetResourcesOutput, error) {
	out := new(GetResourcesOutput)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/GetResourceChildren", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) GetActionsByUserRole(ctx context.Context, in *GetActionsByUserRoleInput, opts ...grpc.CallOption) (*GetActionsByUserRoleOutput, error) {
	out := new(GetActionsByUserRoleOutput)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/GetActionsByUserRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) GetResourcesAndActionsByUser(ctx context.Context, in *GetResourcesAndActionsByUserInput, opts ...grpc.CallOption) (*GetResourcesAndActionsByUserOutput, error) {
	out := new(GetResourcesAndActionsByUserOutput)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/GetResourcesAndActionsByUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) GetResourcesAndActionsByUserAndResource(ctx context.Context, in *GetResourcesAndActionsByUserAndResourceInput, opts ...grpc.CallOption) (*GetResourcesAndActionsByUserAndResourceOutput, error) {
	out := new(GetResourcesAndActionsByUserAndResourceOutput)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/GetResourcesAndActionsByUserAndResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) GetResourcesByOriginAndType(ctx context.Context, in *GetResourcesByOriginAndTypeInput, opts ...grpc.CallOption) (*GetResourcesByOriginAndTypeOutput, error) {
	out := new(GetResourcesByOriginAndTypeOutput)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/GetResourcesByOriginAndType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) GetResourcesWithActionsAccess(ctx context.Context, in *GetResourcesWithActionsAccessInput, opts ...grpc.CallOption) (*GetResourcesWithActionsAccessOutput, error) {
	out := new(GetResourcesWithActionsAccessOutput)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/GetResourcesWithActionsAccess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) GetUserIDsWithAccessToResource(ctx context.Context, in *GetUserIDsWithAccessToResourceInput, opts ...grpc.CallOption) (*GetUserIDsWithAccessToResourceOutput, error) {
	out := new(GetUserIDsWithAccessToResourceOutput)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/GetUserIDsWithAccessToResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) AddResourceRelation(ctx context.Context, in *AddResourceRelationInput, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/AddResourceRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) RemoveResourceRelation(ctx context.Context, in *RemoveResourceRelationInput, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/RemoveResourceRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) AddResourceRelations(ctx context.Context, in *AddResourceRelationsInput, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/AddResourceRelations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) RemoveResourceRelations(ctx context.Context, in *RemoveResourceRelationsInput, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/RemoveResourceRelations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) ApplyRolesForUserOnResources(ctx context.Context, in *ApplyRolesForUserOnResourcesInput, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/ApplyRolesForUserOnResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) ApplyUserAction(ctx context.Context, in *ApplyUserActionInput, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/ApplyUserAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) GetUserActions(ctx context.Context, in *GetUserActionsInput, opts ...grpc.CallOption) (*GetUserActionsOutput, error) {
	out := new(GetUserActionsOutput)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/GetUserActions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) RemoveUserAction(ctx context.Context, in *RemoveUserActionInput, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/RemoveUserAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) AddUserRole(ctx context.Context, in *UserRole, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/AddUserRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) GetUserRole(ctx context.Context, in *GetUserRoleInput, opts ...grpc.CallOption) (*UserRole, error) {
	out := new(UserRole)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/GetUserRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) RemoveUserRole(ctx context.Context, in *RemoveUserRoleInput, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/RemoveUserRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) AddAction(ctx context.Context, in *AddActionInput, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/AddAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) RemoveAction(ctx context.Context, in *RemoveActionInput, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/RemoveAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) GetAction(ctx context.Context, in *GetActionInput, opts ...grpc.CallOption) (*GetActionOutput, error) {
	out := new(GetActionOutput)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/GetAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) GetAllActions(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*GetAllActionsOutput, error) {
	out := new(GetAllActionsOutput)
	err := c.cc.Invoke(ctx, "/authorize.Authorize/GetAllActions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthorizeServer is the server API for Authorize service.
type AuthorizeServer interface {
	DeepPing(context.Context, *common.Void) (*common.PrimitiveString, error)
	LogClientState(context.Context, *LogClientStateInput) (*common.Void, error)
	IsAuthorized(context.Context, *IsAuthorizedInput) (*IsAuthorizedOutput, error)
	IsAuthorizedBulk(context.Context, *IsAuthorizedBulkInput) (*IsAuthorizedBulkOutput, error)
	IsAuthorizedByEndpoint(context.Context, *IsAuthorizedByEndpointInput) (*IsAuthorizedByEndpointOutput, error)
	IsAuthorizedWithReason(context.Context, *IsAuthorizedInput) (*IsAuthorizedWithReasonOutput, error)
	AddResource(context.Context, *AddResourceInput) (*common.Void, error)
	RemoveResource(context.Context, *RemoveResourceInput) (*common.Void, error)
	GetResource(context.Context, *GetResourceInput) (*GetResourceOutput, error)
	AddResources(context.Context, *AddResourcesInput) (*common.Void, error)
	RemoveResources(context.Context, *RemoveResourcesInput) (*common.Void, error)
	GetResourcesByUserAction(context.Context, *GetResourcesByUserActionInput) (*GetResourcesByUserActionOutput, error)
	GetResourcesByType(context.Context, *GetResourcesByTypeInput) (*GetResourcesByTypeOutput, error)
	GetResourceParents(context.Context, *GetResourceParentsInput) (*GetResourcesOutput, error)
	GetResourceChildren(context.Context, *GetResourceChildrenInput) (*GetResourcesOutput, error)
	GetActionsByUserRole(context.Context, *GetActionsByUserRoleInput) (*GetActionsByUserRoleOutput, error)
	GetResourcesAndActionsByUser(context.Context, *GetResourcesAndActionsByUserInput) (*GetResourcesAndActionsByUserOutput, error)
	GetResourcesAndActionsByUserAndResource(context.Context, *GetResourcesAndActionsByUserAndResourceInput) (*GetResourcesAndActionsByUserAndResourceOutput, error)
	GetResourcesByOriginAndType(context.Context, *GetResourcesByOriginAndTypeInput) (*GetResourcesByOriginAndTypeOutput, error)
	GetResourcesWithActionsAccess(context.Context, *GetResourcesWithActionsAccessInput) (*GetResourcesWithActionsAccessOutput, error)
	GetUserIDsWithAccessToResource(context.Context, *GetUserIDsWithAccessToResourceInput) (*GetUserIDsWithAccessToResourceOutput, error)
	AddResourceRelation(context.Context, *AddResourceRelationInput) (*common.Void, error)
	RemoveResourceRelation(context.Context, *RemoveResourceRelationInput) (*common.Void, error)
	AddResourceRelations(context.Context, *AddResourceRelationsInput) (*common.Void, error)
	RemoveResourceRelations(context.Context, *RemoveResourceRelationsInput) (*common.Void, error)
	ApplyRolesForUserOnResources(context.Context, *ApplyRolesForUserOnResourcesInput) (*common.Void, error)
	ApplyUserAction(context.Context, *ApplyUserActionInput) (*common.Void, error)
	GetUserActions(context.Context, *GetUserActionsInput) (*GetUserActionsOutput, error)
	RemoveUserAction(context.Context, *RemoveUserActionInput) (*common.Void, error)
	AddUserRole(context.Context, *UserRole) (*common.Void, error)
	GetUserRole(context.Context, *GetUserRoleInput) (*UserRole, error)
	RemoveUserRole(context.Context, *RemoveUserRoleInput) (*common.Void, error)
	AddAction(context.Context, *AddActionInput) (*common.Void, error)
	RemoveAction(context.Context, *RemoveActionInput) (*common.Void, error)
	GetAction(context.Context, *GetActionInput) (*GetActionOutput, error)
	GetAllActions(context.Context, *common.Void) (*GetAllActionsOutput, error)
}

// UnimplementedAuthorizeServer can be embedded to have forward compatible implementations.
type UnimplementedAuthorizeServer struct {
}

func (*UnimplementedAuthorizeServer) DeepPing(context.Context, *common.Void) (*common.PrimitiveString, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeepPing not implemented")
}
func (*UnimplementedAuthorizeServer) LogClientState(context.Context, *LogClientStateInput) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogClientState not implemented")
}
func (*UnimplementedAuthorizeServer) IsAuthorized(context.Context, *IsAuthorizedInput) (*IsAuthorizedOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsAuthorized not implemented")
}
func (*UnimplementedAuthorizeServer) IsAuthorizedBulk(context.Context, *IsAuthorizedBulkInput) (*IsAuthorizedBulkOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsAuthorizedBulk not implemented")
}
func (*UnimplementedAuthorizeServer) IsAuthorizedByEndpoint(context.Context, *IsAuthorizedByEndpointInput) (*IsAuthorizedByEndpointOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsAuthorizedByEndpoint not implemented")
}
func (*UnimplementedAuthorizeServer) IsAuthorizedWithReason(context.Context, *IsAuthorizedInput) (*IsAuthorizedWithReasonOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsAuthorizedWithReason not implemented")
}
func (*UnimplementedAuthorizeServer) AddResource(context.Context, *AddResourceInput) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddResource not implemented")
}
func (*UnimplementedAuthorizeServer) RemoveResource(context.Context, *RemoveResourceInput) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveResource not implemented")
}
func (*UnimplementedAuthorizeServer) GetResource(context.Context, *GetResourceInput) (*GetResourceOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResource not implemented")
}
func (*UnimplementedAuthorizeServer) AddResources(context.Context, *AddResourcesInput) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddResources not implemented")
}
func (*UnimplementedAuthorizeServer) RemoveResources(context.Context, *RemoveResourcesInput) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveResources not implemented")
}
func (*UnimplementedAuthorizeServer) GetResourcesByUserAction(context.Context, *GetResourcesByUserActionInput) (*GetResourcesByUserActionOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourcesByUserAction not implemented")
}
func (*UnimplementedAuthorizeServer) GetResourcesByType(context.Context, *GetResourcesByTypeInput) (*GetResourcesByTypeOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourcesByType not implemented")
}
func (*UnimplementedAuthorizeServer) GetResourceParents(context.Context, *GetResourceParentsInput) (*GetResourcesOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourceParents not implemented")
}
func (*UnimplementedAuthorizeServer) GetResourceChildren(context.Context, *GetResourceChildrenInput) (*GetResourcesOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourceChildren not implemented")
}
func (*UnimplementedAuthorizeServer) GetActionsByUserRole(context.Context, *GetActionsByUserRoleInput) (*GetActionsByUserRoleOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActionsByUserRole not implemented")
}
func (*UnimplementedAuthorizeServer) GetResourcesAndActionsByUser(context.Context, *GetResourcesAndActionsByUserInput) (*GetResourcesAndActionsByUserOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourcesAndActionsByUser not implemented")
}
func (*UnimplementedAuthorizeServer) GetResourcesAndActionsByUserAndResource(context.Context, *GetResourcesAndActionsByUserAndResourceInput) (*GetResourcesAndActionsByUserAndResourceOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourcesAndActionsByUserAndResource not implemented")
}
func (*UnimplementedAuthorizeServer) GetResourcesByOriginAndType(context.Context, *GetResourcesByOriginAndTypeInput) (*GetResourcesByOriginAndTypeOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourcesByOriginAndType not implemented")
}
func (*UnimplementedAuthorizeServer) GetResourcesWithActionsAccess(context.Context, *GetResourcesWithActionsAccessInput) (*GetResourcesWithActionsAccessOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourcesWithActionsAccess not implemented")
}
func (*UnimplementedAuthorizeServer) GetUserIDsWithAccessToResource(context.Context, *GetUserIDsWithAccessToResourceInput) (*GetUserIDsWithAccessToResourceOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserIDsWithAccessToResource not implemented")
}
func (*UnimplementedAuthorizeServer) AddResourceRelation(context.Context, *AddResourceRelationInput) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddResourceRelation not implemented")
}
func (*UnimplementedAuthorizeServer) RemoveResourceRelation(context.Context, *RemoveResourceRelationInput) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveResourceRelation not implemented")
}
func (*UnimplementedAuthorizeServer) AddResourceRelations(context.Context, *AddResourceRelationsInput) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddResourceRelations not implemented")
}
func (*UnimplementedAuthorizeServer) RemoveResourceRelations(context.Context, *RemoveResourceRelationsInput) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveResourceRelations not implemented")
}
func (*UnimplementedAuthorizeServer) ApplyRolesForUserOnResources(context.Context, *ApplyRolesForUserOnResourcesInput) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyRolesForUserOnResources not implemented")
}
func (*UnimplementedAuthorizeServer) ApplyUserAction(context.Context, *ApplyUserActionInput) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyUserAction not implemented")
}
func (*UnimplementedAuthorizeServer) GetUserActions(context.Context, *GetUserActionsInput) (*GetUserActionsOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserActions not implemented")
}
func (*UnimplementedAuthorizeServer) RemoveUserAction(context.Context, *RemoveUserActionInput) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveUserAction not implemented")
}
func (*UnimplementedAuthorizeServer) AddUserRole(context.Context, *UserRole) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUserRole not implemented")
}
func (*UnimplementedAuthorizeServer) GetUserRole(context.Context, *GetUserRoleInput) (*UserRole, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserRole not implemented")
}
func (*UnimplementedAuthorizeServer) RemoveUserRole(context.Context, *RemoveUserRoleInput) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveUserRole not implemented")
}
func (*UnimplementedAuthorizeServer) AddAction(context.Context, *AddActionInput) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAction not implemented")
}
func (*UnimplementedAuthorizeServer) RemoveAction(context.Context, *RemoveActionInput) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveAction not implemented")
}
func (*UnimplementedAuthorizeServer) GetAction(context.Context, *GetActionInput) (*GetActionOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAction not implemented")
}
func (*UnimplementedAuthorizeServer) GetAllActions(context.Context, *common.Void) (*GetAllActionsOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllActions not implemented")
}

func RegisterAuthorizeServer(s *grpc.Server, srv AuthorizeServer) {
	s.RegisterService(&_Authorize_serviceDesc, srv)
}

func _Authorize_DeepPing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).DeepPing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/DeepPing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).DeepPing(ctx, req.(*common.Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_LogClientState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogClientStateInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).LogClientState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/LogClientState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).LogClientState(ctx, req.(*LogClientStateInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_IsAuthorized_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsAuthorizedInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).IsAuthorized(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/IsAuthorized",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).IsAuthorized(ctx, req.(*IsAuthorizedInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_IsAuthorizedBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsAuthorizedBulkInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).IsAuthorizedBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/IsAuthorizedBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).IsAuthorizedBulk(ctx, req.(*IsAuthorizedBulkInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_IsAuthorizedByEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsAuthorizedByEndpointInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).IsAuthorizedByEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/IsAuthorizedByEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).IsAuthorizedByEndpoint(ctx, req.(*IsAuthorizedByEndpointInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_IsAuthorizedWithReason_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsAuthorizedInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).IsAuthorizedWithReason(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/IsAuthorizedWithReason",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).IsAuthorizedWithReason(ctx, req.(*IsAuthorizedInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_AddResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddResourceInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).AddResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/AddResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).AddResource(ctx, req.(*AddResourceInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_RemoveResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveResourceInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).RemoveResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/RemoveResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).RemoveResource(ctx, req.(*RemoveResourceInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_GetResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourceInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).GetResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/GetResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).GetResource(ctx, req.(*GetResourceInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_AddResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddResourcesInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).AddResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/AddResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).AddResources(ctx, req.(*AddResourcesInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_RemoveResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveResourcesInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).RemoveResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/RemoveResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).RemoveResources(ctx, req.(*RemoveResourcesInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_GetResourcesByUserAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourcesByUserActionInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).GetResourcesByUserAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/GetResourcesByUserAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).GetResourcesByUserAction(ctx, req.(*GetResourcesByUserActionInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_GetResourcesByType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourcesByTypeInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).GetResourcesByType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/GetResourcesByType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).GetResourcesByType(ctx, req.(*GetResourcesByTypeInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_GetResourceParents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourceParentsInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).GetResourceParents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/GetResourceParents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).GetResourceParents(ctx, req.(*GetResourceParentsInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_GetResourceChildren_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourceChildrenInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).GetResourceChildren(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/GetResourceChildren",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).GetResourceChildren(ctx, req.(*GetResourceChildrenInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_GetActionsByUserRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActionsByUserRoleInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).GetActionsByUserRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/GetActionsByUserRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).GetActionsByUserRole(ctx, req.(*GetActionsByUserRoleInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_GetResourcesAndActionsByUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourcesAndActionsByUserInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).GetResourcesAndActionsByUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/GetResourcesAndActionsByUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).GetResourcesAndActionsByUser(ctx, req.(*GetResourcesAndActionsByUserInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_GetResourcesAndActionsByUserAndResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourcesAndActionsByUserAndResourceInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).GetResourcesAndActionsByUserAndResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/GetResourcesAndActionsByUserAndResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).GetResourcesAndActionsByUserAndResource(ctx, req.(*GetResourcesAndActionsByUserAndResourceInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_GetResourcesByOriginAndType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourcesByOriginAndTypeInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).GetResourcesByOriginAndType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/GetResourcesByOriginAndType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).GetResourcesByOriginAndType(ctx, req.(*GetResourcesByOriginAndTypeInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_GetResourcesWithActionsAccess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourcesWithActionsAccessInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).GetResourcesWithActionsAccess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/GetResourcesWithActionsAccess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).GetResourcesWithActionsAccess(ctx, req.(*GetResourcesWithActionsAccessInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_GetUserIDsWithAccessToResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserIDsWithAccessToResourceInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).GetUserIDsWithAccessToResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/GetUserIDsWithAccessToResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).GetUserIDsWithAccessToResource(ctx, req.(*GetUserIDsWithAccessToResourceInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_AddResourceRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddResourceRelationInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).AddResourceRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/AddResourceRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).AddResourceRelation(ctx, req.(*AddResourceRelationInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_RemoveResourceRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveResourceRelationInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).RemoveResourceRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/RemoveResourceRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).RemoveResourceRelation(ctx, req.(*RemoveResourceRelationInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_AddResourceRelations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddResourceRelationsInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).AddResourceRelations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/AddResourceRelations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).AddResourceRelations(ctx, req.(*AddResourceRelationsInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_RemoveResourceRelations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveResourceRelationsInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).RemoveResourceRelations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/RemoveResourceRelations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).RemoveResourceRelations(ctx, req.(*RemoveResourceRelationsInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_ApplyRolesForUserOnResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyRolesForUserOnResourcesInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).ApplyRolesForUserOnResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/ApplyRolesForUserOnResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).ApplyRolesForUserOnResources(ctx, req.(*ApplyRolesForUserOnResourcesInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_ApplyUserAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyUserActionInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).ApplyUserAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/ApplyUserAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).ApplyUserAction(ctx, req.(*ApplyUserActionInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_GetUserActions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserActionsInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).GetUserActions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/GetUserActions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).GetUserActions(ctx, req.(*GetUserActionsInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_RemoveUserAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveUserActionInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).RemoveUserAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/RemoveUserAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).RemoveUserAction(ctx, req.(*RemoveUserActionInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_AddUserRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRole)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).AddUserRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/AddUserRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).AddUserRole(ctx, req.(*UserRole))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_GetUserRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRoleInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).GetUserRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/GetUserRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).GetUserRole(ctx, req.(*GetUserRoleInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_RemoveUserRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveUserRoleInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).RemoveUserRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/RemoveUserRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).RemoveUserRole(ctx, req.(*RemoveUserRoleInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_AddAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddActionInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).AddAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/AddAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).AddAction(ctx, req.(*AddActionInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_RemoveAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveActionInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).RemoveAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/RemoveAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).RemoveAction(ctx, req.(*RemoveActionInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_GetAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActionInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).GetAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/GetAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).GetAction(ctx, req.(*GetActionInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_GetAllActions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).GetAllActions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorize.Authorize/GetAllActions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).GetAllActions(ctx, req.(*common.Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _Authorize_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authorize.Authorize",
	HandlerType: (*AuthorizeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeepPing",
			Handler:    _Authorize_DeepPing_Handler,
		},
		{
			MethodName: "LogClientState",
			Handler:    _Authorize_LogClientState_Handler,
		},
		{
			MethodName: "IsAuthorized",
			Handler:    _Authorize_IsAuthorized_Handler,
		},
		{
			MethodName: "IsAuthorizedBulk",
			Handler:    _Authorize_IsAuthorizedBulk_Handler,
		},
		{
			MethodName: "IsAuthorizedByEndpoint",
			Handler:    _Authorize_IsAuthorizedByEndpoint_Handler,
		},
		{
			MethodName: "IsAuthorizedWithReason",
			Handler:    _Authorize_IsAuthorizedWithReason_Handler,
		},
		{
			MethodName: "AddResource",
			Handler:    _Authorize_AddResource_Handler,
		},
		{
			MethodName: "RemoveResource",
			Handler:    _Authorize_RemoveResource_Handler,
		},
		{
			MethodName: "GetResource",
			Handler:    _Authorize_GetResource_Handler,
		},
		{
			MethodName: "AddResources",
			Handler:    _Authorize_AddResources_Handler,
		},
		{
			MethodName: "RemoveResources",
			Handler:    _Authorize_RemoveResources_Handler,
		},
		{
			MethodName: "GetResourcesByUserAction",
			Handler:    _Authorize_GetResourcesByUserAction_Handler,
		},
		{
			MethodName: "GetResourcesByType",
			Handler:    _Authorize_GetResourcesByType_Handler,
		},
		{
			MethodName: "GetResourceParents",
			Handler:    _Authorize_GetResourceParents_Handler,
		},
		{
			MethodName: "GetResourceChildren",
			Handler:    _Authorize_GetResourceChildren_Handler,
		},
		{
			MethodName: "GetActionsByUserRole",
			Handler:    _Authorize_GetActionsByUserRole_Handler,
		},
		{
			MethodName: "GetResourcesAndActionsByUser",
			Handler:    _Authorize_GetResourcesAndActionsByUser_Handler,
		},
		{
			MethodName: "GetResourcesAndActionsByUserAndResource",
			Handler:    _Authorize_GetResourcesAndActionsByUserAndResource_Handler,
		},
		{
			MethodName: "GetResourcesByOriginAndType",
			Handler:    _Authorize_GetResourcesByOriginAndType_Handler,
		},
		{
			MethodName: "GetResourcesWithActionsAccess",
			Handler:    _Authorize_GetResourcesWithActionsAccess_Handler,
		},
		{
			MethodName: "GetUserIDsWithAccessToResource",
			Handler:    _Authorize_GetUserIDsWithAccessToResource_Handler,
		},
		{
			MethodName: "AddResourceRelation",
			Handler:    _Authorize_AddResourceRelation_Handler,
		},
		{
			MethodName: "RemoveResourceRelation",
			Handler:    _Authorize_RemoveResourceRelation_Handler,
		},
		{
			MethodName: "AddResourceRelations",
			Handler:    _Authorize_AddResourceRelations_Handler,
		},
		{
			MethodName: "RemoveResourceRelations",
			Handler:    _Authorize_RemoveResourceRelations_Handler,
		},
		{
			MethodName: "ApplyRolesForUserOnResources",
			Handler:    _Authorize_ApplyRolesForUserOnResources_Handler,
		},
		{
			MethodName: "ApplyUserAction",
			Handler:    _Authorize_ApplyUserAction_Handler,
		},
		{
			MethodName: "GetUserActions",
			Handler:    _Authorize_GetUserActions_Handler,
		},
		{
			MethodName: "RemoveUserAction",
			Handler:    _Authorize_RemoveUserAction_Handler,
		},
		{
			MethodName: "AddUserRole",
			Handler:    _Authorize_AddUserRole_Handler,
		},
		{
			MethodName: "GetUserRole",
			Handler:    _Authorize_GetUserRole_Handler,
		},
		{
			MethodName: "RemoveUserRole",
			Handler:    _Authorize_RemoveUserRole_Handler,
		},
		{
			MethodName: "AddAction",
			Handler:    _Authorize_AddAction_Handler,
		},
		{
			MethodName: "RemoveAction",
			Handler:    _Authorize_RemoveAction_Handler,
		},
		{
			MethodName: "GetAction",
			Handler:    _Authorize_GetAction_Handler,
		},
		{
			MethodName: "GetAllActions",
			Handler:    _Authorize_GetAllActions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "authorize/grpcapi.proto",
}
