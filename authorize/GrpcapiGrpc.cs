// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: authorize/grpcapi.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace SKF.Enlight.API.Authorize {
  public static partial class Authorize
  {
    static readonly string __ServiceName = "grpcapi.Authorize";

    static readonly grpc::Marshaller<global::SKF.Enlight.API.Common.Void> __Marshaller_common_Void = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Common.Void.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Common.PrimitiveString> __Marshaller_common_PrimitiveString = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Common.PrimitiveString.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.LogClientStateInput> __Marshaller_grpcapi_LogClientStateInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.LogClientStateInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.IsAuthorizedInput> __Marshaller_grpcapi_IsAuthorizedInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.IsAuthorizedInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.IsAuthorizedOutput> __Marshaller_grpcapi_IsAuthorizedOutput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.IsAuthorizedOutput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.IsAuthorizedBulkInput> __Marshaller_grpcapi_IsAuthorizedBulkInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.IsAuthorizedBulkInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.IsAuthorizedBulkOutput> __Marshaller_grpcapi_IsAuthorizedBulkOutput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.IsAuthorizedBulkOutput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointInput> __Marshaller_grpcapi_IsAuthorizedByEndpointInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointOutput> __Marshaller_grpcapi_IsAuthorizedByEndpointOutput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointOutput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.AddResourceInput> __Marshaller_grpcapi_AddResourceInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.AddResourceInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.RemoveResourceInput> __Marshaller_grpcapi_RemoveResourceInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.RemoveResourceInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetResourceInput> __Marshaller_grpcapi_GetResourceInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetResourceInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetResourceOutput> __Marshaller_grpcapi_GetResourceOutput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetResourceOutput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.AddResourcesInput> __Marshaller_grpcapi_AddResourcesInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.AddResourcesInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.RemoveResourcesInput> __Marshaller_grpcapi_RemoveResourcesInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.RemoveResourcesInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetResourcesByUserActionInput> __Marshaller_grpcapi_GetResourcesByUserActionInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetResourcesByUserActionInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetResourcesByUserActionOutput> __Marshaller_grpcapi_GetResourcesByUserActionOutput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetResourcesByUserActionOutput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetResourcesByTypeInput> __Marshaller_grpcapi_GetResourcesByTypeInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetResourcesByTypeInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetResourcesByTypeOutput> __Marshaller_grpcapi_GetResourcesByTypeOutput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetResourcesByTypeOutput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetResourceParentsInput> __Marshaller_grpcapi_GetResourceParentsInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetResourceParentsInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetResourcesOutput> __Marshaller_grpcapi_GetResourcesOutput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetResourcesOutput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetResourceChildrenInput> __Marshaller_grpcapi_GetResourceChildrenInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetResourceChildrenInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetActionsByUserRoleInput> __Marshaller_grpcapi_GetActionsByUserRoleInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetActionsByUserRoleInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetActionsByUserRoleOutput> __Marshaller_grpcapi_GetActionsByUserRoleOutput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetActionsByUserRoleOutput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserInput> __Marshaller_grpcapi_GetResourcesAndActionsByUserInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserOutput> __Marshaller_grpcapi_GetResourcesAndActionsByUserOutput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserOutput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeInput> __Marshaller_grpcapi_GetResourcesByOriginAndTypeInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeOutput> __Marshaller_grpcapi_GetResourcesByOriginAndTypeOutput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeOutput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessInput> __Marshaller_grpcapi_GetResourcesWithActionsAccessInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessOutput> __Marshaller_grpcapi_GetResourcesWithActionsAccessOutput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessOutput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceInput> __Marshaller_grpcapi_GetUserIDsWithAccessToResourceInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceOutput> __Marshaller_grpcapi_GetUserIDsWithAccessToResourceOutput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceOutput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.AddResourceRelationInput> __Marshaller_grpcapi_AddResourceRelationInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.AddResourceRelationInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.RemoveResourceRelationInput> __Marshaller_grpcapi_RemoveResourceRelationInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.RemoveResourceRelationInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.AddResourceRelationsInput> __Marshaller_grpcapi_AddResourceRelationsInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.AddResourceRelationsInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.RemoveResourceRelationsInput> __Marshaller_grpcapi_RemoveResourceRelationsInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.RemoveResourceRelationsInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.ApplyUserActionInput> __Marshaller_grpcapi_ApplyUserActionInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.ApplyUserActionInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetUserActionsInput> __Marshaller_grpcapi_GetUserActionsInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetUserActionsInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetUserActionsOutput> __Marshaller_grpcapi_GetUserActionsOutput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetUserActionsOutput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.RemoveUserActionInput> __Marshaller_grpcapi_RemoveUserActionInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.RemoveUserActionInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.UserRole> __Marshaller_grpcapi_UserRole = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.UserRole.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetUserRoleInput> __Marshaller_grpcapi_GetUserRoleInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetUserRoleInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.RemoveUserRoleInput> __Marshaller_grpcapi_RemoveUserRoleInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.RemoveUserRoleInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.AddActionInput> __Marshaller_grpcapi_AddActionInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.AddActionInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.RemoveActionInput> __Marshaller_grpcapi_RemoveActionInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.RemoveActionInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetActionInput> __Marshaller_grpcapi_GetActionInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetActionInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetActionOutput> __Marshaller_grpcapi_GetActionOutput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetActionOutput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SKF.Enlight.API.Authorize.GetAllActionsOutput> __Marshaller_grpcapi_GetAllActionsOutput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SKF.Enlight.API.Authorize.GetAllActionsOutput.Parser.ParseFrom);

    static readonly grpc::Method<global::SKF.Enlight.API.Common.Void, global::SKF.Enlight.API.Common.PrimitiveString> __Method_DeepPing = new grpc::Method<global::SKF.Enlight.API.Common.Void, global::SKF.Enlight.API.Common.PrimitiveString>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeepPing",
        __Marshaller_common_Void,
        __Marshaller_common_PrimitiveString);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.LogClientStateInput, global::SKF.Enlight.API.Common.Void> __Method_LogClientState = new grpc::Method<global::SKF.Enlight.API.Authorize.LogClientStateInput, global::SKF.Enlight.API.Common.Void>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LogClientState",
        __Marshaller_grpcapi_LogClientStateInput,
        __Marshaller_common_Void);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.IsAuthorizedInput, global::SKF.Enlight.API.Authorize.IsAuthorizedOutput> __Method_IsAuthorized = new grpc::Method<global::SKF.Enlight.API.Authorize.IsAuthorizedInput, global::SKF.Enlight.API.Authorize.IsAuthorizedOutput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "IsAuthorized",
        __Marshaller_grpcapi_IsAuthorizedInput,
        __Marshaller_grpcapi_IsAuthorizedOutput);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.IsAuthorizedBulkInput, global::SKF.Enlight.API.Authorize.IsAuthorizedBulkOutput> __Method_IsAuthorizedBulk = new grpc::Method<global::SKF.Enlight.API.Authorize.IsAuthorizedBulkInput, global::SKF.Enlight.API.Authorize.IsAuthorizedBulkOutput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "IsAuthorizedBulk",
        __Marshaller_grpcapi_IsAuthorizedBulkInput,
        __Marshaller_grpcapi_IsAuthorizedBulkOutput);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointInput, global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointOutput> __Method_IsAuthorizedByEndpoint = new grpc::Method<global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointInput, global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointOutput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "IsAuthorizedByEndpoint",
        __Marshaller_grpcapi_IsAuthorizedByEndpointInput,
        __Marshaller_grpcapi_IsAuthorizedByEndpointOutput);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.AddResourceInput, global::SKF.Enlight.API.Common.Void> __Method_AddResource = new grpc::Method<global::SKF.Enlight.API.Authorize.AddResourceInput, global::SKF.Enlight.API.Common.Void>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddResource",
        __Marshaller_grpcapi_AddResourceInput,
        __Marshaller_common_Void);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.RemoveResourceInput, global::SKF.Enlight.API.Common.Void> __Method_RemoveResource = new grpc::Method<global::SKF.Enlight.API.Authorize.RemoveResourceInput, global::SKF.Enlight.API.Common.Void>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveResource",
        __Marshaller_grpcapi_RemoveResourceInput,
        __Marshaller_common_Void);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.GetResourceInput, global::SKF.Enlight.API.Authorize.GetResourceOutput> __Method_GetResource = new grpc::Method<global::SKF.Enlight.API.Authorize.GetResourceInput, global::SKF.Enlight.API.Authorize.GetResourceOutput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetResource",
        __Marshaller_grpcapi_GetResourceInput,
        __Marshaller_grpcapi_GetResourceOutput);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.AddResourcesInput, global::SKF.Enlight.API.Common.Void> __Method_AddResources = new grpc::Method<global::SKF.Enlight.API.Authorize.AddResourcesInput, global::SKF.Enlight.API.Common.Void>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddResources",
        __Marshaller_grpcapi_AddResourcesInput,
        __Marshaller_common_Void);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.RemoveResourcesInput, global::SKF.Enlight.API.Common.Void> __Method_RemoveResources = new grpc::Method<global::SKF.Enlight.API.Authorize.RemoveResourcesInput, global::SKF.Enlight.API.Common.Void>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveResources",
        __Marshaller_grpcapi_RemoveResourcesInput,
        __Marshaller_common_Void);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.GetResourcesByUserActionInput, global::SKF.Enlight.API.Authorize.GetResourcesByUserActionOutput> __Method_GetResourcesByUserAction = new grpc::Method<global::SKF.Enlight.API.Authorize.GetResourcesByUserActionInput, global::SKF.Enlight.API.Authorize.GetResourcesByUserActionOutput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetResourcesByUserAction",
        __Marshaller_grpcapi_GetResourcesByUserActionInput,
        __Marshaller_grpcapi_GetResourcesByUserActionOutput);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.GetResourcesByTypeInput, global::SKF.Enlight.API.Authorize.GetResourcesByTypeOutput> __Method_GetResourcesByType = new grpc::Method<global::SKF.Enlight.API.Authorize.GetResourcesByTypeInput, global::SKF.Enlight.API.Authorize.GetResourcesByTypeOutput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetResourcesByType",
        __Marshaller_grpcapi_GetResourcesByTypeInput,
        __Marshaller_grpcapi_GetResourcesByTypeOutput);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.GetResourceParentsInput, global::SKF.Enlight.API.Authorize.GetResourcesOutput> __Method_GetResourceParents = new grpc::Method<global::SKF.Enlight.API.Authorize.GetResourceParentsInput, global::SKF.Enlight.API.Authorize.GetResourcesOutput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetResourceParents",
        __Marshaller_grpcapi_GetResourceParentsInput,
        __Marshaller_grpcapi_GetResourcesOutput);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.GetResourceChildrenInput, global::SKF.Enlight.API.Authorize.GetResourcesOutput> __Method_GetResourceChildren = new grpc::Method<global::SKF.Enlight.API.Authorize.GetResourceChildrenInput, global::SKF.Enlight.API.Authorize.GetResourcesOutput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetResourceChildren",
        __Marshaller_grpcapi_GetResourceChildrenInput,
        __Marshaller_grpcapi_GetResourcesOutput);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.GetActionsByUserRoleInput, global::SKF.Enlight.API.Authorize.GetActionsByUserRoleOutput> __Method_GetActionsByUserRole = new grpc::Method<global::SKF.Enlight.API.Authorize.GetActionsByUserRoleInput, global::SKF.Enlight.API.Authorize.GetActionsByUserRoleOutput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetActionsByUserRole",
        __Marshaller_grpcapi_GetActionsByUserRoleInput,
        __Marshaller_grpcapi_GetActionsByUserRoleOutput);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserInput, global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserOutput> __Method_GetResourcesAndActionsByUser = new grpc::Method<global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserInput, global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserOutput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetResourcesAndActionsByUser",
        __Marshaller_grpcapi_GetResourcesAndActionsByUserInput,
        __Marshaller_grpcapi_GetResourcesAndActionsByUserOutput);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeInput, global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeOutput> __Method_GetResourcesByOriginAndType = new grpc::Method<global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeInput, global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeOutput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetResourcesByOriginAndType",
        __Marshaller_grpcapi_GetResourcesByOriginAndTypeInput,
        __Marshaller_grpcapi_GetResourcesByOriginAndTypeOutput);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessInput, global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessOutput> __Method_GetResourcesWithActionsAccess = new grpc::Method<global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessInput, global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessOutput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetResourcesWithActionsAccess",
        __Marshaller_grpcapi_GetResourcesWithActionsAccessInput,
        __Marshaller_grpcapi_GetResourcesWithActionsAccessOutput);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceInput, global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceOutput> __Method_GetUserIDsWithAccessToResource = new grpc::Method<global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceInput, global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceOutput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserIDsWithAccessToResource",
        __Marshaller_grpcapi_GetUserIDsWithAccessToResourceInput,
        __Marshaller_grpcapi_GetUserIDsWithAccessToResourceOutput);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.AddResourceRelationInput, global::SKF.Enlight.API.Common.Void> __Method_AddResourceRelation = new grpc::Method<global::SKF.Enlight.API.Authorize.AddResourceRelationInput, global::SKF.Enlight.API.Common.Void>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddResourceRelation",
        __Marshaller_grpcapi_AddResourceRelationInput,
        __Marshaller_common_Void);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.RemoveResourceRelationInput, global::SKF.Enlight.API.Common.Void> __Method_RemoveResourceRelation = new grpc::Method<global::SKF.Enlight.API.Authorize.RemoveResourceRelationInput, global::SKF.Enlight.API.Common.Void>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveResourceRelation",
        __Marshaller_grpcapi_RemoveResourceRelationInput,
        __Marshaller_common_Void);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.AddResourceRelationsInput, global::SKF.Enlight.API.Common.Void> __Method_AddResourceRelations = new grpc::Method<global::SKF.Enlight.API.Authorize.AddResourceRelationsInput, global::SKF.Enlight.API.Common.Void>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddResourceRelations",
        __Marshaller_grpcapi_AddResourceRelationsInput,
        __Marshaller_common_Void);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.RemoveResourceRelationsInput, global::SKF.Enlight.API.Common.Void> __Method_RemoveResourceRelations = new grpc::Method<global::SKF.Enlight.API.Authorize.RemoveResourceRelationsInput, global::SKF.Enlight.API.Common.Void>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveResourceRelations",
        __Marshaller_grpcapi_RemoveResourceRelationsInput,
        __Marshaller_common_Void);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.ApplyUserActionInput, global::SKF.Enlight.API.Common.Void> __Method_ApplyUserAction = new grpc::Method<global::SKF.Enlight.API.Authorize.ApplyUserActionInput, global::SKF.Enlight.API.Common.Void>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ApplyUserAction",
        __Marshaller_grpcapi_ApplyUserActionInput,
        __Marshaller_common_Void);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.GetUserActionsInput, global::SKF.Enlight.API.Authorize.GetUserActionsOutput> __Method_GetUserActions = new grpc::Method<global::SKF.Enlight.API.Authorize.GetUserActionsInput, global::SKF.Enlight.API.Authorize.GetUserActionsOutput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserActions",
        __Marshaller_grpcapi_GetUserActionsInput,
        __Marshaller_grpcapi_GetUserActionsOutput);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.RemoveUserActionInput, global::SKF.Enlight.API.Common.Void> __Method_RemoveUserAction = new grpc::Method<global::SKF.Enlight.API.Authorize.RemoveUserActionInput, global::SKF.Enlight.API.Common.Void>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveUserAction",
        __Marshaller_grpcapi_RemoveUserActionInput,
        __Marshaller_common_Void);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.UserRole, global::SKF.Enlight.API.Common.Void> __Method_AddUserRole = new grpc::Method<global::SKF.Enlight.API.Authorize.UserRole, global::SKF.Enlight.API.Common.Void>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddUserRole",
        __Marshaller_grpcapi_UserRole,
        __Marshaller_common_Void);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.GetUserRoleInput, global::SKF.Enlight.API.Authorize.UserRole> __Method_GetUserRole = new grpc::Method<global::SKF.Enlight.API.Authorize.GetUserRoleInput, global::SKF.Enlight.API.Authorize.UserRole>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserRole",
        __Marshaller_grpcapi_GetUserRoleInput,
        __Marshaller_grpcapi_UserRole);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.RemoveUserRoleInput, global::SKF.Enlight.API.Common.Void> __Method_RemoveUserRole = new grpc::Method<global::SKF.Enlight.API.Authorize.RemoveUserRoleInput, global::SKF.Enlight.API.Common.Void>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveUserRole",
        __Marshaller_grpcapi_RemoveUserRoleInput,
        __Marshaller_common_Void);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.AddActionInput, global::SKF.Enlight.API.Common.Void> __Method_AddAction = new grpc::Method<global::SKF.Enlight.API.Authorize.AddActionInput, global::SKF.Enlight.API.Common.Void>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddAction",
        __Marshaller_grpcapi_AddActionInput,
        __Marshaller_common_Void);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.RemoveActionInput, global::SKF.Enlight.API.Common.Void> __Method_RemoveAction = new grpc::Method<global::SKF.Enlight.API.Authorize.RemoveActionInput, global::SKF.Enlight.API.Common.Void>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveAction",
        __Marshaller_grpcapi_RemoveActionInput,
        __Marshaller_common_Void);

    static readonly grpc::Method<global::SKF.Enlight.API.Authorize.GetActionInput, global::SKF.Enlight.API.Authorize.GetActionOutput> __Method_GetAction = new grpc::Method<global::SKF.Enlight.API.Authorize.GetActionInput, global::SKF.Enlight.API.Authorize.GetActionOutput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAction",
        __Marshaller_grpcapi_GetActionInput,
        __Marshaller_grpcapi_GetActionOutput);

    static readonly grpc::Method<global::SKF.Enlight.API.Common.Void, global::SKF.Enlight.API.Authorize.GetAllActionsOutput> __Method_GetAllActions = new grpc::Method<global::SKF.Enlight.API.Common.Void, global::SKF.Enlight.API.Authorize.GetAllActionsOutput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllActions",
        __Marshaller_common_Void,
        __Marshaller_grpcapi_GetAllActionsOutput);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::SKF.Enlight.API.Authorize.GrpcapiReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Authorize</summary>
    [grpc::BindServiceMethod(typeof(Authorize), "BindService")]
    public abstract partial class AuthorizeBase
    {
      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Common.PrimitiveString> DeepPing(global::SKF.Enlight.API.Common.Void request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Common.Void> LogClientState(global::SKF.Enlight.API.Authorize.LogClientStateInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Authorize.IsAuthorizedOutput> IsAuthorized(global::SKF.Enlight.API.Authorize.IsAuthorizedInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Authorize.IsAuthorizedBulkOutput> IsAuthorizedBulk(global::SKF.Enlight.API.Authorize.IsAuthorizedBulkInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointOutput> IsAuthorizedByEndpoint(global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Common.Void> AddResource(global::SKF.Enlight.API.Authorize.AddResourceInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Common.Void> RemoveResource(global::SKF.Enlight.API.Authorize.RemoveResourceInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Authorize.GetResourceOutput> GetResource(global::SKF.Enlight.API.Authorize.GetResourceInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Common.Void> AddResources(global::SKF.Enlight.API.Authorize.AddResourcesInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Common.Void> RemoveResources(global::SKF.Enlight.API.Authorize.RemoveResourcesInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Authorize.GetResourcesByUserActionOutput> GetResourcesByUserAction(global::SKF.Enlight.API.Authorize.GetResourcesByUserActionInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Authorize.GetResourcesByTypeOutput> GetResourcesByType(global::SKF.Enlight.API.Authorize.GetResourcesByTypeInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Authorize.GetResourcesOutput> GetResourceParents(global::SKF.Enlight.API.Authorize.GetResourceParentsInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Authorize.GetResourcesOutput> GetResourceChildren(global::SKF.Enlight.API.Authorize.GetResourceChildrenInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Authorize.GetActionsByUserRoleOutput> GetActionsByUserRole(global::SKF.Enlight.API.Authorize.GetActionsByUserRoleInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserOutput> GetResourcesAndActionsByUser(global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeOutput> GetResourcesByOriginAndType(global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessOutput> GetResourcesWithActionsAccess(global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceOutput> GetUserIDsWithAccessToResource(global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Common.Void> AddResourceRelation(global::SKF.Enlight.API.Authorize.AddResourceRelationInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Common.Void> RemoveResourceRelation(global::SKF.Enlight.API.Authorize.RemoveResourceRelationInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Common.Void> AddResourceRelations(global::SKF.Enlight.API.Authorize.AddResourceRelationsInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Common.Void> RemoveResourceRelations(global::SKF.Enlight.API.Authorize.RemoveResourceRelationsInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Common.Void> ApplyUserAction(global::SKF.Enlight.API.Authorize.ApplyUserActionInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Authorize.GetUserActionsOutput> GetUserActions(global::SKF.Enlight.API.Authorize.GetUserActionsInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Common.Void> RemoveUserAction(global::SKF.Enlight.API.Authorize.RemoveUserActionInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Common.Void> AddUserRole(global::SKF.Enlight.API.Authorize.UserRole request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Authorize.UserRole> GetUserRole(global::SKF.Enlight.API.Authorize.GetUserRoleInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Common.Void> RemoveUserRole(global::SKF.Enlight.API.Authorize.RemoveUserRoleInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Common.Void> AddAction(global::SKF.Enlight.API.Authorize.AddActionInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Common.Void> RemoveAction(global::SKF.Enlight.API.Authorize.RemoveActionInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Authorize.GetActionOutput> GetAction(global::SKF.Enlight.API.Authorize.GetActionInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SKF.Enlight.API.Authorize.GetAllActionsOutput> GetAllActions(global::SKF.Enlight.API.Common.Void request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Authorize</summary>
    public partial class AuthorizeClient : grpc::ClientBase<AuthorizeClient>
    {
      /// <summary>Creates a new client for Authorize</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public AuthorizeClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Authorize that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public AuthorizeClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected AuthorizeClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected AuthorizeClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::SKF.Enlight.API.Common.PrimitiveString DeepPing(global::SKF.Enlight.API.Common.Void request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeepPing(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Common.PrimitiveString DeepPing(global::SKF.Enlight.API.Common.Void request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeepPing, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.PrimitiveString> DeepPingAsync(global::SKF.Enlight.API.Common.Void request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeepPingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.PrimitiveString> DeepPingAsync(global::SKF.Enlight.API.Common.Void request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeepPing, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Common.Void LogClientState(global::SKF.Enlight.API.Authorize.LogClientStateInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LogClientState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Common.Void LogClientState(global::SKF.Enlight.API.Authorize.LogClientStateInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LogClientState, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> LogClientStateAsync(global::SKF.Enlight.API.Authorize.LogClientStateInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LogClientStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> LogClientStateAsync(global::SKF.Enlight.API.Authorize.LogClientStateInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LogClientState, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Authorize.IsAuthorizedOutput IsAuthorized(global::SKF.Enlight.API.Authorize.IsAuthorizedInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IsAuthorized(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Authorize.IsAuthorizedOutput IsAuthorized(global::SKF.Enlight.API.Authorize.IsAuthorizedInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_IsAuthorized, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.IsAuthorizedOutput> IsAuthorizedAsync(global::SKF.Enlight.API.Authorize.IsAuthorizedInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IsAuthorizedAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.IsAuthorizedOutput> IsAuthorizedAsync(global::SKF.Enlight.API.Authorize.IsAuthorizedInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_IsAuthorized, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Authorize.IsAuthorizedBulkOutput IsAuthorizedBulk(global::SKF.Enlight.API.Authorize.IsAuthorizedBulkInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IsAuthorizedBulk(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Authorize.IsAuthorizedBulkOutput IsAuthorizedBulk(global::SKF.Enlight.API.Authorize.IsAuthorizedBulkInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_IsAuthorizedBulk, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.IsAuthorizedBulkOutput> IsAuthorizedBulkAsync(global::SKF.Enlight.API.Authorize.IsAuthorizedBulkInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IsAuthorizedBulkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.IsAuthorizedBulkOutput> IsAuthorizedBulkAsync(global::SKF.Enlight.API.Authorize.IsAuthorizedBulkInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_IsAuthorizedBulk, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointOutput IsAuthorizedByEndpoint(global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IsAuthorizedByEndpoint(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointOutput IsAuthorizedByEndpoint(global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_IsAuthorizedByEndpoint, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointOutput> IsAuthorizedByEndpointAsync(global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IsAuthorizedByEndpointAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointOutput> IsAuthorizedByEndpointAsync(global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_IsAuthorizedByEndpoint, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Common.Void AddResource(global::SKF.Enlight.API.Authorize.AddResourceInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddResource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Common.Void AddResource(global::SKF.Enlight.API.Authorize.AddResourceInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddResource, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> AddResourceAsync(global::SKF.Enlight.API.Authorize.AddResourceInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddResourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> AddResourceAsync(global::SKF.Enlight.API.Authorize.AddResourceInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddResource, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Common.Void RemoveResource(global::SKF.Enlight.API.Authorize.RemoveResourceInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveResource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Common.Void RemoveResource(global::SKF.Enlight.API.Authorize.RemoveResourceInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveResource, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> RemoveResourceAsync(global::SKF.Enlight.API.Authorize.RemoveResourceInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveResourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> RemoveResourceAsync(global::SKF.Enlight.API.Authorize.RemoveResourceInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveResource, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Authorize.GetResourceOutput GetResource(global::SKF.Enlight.API.Authorize.GetResourceInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Authorize.GetResourceOutput GetResource(global::SKF.Enlight.API.Authorize.GetResourceInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetResource, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetResourceOutput> GetResourceAsync(global::SKF.Enlight.API.Authorize.GetResourceInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetResourceOutput> GetResourceAsync(global::SKF.Enlight.API.Authorize.GetResourceInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetResource, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Common.Void AddResources(global::SKF.Enlight.API.Authorize.AddResourcesInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddResources(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Common.Void AddResources(global::SKF.Enlight.API.Authorize.AddResourcesInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddResources, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> AddResourcesAsync(global::SKF.Enlight.API.Authorize.AddResourcesInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddResourcesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> AddResourcesAsync(global::SKF.Enlight.API.Authorize.AddResourcesInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddResources, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Common.Void RemoveResources(global::SKF.Enlight.API.Authorize.RemoveResourcesInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveResources(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Common.Void RemoveResources(global::SKF.Enlight.API.Authorize.RemoveResourcesInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveResources, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> RemoveResourcesAsync(global::SKF.Enlight.API.Authorize.RemoveResourcesInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveResourcesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> RemoveResourcesAsync(global::SKF.Enlight.API.Authorize.RemoveResourcesInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveResources, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Authorize.GetResourcesByUserActionOutput GetResourcesByUserAction(global::SKF.Enlight.API.Authorize.GetResourcesByUserActionInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourcesByUserAction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Authorize.GetResourcesByUserActionOutput GetResourcesByUserAction(global::SKF.Enlight.API.Authorize.GetResourcesByUserActionInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetResourcesByUserAction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetResourcesByUserActionOutput> GetResourcesByUserActionAsync(global::SKF.Enlight.API.Authorize.GetResourcesByUserActionInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourcesByUserActionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetResourcesByUserActionOutput> GetResourcesByUserActionAsync(global::SKF.Enlight.API.Authorize.GetResourcesByUserActionInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetResourcesByUserAction, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Authorize.GetResourcesByTypeOutput GetResourcesByType(global::SKF.Enlight.API.Authorize.GetResourcesByTypeInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourcesByType(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Authorize.GetResourcesByTypeOutput GetResourcesByType(global::SKF.Enlight.API.Authorize.GetResourcesByTypeInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetResourcesByType, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetResourcesByTypeOutput> GetResourcesByTypeAsync(global::SKF.Enlight.API.Authorize.GetResourcesByTypeInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourcesByTypeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetResourcesByTypeOutput> GetResourcesByTypeAsync(global::SKF.Enlight.API.Authorize.GetResourcesByTypeInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetResourcesByType, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Authorize.GetResourcesOutput GetResourceParents(global::SKF.Enlight.API.Authorize.GetResourceParentsInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourceParents(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Authorize.GetResourcesOutput GetResourceParents(global::SKF.Enlight.API.Authorize.GetResourceParentsInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetResourceParents, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetResourcesOutput> GetResourceParentsAsync(global::SKF.Enlight.API.Authorize.GetResourceParentsInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourceParentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetResourcesOutput> GetResourceParentsAsync(global::SKF.Enlight.API.Authorize.GetResourceParentsInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetResourceParents, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Authorize.GetResourcesOutput GetResourceChildren(global::SKF.Enlight.API.Authorize.GetResourceChildrenInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourceChildren(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Authorize.GetResourcesOutput GetResourceChildren(global::SKF.Enlight.API.Authorize.GetResourceChildrenInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetResourceChildren, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetResourcesOutput> GetResourceChildrenAsync(global::SKF.Enlight.API.Authorize.GetResourceChildrenInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourceChildrenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetResourcesOutput> GetResourceChildrenAsync(global::SKF.Enlight.API.Authorize.GetResourceChildrenInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetResourceChildren, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Authorize.GetActionsByUserRoleOutput GetActionsByUserRole(global::SKF.Enlight.API.Authorize.GetActionsByUserRoleInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetActionsByUserRole(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Authorize.GetActionsByUserRoleOutput GetActionsByUserRole(global::SKF.Enlight.API.Authorize.GetActionsByUserRoleInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetActionsByUserRole, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetActionsByUserRoleOutput> GetActionsByUserRoleAsync(global::SKF.Enlight.API.Authorize.GetActionsByUserRoleInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetActionsByUserRoleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetActionsByUserRoleOutput> GetActionsByUserRoleAsync(global::SKF.Enlight.API.Authorize.GetActionsByUserRoleInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetActionsByUserRole, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserOutput GetResourcesAndActionsByUser(global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourcesAndActionsByUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserOutput GetResourcesAndActionsByUser(global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetResourcesAndActionsByUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserOutput> GetResourcesAndActionsByUserAsync(global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourcesAndActionsByUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserOutput> GetResourcesAndActionsByUserAsync(global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetResourcesAndActionsByUser, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeOutput GetResourcesByOriginAndType(global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourcesByOriginAndType(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeOutput GetResourcesByOriginAndType(global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetResourcesByOriginAndType, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeOutput> GetResourcesByOriginAndTypeAsync(global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourcesByOriginAndTypeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeOutput> GetResourcesByOriginAndTypeAsync(global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetResourcesByOriginAndType, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessOutput GetResourcesWithActionsAccess(global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourcesWithActionsAccess(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessOutput GetResourcesWithActionsAccess(global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetResourcesWithActionsAccess, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessOutput> GetResourcesWithActionsAccessAsync(global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourcesWithActionsAccessAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessOutput> GetResourcesWithActionsAccessAsync(global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetResourcesWithActionsAccess, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceOutput GetUserIDsWithAccessToResource(global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserIDsWithAccessToResource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceOutput GetUserIDsWithAccessToResource(global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserIDsWithAccessToResource, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceOutput> GetUserIDsWithAccessToResourceAsync(global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserIDsWithAccessToResourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceOutput> GetUserIDsWithAccessToResourceAsync(global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserIDsWithAccessToResource, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Common.Void AddResourceRelation(global::SKF.Enlight.API.Authorize.AddResourceRelationInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddResourceRelation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Common.Void AddResourceRelation(global::SKF.Enlight.API.Authorize.AddResourceRelationInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddResourceRelation, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> AddResourceRelationAsync(global::SKF.Enlight.API.Authorize.AddResourceRelationInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddResourceRelationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> AddResourceRelationAsync(global::SKF.Enlight.API.Authorize.AddResourceRelationInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddResourceRelation, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Common.Void RemoveResourceRelation(global::SKF.Enlight.API.Authorize.RemoveResourceRelationInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveResourceRelation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Common.Void RemoveResourceRelation(global::SKF.Enlight.API.Authorize.RemoveResourceRelationInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveResourceRelation, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> RemoveResourceRelationAsync(global::SKF.Enlight.API.Authorize.RemoveResourceRelationInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveResourceRelationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> RemoveResourceRelationAsync(global::SKF.Enlight.API.Authorize.RemoveResourceRelationInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveResourceRelation, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Common.Void AddResourceRelations(global::SKF.Enlight.API.Authorize.AddResourceRelationsInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddResourceRelations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Common.Void AddResourceRelations(global::SKF.Enlight.API.Authorize.AddResourceRelationsInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddResourceRelations, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> AddResourceRelationsAsync(global::SKF.Enlight.API.Authorize.AddResourceRelationsInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddResourceRelationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> AddResourceRelationsAsync(global::SKF.Enlight.API.Authorize.AddResourceRelationsInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddResourceRelations, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Common.Void RemoveResourceRelations(global::SKF.Enlight.API.Authorize.RemoveResourceRelationsInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveResourceRelations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Common.Void RemoveResourceRelations(global::SKF.Enlight.API.Authorize.RemoveResourceRelationsInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveResourceRelations, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> RemoveResourceRelationsAsync(global::SKF.Enlight.API.Authorize.RemoveResourceRelationsInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveResourceRelationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> RemoveResourceRelationsAsync(global::SKF.Enlight.API.Authorize.RemoveResourceRelationsInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveResourceRelations, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Common.Void ApplyUserAction(global::SKF.Enlight.API.Authorize.ApplyUserActionInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ApplyUserAction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Common.Void ApplyUserAction(global::SKF.Enlight.API.Authorize.ApplyUserActionInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ApplyUserAction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> ApplyUserActionAsync(global::SKF.Enlight.API.Authorize.ApplyUserActionInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ApplyUserActionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> ApplyUserActionAsync(global::SKF.Enlight.API.Authorize.ApplyUserActionInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ApplyUserAction, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Authorize.GetUserActionsOutput GetUserActions(global::SKF.Enlight.API.Authorize.GetUserActionsInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserActions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Authorize.GetUserActionsOutput GetUserActions(global::SKF.Enlight.API.Authorize.GetUserActionsInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserActions, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetUserActionsOutput> GetUserActionsAsync(global::SKF.Enlight.API.Authorize.GetUserActionsInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserActionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetUserActionsOutput> GetUserActionsAsync(global::SKF.Enlight.API.Authorize.GetUserActionsInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserActions, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Common.Void RemoveUserAction(global::SKF.Enlight.API.Authorize.RemoveUserActionInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveUserAction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Common.Void RemoveUserAction(global::SKF.Enlight.API.Authorize.RemoveUserActionInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveUserAction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> RemoveUserActionAsync(global::SKF.Enlight.API.Authorize.RemoveUserActionInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveUserActionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> RemoveUserActionAsync(global::SKF.Enlight.API.Authorize.RemoveUserActionInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveUserAction, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Common.Void AddUserRole(global::SKF.Enlight.API.Authorize.UserRole request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddUserRole(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Common.Void AddUserRole(global::SKF.Enlight.API.Authorize.UserRole request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddUserRole, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> AddUserRoleAsync(global::SKF.Enlight.API.Authorize.UserRole request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddUserRoleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> AddUserRoleAsync(global::SKF.Enlight.API.Authorize.UserRole request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddUserRole, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Authorize.UserRole GetUserRole(global::SKF.Enlight.API.Authorize.GetUserRoleInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserRole(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Authorize.UserRole GetUserRole(global::SKF.Enlight.API.Authorize.GetUserRoleInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserRole, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.UserRole> GetUserRoleAsync(global::SKF.Enlight.API.Authorize.GetUserRoleInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserRoleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.UserRole> GetUserRoleAsync(global::SKF.Enlight.API.Authorize.GetUserRoleInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserRole, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Common.Void RemoveUserRole(global::SKF.Enlight.API.Authorize.RemoveUserRoleInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveUserRole(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Common.Void RemoveUserRole(global::SKF.Enlight.API.Authorize.RemoveUserRoleInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveUserRole, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> RemoveUserRoleAsync(global::SKF.Enlight.API.Authorize.RemoveUserRoleInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveUserRoleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> RemoveUserRoleAsync(global::SKF.Enlight.API.Authorize.RemoveUserRoleInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveUserRole, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Common.Void AddAction(global::SKF.Enlight.API.Authorize.AddActionInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddAction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Common.Void AddAction(global::SKF.Enlight.API.Authorize.AddActionInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddAction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> AddActionAsync(global::SKF.Enlight.API.Authorize.AddActionInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddActionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> AddActionAsync(global::SKF.Enlight.API.Authorize.AddActionInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddAction, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Common.Void RemoveAction(global::SKF.Enlight.API.Authorize.RemoveActionInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveAction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Common.Void RemoveAction(global::SKF.Enlight.API.Authorize.RemoveActionInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveAction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> RemoveActionAsync(global::SKF.Enlight.API.Authorize.RemoveActionInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveActionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Common.Void> RemoveActionAsync(global::SKF.Enlight.API.Authorize.RemoveActionInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveAction, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Authorize.GetActionOutput GetAction(global::SKF.Enlight.API.Authorize.GetActionInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Authorize.GetActionOutput GetAction(global::SKF.Enlight.API.Authorize.GetActionInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetActionOutput> GetActionAsync(global::SKF.Enlight.API.Authorize.GetActionInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetActionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetActionOutput> GetActionAsync(global::SKF.Enlight.API.Authorize.GetActionInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAction, null, options, request);
      }
      public virtual global::SKF.Enlight.API.Authorize.GetAllActionsOutput GetAllActions(global::SKF.Enlight.API.Common.Void request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllActions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SKF.Enlight.API.Authorize.GetAllActionsOutput GetAllActions(global::SKF.Enlight.API.Common.Void request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllActions, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetAllActionsOutput> GetAllActionsAsync(global::SKF.Enlight.API.Common.Void request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllActionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SKF.Enlight.API.Authorize.GetAllActionsOutput> GetAllActionsAsync(global::SKF.Enlight.API.Common.Void request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllActions, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override AuthorizeClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AuthorizeClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(AuthorizeBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_DeepPing, serviceImpl.DeepPing)
          .AddMethod(__Method_LogClientState, serviceImpl.LogClientState)
          .AddMethod(__Method_IsAuthorized, serviceImpl.IsAuthorized)
          .AddMethod(__Method_IsAuthorizedBulk, serviceImpl.IsAuthorizedBulk)
          .AddMethod(__Method_IsAuthorizedByEndpoint, serviceImpl.IsAuthorizedByEndpoint)
          .AddMethod(__Method_AddResource, serviceImpl.AddResource)
          .AddMethod(__Method_RemoveResource, serviceImpl.RemoveResource)
          .AddMethod(__Method_GetResource, serviceImpl.GetResource)
          .AddMethod(__Method_AddResources, serviceImpl.AddResources)
          .AddMethod(__Method_RemoveResources, serviceImpl.RemoveResources)
          .AddMethod(__Method_GetResourcesByUserAction, serviceImpl.GetResourcesByUserAction)
          .AddMethod(__Method_GetResourcesByType, serviceImpl.GetResourcesByType)
          .AddMethod(__Method_GetResourceParents, serviceImpl.GetResourceParents)
          .AddMethod(__Method_GetResourceChildren, serviceImpl.GetResourceChildren)
          .AddMethod(__Method_GetActionsByUserRole, serviceImpl.GetActionsByUserRole)
          .AddMethod(__Method_GetResourcesAndActionsByUser, serviceImpl.GetResourcesAndActionsByUser)
          .AddMethod(__Method_GetResourcesByOriginAndType, serviceImpl.GetResourcesByOriginAndType)
          .AddMethod(__Method_GetResourcesWithActionsAccess, serviceImpl.GetResourcesWithActionsAccess)
          .AddMethod(__Method_GetUserIDsWithAccessToResource, serviceImpl.GetUserIDsWithAccessToResource)
          .AddMethod(__Method_AddResourceRelation, serviceImpl.AddResourceRelation)
          .AddMethod(__Method_RemoveResourceRelation, serviceImpl.RemoveResourceRelation)
          .AddMethod(__Method_AddResourceRelations, serviceImpl.AddResourceRelations)
          .AddMethod(__Method_RemoveResourceRelations, serviceImpl.RemoveResourceRelations)
          .AddMethod(__Method_ApplyUserAction, serviceImpl.ApplyUserAction)
          .AddMethod(__Method_GetUserActions, serviceImpl.GetUserActions)
          .AddMethod(__Method_RemoveUserAction, serviceImpl.RemoveUserAction)
          .AddMethod(__Method_AddUserRole, serviceImpl.AddUserRole)
          .AddMethod(__Method_GetUserRole, serviceImpl.GetUserRole)
          .AddMethod(__Method_RemoveUserRole, serviceImpl.RemoveUserRole)
          .AddMethod(__Method_AddAction, serviceImpl.AddAction)
          .AddMethod(__Method_RemoveAction, serviceImpl.RemoveAction)
          .AddMethod(__Method_GetAction, serviceImpl.GetAction)
          .AddMethod(__Method_GetAllActions, serviceImpl.GetAllActions).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, AuthorizeBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_DeepPing, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Common.Void, global::SKF.Enlight.API.Common.PrimitiveString>(serviceImpl.DeepPing));
      serviceBinder.AddMethod(__Method_LogClientState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.LogClientStateInput, global::SKF.Enlight.API.Common.Void>(serviceImpl.LogClientState));
      serviceBinder.AddMethod(__Method_IsAuthorized, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.IsAuthorizedInput, global::SKF.Enlight.API.Authorize.IsAuthorizedOutput>(serviceImpl.IsAuthorized));
      serviceBinder.AddMethod(__Method_IsAuthorizedBulk, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.IsAuthorizedBulkInput, global::SKF.Enlight.API.Authorize.IsAuthorizedBulkOutput>(serviceImpl.IsAuthorizedBulk));
      serviceBinder.AddMethod(__Method_IsAuthorizedByEndpoint, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointInput, global::SKF.Enlight.API.Authorize.IsAuthorizedByEndpointOutput>(serviceImpl.IsAuthorizedByEndpoint));
      serviceBinder.AddMethod(__Method_AddResource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.AddResourceInput, global::SKF.Enlight.API.Common.Void>(serviceImpl.AddResource));
      serviceBinder.AddMethod(__Method_RemoveResource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.RemoveResourceInput, global::SKF.Enlight.API.Common.Void>(serviceImpl.RemoveResource));
      serviceBinder.AddMethod(__Method_GetResource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.GetResourceInput, global::SKF.Enlight.API.Authorize.GetResourceOutput>(serviceImpl.GetResource));
      serviceBinder.AddMethod(__Method_AddResources, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.AddResourcesInput, global::SKF.Enlight.API.Common.Void>(serviceImpl.AddResources));
      serviceBinder.AddMethod(__Method_RemoveResources, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.RemoveResourcesInput, global::SKF.Enlight.API.Common.Void>(serviceImpl.RemoveResources));
      serviceBinder.AddMethod(__Method_GetResourcesByUserAction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.GetResourcesByUserActionInput, global::SKF.Enlight.API.Authorize.GetResourcesByUserActionOutput>(serviceImpl.GetResourcesByUserAction));
      serviceBinder.AddMethod(__Method_GetResourcesByType, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.GetResourcesByTypeInput, global::SKF.Enlight.API.Authorize.GetResourcesByTypeOutput>(serviceImpl.GetResourcesByType));
      serviceBinder.AddMethod(__Method_GetResourceParents, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.GetResourceParentsInput, global::SKF.Enlight.API.Authorize.GetResourcesOutput>(serviceImpl.GetResourceParents));
      serviceBinder.AddMethod(__Method_GetResourceChildren, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.GetResourceChildrenInput, global::SKF.Enlight.API.Authorize.GetResourcesOutput>(serviceImpl.GetResourceChildren));
      serviceBinder.AddMethod(__Method_GetActionsByUserRole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.GetActionsByUserRoleInput, global::SKF.Enlight.API.Authorize.GetActionsByUserRoleOutput>(serviceImpl.GetActionsByUserRole));
      serviceBinder.AddMethod(__Method_GetResourcesAndActionsByUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserInput, global::SKF.Enlight.API.Authorize.GetResourcesAndActionsByUserOutput>(serviceImpl.GetResourcesAndActionsByUser));
      serviceBinder.AddMethod(__Method_GetResourcesByOriginAndType, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeInput, global::SKF.Enlight.API.Authorize.GetResourcesByOriginAndTypeOutput>(serviceImpl.GetResourcesByOriginAndType));
      serviceBinder.AddMethod(__Method_GetResourcesWithActionsAccess, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessInput, global::SKF.Enlight.API.Authorize.GetResourcesWithActionsAccessOutput>(serviceImpl.GetResourcesWithActionsAccess));
      serviceBinder.AddMethod(__Method_GetUserIDsWithAccessToResource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceInput, global::SKF.Enlight.API.Authorize.GetUserIDsWithAccessToResourceOutput>(serviceImpl.GetUserIDsWithAccessToResource));
      serviceBinder.AddMethod(__Method_AddResourceRelation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.AddResourceRelationInput, global::SKF.Enlight.API.Common.Void>(serviceImpl.AddResourceRelation));
      serviceBinder.AddMethod(__Method_RemoveResourceRelation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.RemoveResourceRelationInput, global::SKF.Enlight.API.Common.Void>(serviceImpl.RemoveResourceRelation));
      serviceBinder.AddMethod(__Method_AddResourceRelations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.AddResourceRelationsInput, global::SKF.Enlight.API.Common.Void>(serviceImpl.AddResourceRelations));
      serviceBinder.AddMethod(__Method_RemoveResourceRelations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.RemoveResourceRelationsInput, global::SKF.Enlight.API.Common.Void>(serviceImpl.RemoveResourceRelations));
      serviceBinder.AddMethod(__Method_ApplyUserAction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.ApplyUserActionInput, global::SKF.Enlight.API.Common.Void>(serviceImpl.ApplyUserAction));
      serviceBinder.AddMethod(__Method_GetUserActions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.GetUserActionsInput, global::SKF.Enlight.API.Authorize.GetUserActionsOutput>(serviceImpl.GetUserActions));
      serviceBinder.AddMethod(__Method_RemoveUserAction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.RemoveUserActionInput, global::SKF.Enlight.API.Common.Void>(serviceImpl.RemoveUserAction));
      serviceBinder.AddMethod(__Method_AddUserRole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.UserRole, global::SKF.Enlight.API.Common.Void>(serviceImpl.AddUserRole));
      serviceBinder.AddMethod(__Method_GetUserRole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.GetUserRoleInput, global::SKF.Enlight.API.Authorize.UserRole>(serviceImpl.GetUserRole));
      serviceBinder.AddMethod(__Method_RemoveUserRole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.RemoveUserRoleInput, global::SKF.Enlight.API.Common.Void>(serviceImpl.RemoveUserRole));
      serviceBinder.AddMethod(__Method_AddAction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.AddActionInput, global::SKF.Enlight.API.Common.Void>(serviceImpl.AddAction));
      serviceBinder.AddMethod(__Method_RemoveAction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.RemoveActionInput, global::SKF.Enlight.API.Common.Void>(serviceImpl.RemoveAction));
      serviceBinder.AddMethod(__Method_GetAction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Authorize.GetActionInput, global::SKF.Enlight.API.Authorize.GetActionOutput>(serviceImpl.GetAction));
      serviceBinder.AddMethod(__Method_GetAllActions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SKF.Enlight.API.Common.Void, global::SKF.Enlight.API.Authorize.GetAllActionsOutput>(serviceImpl.GetAllActions));
    }

  }
}
#endregion
