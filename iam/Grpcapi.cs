// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: iam/grpcapi.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SKF.Enlight.API.IAM {

  /// <summary>Holder for reflection information generated from iam/grpcapi.proto</summary>
  public static partial class GrpcapiReflection {

    #region Descriptor
    /// <summary>File descriptor for iam/grpcapi.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GrpcapiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFpYW0vZ3JwY2FwaS5wcm90bxIHZ3JwY2FwaRoTY29tbW9uL2NvbW1vbi5w",
            "cm90byKlAQoKVXNlckNsYWltcxIKCgJpZBgBIAEoCRINCgVlbWFpbBgCIAEo",
            "CRIYChBldWxhX2FncmVlZF9kYXRlGAMgASgJEhIKCnZhbGlkX2V1bGEYBCAB",
            "KAkSEAoIdXNlcm5hbWUYBSABKAkSEwoLdXNlcl9zdGF0dXMYBiABKAkSEgoK",
            "dXNlcl9yb2xlcxgHIAEoCRITCgt1c2VyX2FjY2VzcxgIIAEoCSItChpHZXRI",
            "aWVyYXJjaHlSZWxhdGlvbnNJbnB1dBIPCgd1c2VyX2lkGAEgASgJIi8KG0dl",
            "dEhpZXJhcmNoeVJlbGF0aW9uc091dHB1dBIQCghub2RlX2lkcxgBIAMoCSI8",
            "ChhDaGVja0F1dGhlbnRpY2F0aW9uSW5wdXQSDQoFdG9rZW4YASABKAkSEQoJ",
            "bWV0aG9kQXJuGAIgASgJImIKIkNoZWNrQXV0aGVudGljYXRpb25CeUVuZHBv",
            "aW50SW5wdXQSDQoFdG9rZW4YASABKAkSEAoIZW5kcG9pbnQYAiABKAkSDgoG",
            "bWV0aG9kGAMgASgJEgsKA2FwaRgEIAEoCSJMChRHZXRFdmVudFJlY29yZHNJ",
            "bnB1dBINCgVzaW5jZRgBIAEoAxIlCgVsaW1pdBgCIAEoCzIWLmNvbW1vbi5Q",
            "cmltaXRpdmVJbnQzMiIoChVHZXRFdmVudFJlY29yZHNPdXRwdXQSDwoHcmVj",
            "b3JkcxgBIAEoDCJWChFJc0F1dGhvcml6ZWRJbnB1dBIPCgd1c2VyX2lkGAEg",
            "ASgJEg4KBmFjdGlvbhgCIAEoCRIgCghyZXNvdXJjZRgDIAEoCzIOLmNvbW1v",
            "bi5PcmlnaW4iIAoSSXNBdXRob3JpemVkT3V0cHV0EgoKAm9rGAEgASgIIkEK",
            "HUFkZEF1dGhvcml6YXRpb25SZXNvdXJjZUlucHV0EiAKCHJlc291cmNlGAEg",
            "ASgLMg4uY29tbW9uLk9yaWdpbiJECiBSZW1vdmVBdXRob3JpemF0aW9uUmVz",
            "b3VyY2VJbnB1dBIgCghyZXNvdXJjZRgBIAEoCzIOLmNvbW1vbi5PcmlnaW4i",
            "PQokR2V0QXV0aG9yaXphdGlvblJlc291cmNlc0J5VHlwZUlucHV0EhUKDXJl",
            "c291cmNlX3R5cGUYASABKAkiTAogR2V0UmVzb3VyY2VzQnlPcmlnaW5BbmRU",
            "eXBlSW5wdXQSEQoJb3JpZ2luX2lkGAEgASgJEhUKDXJlc291cmNlX3R5cGUY",
            "AiABKAkiNgojR2V0VXNlcklEc1dpdGhBY2Nlc3NUb1Jlc291cmNlSW5wdXQS",
            "DwoHdXNlcl9pZBgBIAEoCSJKCiVHZXRBdXRob3JpemF0aW9uUmVzb3VyY2Vz",
            "QnlUeXBlT3V0cHV0EiEKCXJlc291cmNlcxgBIAMoCzIOLmNvbW1vbi5Pcmln",
            "aW4iRgohR2V0UmVzb3VyY2VzQnlPcmlnaW5BbmRUeXBlT3V0cHV0EiEKCXJl",
            "c291cmNlcxgBIAMoCzIOLmNvbW1vbi5PcmlnaW4iOAokR2V0VXNlcklEc1dp",
            "dGhBY2Nlc3NUb1Jlc291cmNlT3V0cHV0EhAKCHVzZXJfaWRzGAEgAygJImkK",
            "JUFkZEF1dGhvcml6YXRpb25SZXNvdXJjZVJlbGF0aW9uSW5wdXQSIAoIcmVz",
            "b3VyY2UYASABKAsyDi5jb21tb24uT3JpZ2luEh4KBnBhcmVudBgCIAEoCzIO",
            "LmNvbW1vbi5PcmlnaW4ibAooUmVtb3ZlQXV0aG9yaXphdGlvblJlc291cmNl",
            "UmVsYXRpb25JbnB1dBIgCghyZXNvdXJjZRgBIAEoCzIOLmNvbW1vbi5Pcmln",
            "aW4SHgoGcGFyZW50GAIgASgLMg4uY29tbW9uLk9yaWdpbiI9CiZHZXRBdXRo",
            "b3JpemF0aW9uUmVzb3VyY2VSZWxhdGlvbnNJbnB1dBITCgtyZXNvdXJjZV9p",
            "ZBgBIAEoCSJMCidHZXRBdXRob3JpemF0aW9uUmVzb3VyY2VSZWxhdGlvbnNP",
            "dXRwdXQSIQoJcmVzb3VyY2VzGAEgAygLMg4uY29tbW9uLk9yaWdpbiJZChZB",
            "ZGRVc2VyUGVybWlzc2lvbklucHV0Eg8KB3VzZXJfaWQYASABKAkSDAoEcm9s",
            "ZRgCIAEoCRIgCghyZXNvdXJjZRgDIAEoCzIOLmNvbW1vbi5PcmlnaW4iXAoZ",
            "UmVtb3ZlVXNlclBlcm1pc3Npb25JbnB1dBIPCgd1c2VyX2lkGAEgASgJEgwK",
            "BHJvbGUYAiABKAkSIAoIcmVzb3VyY2UYAyABKAsyDi5jb21tb24uT3JpZ2lu",
            "MowMCgNJQU0SMwoIRGVlcFBpbmcSDC5jb21tb24uVm9pZBoXLmNvbW1vbi5Q",
            "cmltaXRpdmVTdHJpbmciABJPChNDaGVja0F1dGhlbnRpY2F0aW9uEiEuZ3Jw",
            "Y2FwaS5DaGVja0F1dGhlbnRpY2F0aW9uSW5wdXQaEy5ncnBjYXBpLlVzZXJD",
            "bGFpbXMiABJjCh1DaGVja0F1dGhlbnRpY2F0aW9uQnlFbmRwb2ludBIrLmdy",
            "cGNhcGkuQ2hlY2tBdXRoZW50aWNhdGlvbkJ5RW5kcG9pbnRJbnB1dBoTLmdy",
            "cGNhcGkuVXNlckNsYWltcyIAEmQKFUdldEhpZXJhcmNoeVJlbGF0aW9ucxIj",
            "LmdycGNhcGkuR2V0SGllcmFyY2h5UmVsYXRpb25zSW5wdXQaJC5ncnBjYXBp",
            "LkdldEhpZXJhcmNoeVJlbGF0aW9uc091dHB1dCIAElIKD0dldEV2ZW50UmVj",
            "b3JkcxIdLmdycGNhcGkuR2V0RXZlbnRSZWNvcmRzSW5wdXQaHi5ncnBjYXBp",
            "LkdldEV2ZW50UmVjb3Jkc091dHB1dCIAEkkKDElzQXV0aG9yaXplZBIaLmdy",
            "cGNhcGkuSXNBdXRob3JpemVkSW5wdXQaGy5ncnBjYXBpLklzQXV0aG9yaXpl",
            "ZE91dHB1dCIAElIKGEFkZEF1dGhvcml6YXRpb25SZXNvdXJjZRImLmdycGNh",
            "cGkuQWRkQXV0aG9yaXphdGlvblJlc291cmNlSW5wdXQaDC5jb21tb24uVm9p",
            "ZCIAElgKG1JlbW92ZUF1dGhvcml6YXRpb25SZXNvdXJjZRIpLmdycGNhcGku",
            "UmVtb3ZlQXV0aG9yaXphdGlvblJlc291cmNlSW5wdXQaDC5jb21tb24uVm9p",
            "ZCIAEoIBCh9HZXRBdXRob3JpemF0aW9uUmVzb3VyY2VzQnlUeXBlEi0uZ3Jw",
            "Y2FwaS5HZXRBdXRob3JpemF0aW9uUmVzb3VyY2VzQnlUeXBlSW5wdXQaLi5n",
            "cnBjYXBpLkdldEF1dGhvcml6YXRpb25SZXNvdXJjZXNCeVR5cGVPdXRwdXQi",
            "ABJ2ChtHZXRSZXNvdXJjZXNCeU9yaWdpbkFuZFR5cGUSKS5ncnBjYXBpLkdl",
            "dFJlc291cmNlc0J5T3JpZ2luQW5kVHlwZUlucHV0GiouZ3JwY2FwaS5HZXRS",
            "ZXNvdXJjZXNCeU9yaWdpbkFuZFR5cGVPdXRwdXQiABJ/Ch5HZXRVc2VySURz",
            "V2l0aEFjY2Vzc1RvUmVzb3VyY2USLC5ncnBjYXBpLkdldFVzZXJJRHNXaXRo",
            "QWNjZXNzVG9SZXNvdXJjZUlucHV0Gi0uZ3JwY2FwaS5HZXRVc2VySURzV2l0",
            "aEFjY2Vzc1RvUmVzb3VyY2VPdXRwdXQiABJiCiBBZGRBdXRob3JpemF0aW9u",
            "UmVzb3VyY2VSZWxhdGlvbhIuLmdycGNhcGkuQWRkQXV0aG9yaXphdGlvblJl",
            "c291cmNlUmVsYXRpb25JbnB1dBoMLmNvbW1vbi5Wb2lkIgASaAojUmVtb3Zl",
            "QXV0aG9yaXphdGlvblJlc291cmNlUmVsYXRpb24SMS5ncnBjYXBpLlJlbW92",
            "ZUF1dGhvcml6YXRpb25SZXNvdXJjZVJlbGF0aW9uSW5wdXQaDC5jb21tb24u",
            "Vm9pZCIAEogBCiFHZXRBdXRob3JpemF0aW9uUmVzb3VyY2VSZWxhdGlvbnMS",
            "Ly5ncnBjYXBpLkdldEF1dGhvcml6YXRpb25SZXNvdXJjZVJlbGF0aW9uc0lu",
            "cHV0GjAuZ3JwY2FwaS5HZXRBdXRob3JpemF0aW9uUmVzb3VyY2VSZWxhdGlv",
            "bnNPdXRwdXQiABJEChFBZGRVc2VyUGVybWlzc2lvbhIfLmdycGNhcGkuQWRk",
            "VXNlclBlcm1pc3Npb25JbnB1dBoMLmNvbW1vbi5Wb2lkIgASSgoUUmVtb3Zl",
            "VXNlclBlcm1pc3Npb24SIi5ncnBjYXBpLlJlbW92ZVVzZXJQZXJtaXNzaW9u",
            "SW5wdXQaDC5jb21tb24uVm9pZCIAQhaqAhNTS0YuRW5saWdodC5BUEkuSUFN",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SKF.Enlight.API.Common.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.UserClaims), global::SKF.Enlight.API.IAM.UserClaims.Parser, new[]{ "Id", "Email", "EulaAgreedDate", "ValidEula", "Username", "UserStatus", "UserRoles", "UserAccess" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.GetHierarchyRelationsInput), global::SKF.Enlight.API.IAM.GetHierarchyRelationsInput.Parser, new[]{ "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.GetHierarchyRelationsOutput), global::SKF.Enlight.API.IAM.GetHierarchyRelationsOutput.Parser, new[]{ "NodeIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.CheckAuthenticationInput), global::SKF.Enlight.API.IAM.CheckAuthenticationInput.Parser, new[]{ "Token", "MethodArn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.CheckAuthenticationByEndpointInput), global::SKF.Enlight.API.IAM.CheckAuthenticationByEndpointInput.Parser, new[]{ "Token", "Endpoint", "Method", "Api" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.GetEventRecordsInput), global::SKF.Enlight.API.IAM.GetEventRecordsInput.Parser, new[]{ "Since", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.GetEventRecordsOutput), global::SKF.Enlight.API.IAM.GetEventRecordsOutput.Parser, new[]{ "Records" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.IsAuthorizedInput), global::SKF.Enlight.API.IAM.IsAuthorizedInput.Parser, new[]{ "UserId", "Action", "Resource" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.IsAuthorizedOutput), global::SKF.Enlight.API.IAM.IsAuthorizedOutput.Parser, new[]{ "Ok" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.AddAuthorizationResourceInput), global::SKF.Enlight.API.IAM.AddAuthorizationResourceInput.Parser, new[]{ "Resource" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.RemoveAuthorizationResourceInput), global::SKF.Enlight.API.IAM.RemoveAuthorizationResourceInput.Parser, new[]{ "Resource" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.GetAuthorizationResourcesByTypeInput), global::SKF.Enlight.API.IAM.GetAuthorizationResourcesByTypeInput.Parser, new[]{ "ResourceType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.GetResourcesByOriginAndTypeInput), global::SKF.Enlight.API.IAM.GetResourcesByOriginAndTypeInput.Parser, new[]{ "OriginId", "ResourceType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.GetUserIDsWithAccessToResourceInput), global::SKF.Enlight.API.IAM.GetUserIDsWithAccessToResourceInput.Parser, new[]{ "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.GetAuthorizationResourcesByTypeOutput), global::SKF.Enlight.API.IAM.GetAuthorizationResourcesByTypeOutput.Parser, new[]{ "Resources" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.GetResourcesByOriginAndTypeOutput), global::SKF.Enlight.API.IAM.GetResourcesByOriginAndTypeOutput.Parser, new[]{ "Resources" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.GetUserIDsWithAccessToResourceOutput), global::SKF.Enlight.API.IAM.GetUserIDsWithAccessToResourceOutput.Parser, new[]{ "UserIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.AddAuthorizationResourceRelationInput), global::SKF.Enlight.API.IAM.AddAuthorizationResourceRelationInput.Parser, new[]{ "Resource", "Parent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.RemoveAuthorizationResourceRelationInput), global::SKF.Enlight.API.IAM.RemoveAuthorizationResourceRelationInput.Parser, new[]{ "Resource", "Parent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.GetAuthorizationResourceRelationsInput), global::SKF.Enlight.API.IAM.GetAuthorizationResourceRelationsInput.Parser, new[]{ "ResourceId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.GetAuthorizationResourceRelationsOutput), global::SKF.Enlight.API.IAM.GetAuthorizationResourceRelationsOutput.Parser, new[]{ "Resources" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.AddUserPermissionInput), global::SKF.Enlight.API.IAM.AddUserPermissionInput.Parser, new[]{ "UserId", "Role", "Resource" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IAM.RemoveUserPermissionInput), global::SKF.Enlight.API.IAM.RemoveUserPermissionInput.Parser, new[]{ "UserId", "Role", "Resource" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UserClaims : pb::IMessage<UserClaims> {
    private static readonly pb::MessageParser<UserClaims> _parser = new pb::MessageParser<UserClaims>(() => new UserClaims());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserClaims> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserClaims() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserClaims(UserClaims other) : this() {
      id_ = other.id_;
      email_ = other.email_;
      eulaAgreedDate_ = other.eulaAgreedDate_;
      validEula_ = other.validEula_;
      username_ = other.username_;
      userStatus_ = other.userStatus_;
      userRoles_ = other.userRoles_;
      userAccess_ = other.userAccess_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserClaims Clone() {
      return new UserClaims(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 2;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "eula_agreed_date" field.</summary>
    public const int EulaAgreedDateFieldNumber = 3;
    private string eulaAgreedDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EulaAgreedDate {
      get { return eulaAgreedDate_; }
      set {
        eulaAgreedDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valid_eula" field.</summary>
    public const int ValidEulaFieldNumber = 4;
    private string validEula_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ValidEula {
      get { return validEula_; }
      set {
        validEula_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 5;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_status" field.</summary>
    public const int UserStatusFieldNumber = 6;
    private string userStatus_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserStatus {
      get { return userStatus_; }
      set {
        userStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_roles" field.</summary>
    public const int UserRolesFieldNumber = 7;
    private string userRoles_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserRoles {
      get { return userRoles_; }
      set {
        userRoles_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_access" field.</summary>
    public const int UserAccessFieldNumber = 8;
    private string userAccess_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserAccess {
      get { return userAccess_; }
      set {
        userAccess_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserClaims);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserClaims other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Email != other.Email) return false;
      if (EulaAgreedDate != other.EulaAgreedDate) return false;
      if (ValidEula != other.ValidEula) return false;
      if (Username != other.Username) return false;
      if (UserStatus != other.UserStatus) return false;
      if (UserRoles != other.UserRoles) return false;
      if (UserAccess != other.UserAccess) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (EulaAgreedDate.Length != 0) hash ^= EulaAgreedDate.GetHashCode();
      if (ValidEula.Length != 0) hash ^= ValidEula.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (UserStatus.Length != 0) hash ^= UserStatus.GetHashCode();
      if (UserRoles.Length != 0) hash ^= UserRoles.GetHashCode();
      if (UserAccess.Length != 0) hash ^= UserAccess.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Email);
      }
      if (EulaAgreedDate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EulaAgreedDate);
      }
      if (ValidEula.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ValidEula);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Username);
      }
      if (UserStatus.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(UserStatus);
      }
      if (UserRoles.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(UserRoles);
      }
      if (UserAccess.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(UserAccess);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (EulaAgreedDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EulaAgreedDate);
      }
      if (ValidEula.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValidEula);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (UserStatus.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserStatus);
      }
      if (UserRoles.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserRoles);
      }
      if (UserAccess.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserAccess);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserClaims other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.EulaAgreedDate.Length != 0) {
        EulaAgreedDate = other.EulaAgreedDate;
      }
      if (other.ValidEula.Length != 0) {
        ValidEula = other.ValidEula;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.UserStatus.Length != 0) {
        UserStatus = other.UserStatus;
      }
      if (other.UserRoles.Length != 0) {
        UserRoles = other.UserRoles;
      }
      if (other.UserAccess.Length != 0) {
        UserAccess = other.UserAccess;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Email = input.ReadString();
            break;
          }
          case 26: {
            EulaAgreedDate = input.ReadString();
            break;
          }
          case 34: {
            ValidEula = input.ReadString();
            break;
          }
          case 42: {
            Username = input.ReadString();
            break;
          }
          case 50: {
            UserStatus = input.ReadString();
            break;
          }
          case 58: {
            UserRoles = input.ReadString();
            break;
          }
          case 66: {
            UserAccess = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Input &amp; output messages
  /// </summary>
  public sealed partial class GetHierarchyRelationsInput : pb::IMessage<GetHierarchyRelationsInput> {
    private static readonly pb::MessageParser<GetHierarchyRelationsInput> _parser = new pb::MessageParser<GetHierarchyRelationsInput>(() => new GetHierarchyRelationsInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetHierarchyRelationsInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHierarchyRelationsInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHierarchyRelationsInput(GetHierarchyRelationsInput other) : this() {
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHierarchyRelationsInput Clone() {
      return new GetHierarchyRelationsInput(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetHierarchyRelationsInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetHierarchyRelationsInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetHierarchyRelationsInput other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetHierarchyRelationsOutput : pb::IMessage<GetHierarchyRelationsOutput> {
    private static readonly pb::MessageParser<GetHierarchyRelationsOutput> _parser = new pb::MessageParser<GetHierarchyRelationsOutput>(() => new GetHierarchyRelationsOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetHierarchyRelationsOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHierarchyRelationsOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHierarchyRelationsOutput(GetHierarchyRelationsOutput other) : this() {
      nodeIds_ = other.nodeIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHierarchyRelationsOutput Clone() {
      return new GetHierarchyRelationsOutput(this);
    }

    /// <summary>Field number for the "node_ids" field.</summary>
    public const int NodeIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_nodeIds_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> nodeIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> NodeIds {
      get { return nodeIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetHierarchyRelationsOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetHierarchyRelationsOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nodeIds_.Equals(other.nodeIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nodeIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      nodeIds_.WriteTo(output, _repeated_nodeIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += nodeIds_.CalculateSize(_repeated_nodeIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetHierarchyRelationsOutput other) {
      if (other == null) {
        return;
      }
      nodeIds_.Add(other.nodeIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodeIds_.AddEntriesFrom(input, _repeated_nodeIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckAuthenticationInput : pb::IMessage<CheckAuthenticationInput> {
    private static readonly pb::MessageParser<CheckAuthenticationInput> _parser = new pb::MessageParser<CheckAuthenticationInput>(() => new CheckAuthenticationInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckAuthenticationInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckAuthenticationInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckAuthenticationInput(CheckAuthenticationInput other) : this() {
      token_ = other.token_;
      methodArn_ = other.methodArn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckAuthenticationInput Clone() {
      return new CheckAuthenticationInput(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "methodArn" field.</summary>
    public const int MethodArnFieldNumber = 2;
    private string methodArn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MethodArn {
      get { return methodArn_; }
      set {
        methodArn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckAuthenticationInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckAuthenticationInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (MethodArn != other.MethodArn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (MethodArn.Length != 0) hash ^= MethodArn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (MethodArn.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MethodArn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (MethodArn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MethodArn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckAuthenticationInput other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.MethodArn.Length != 0) {
        MethodArn = other.MethodArn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            MethodArn = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckAuthenticationByEndpointInput : pb::IMessage<CheckAuthenticationByEndpointInput> {
    private static readonly pb::MessageParser<CheckAuthenticationByEndpointInput> _parser = new pb::MessageParser<CheckAuthenticationByEndpointInput>(() => new CheckAuthenticationByEndpointInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckAuthenticationByEndpointInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckAuthenticationByEndpointInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckAuthenticationByEndpointInput(CheckAuthenticationByEndpointInput other) : this() {
      token_ = other.token_;
      endpoint_ = other.endpoint_;
      method_ = other.method_;
      api_ = other.api_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckAuthenticationByEndpointInput Clone() {
      return new CheckAuthenticationByEndpointInput(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "endpoint" field.</summary>
    public const int EndpointFieldNumber = 2;
    private string endpoint_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Endpoint {
      get { return endpoint_; }
      set {
        endpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 3;
    private string method_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Method {
      get { return method_; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "api" field.</summary>
    public const int ApiFieldNumber = 4;
    private string api_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Api {
      get { return api_; }
      set {
        api_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckAuthenticationByEndpointInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckAuthenticationByEndpointInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (Endpoint != other.Endpoint) return false;
      if (Method != other.Method) return false;
      if (Api != other.Api) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (Endpoint.Length != 0) hash ^= Endpoint.GetHashCode();
      if (Method.Length != 0) hash ^= Method.GetHashCode();
      if (Api.Length != 0) hash ^= Api.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (Endpoint.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Endpoint);
      }
      if (Method.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Method);
      }
      if (Api.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Api);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (Endpoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Endpoint);
      }
      if (Method.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      if (Api.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Api);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckAuthenticationByEndpointInput other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.Endpoint.Length != 0) {
        Endpoint = other.Endpoint;
      }
      if (other.Method.Length != 0) {
        Method = other.Method;
      }
      if (other.Api.Length != 0) {
        Api = other.Api;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            Endpoint = input.ReadString();
            break;
          }
          case 26: {
            Method = input.ReadString();
            break;
          }
          case 34: {
            Api = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetEventRecordsInput : pb::IMessage<GetEventRecordsInput> {
    private static readonly pb::MessageParser<GetEventRecordsInput> _parser = new pb::MessageParser<GetEventRecordsInput>(() => new GetEventRecordsInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetEventRecordsInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEventRecordsInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEventRecordsInput(GetEventRecordsInput other) : this() {
      since_ = other.since_;
      limit_ = other.limit_ != null ? other.limit_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEventRecordsInput Clone() {
      return new GetEventRecordsInput(this);
    }

    /// <summary>Field number for the "since" field.</summary>
    public const int SinceFieldNumber = 1;
    private long since_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Since {
      get { return since_; }
      set {
        since_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private global::SKF.Enlight.API.Common.PrimitiveInt32 limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Common.PrimitiveInt32 Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetEventRecordsInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetEventRecordsInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Since != other.Since) return false;
      if (!object.Equals(Limit, other.Limit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Since != 0L) hash ^= Since.GetHashCode();
      if (limit_ != null) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Since != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Since);
      }
      if (limit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Since != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Since);
      }
      if (limit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetEventRecordsInput other) {
      if (other == null) {
        return;
      }
      if (other.Since != 0L) {
        Since = other.Since;
      }
      if (other.limit_ != null) {
        if (limit_ == null) {
          limit_ = new global::SKF.Enlight.API.Common.PrimitiveInt32();
        }
        Limit.MergeFrom(other.Limit);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Since = input.ReadInt64();
            break;
          }
          case 18: {
            if (limit_ == null) {
              limit_ = new global::SKF.Enlight.API.Common.PrimitiveInt32();
            }
            input.ReadMessage(limit_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetEventRecordsOutput : pb::IMessage<GetEventRecordsOutput> {
    private static readonly pb::MessageParser<GetEventRecordsOutput> _parser = new pb::MessageParser<GetEventRecordsOutput>(() => new GetEventRecordsOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetEventRecordsOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEventRecordsOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEventRecordsOutput(GetEventRecordsOutput other) : this() {
      records_ = other.records_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEventRecordsOutput Clone() {
      return new GetEventRecordsOutput(this);
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 1;
    private pb::ByteString records_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Records {
      get { return records_; }
      set {
        records_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetEventRecordsOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetEventRecordsOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Records != other.Records) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Records.Length != 0) hash ^= Records.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Records.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Records);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Records.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Records);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetEventRecordsOutput other) {
      if (other == null) {
        return;
      }
      if (other.Records.Length != 0) {
        Records = other.Records;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Records = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IsAuthorizedInput : pb::IMessage<IsAuthorizedInput> {
    private static readonly pb::MessageParser<IsAuthorizedInput> _parser = new pb::MessageParser<IsAuthorizedInput>(() => new IsAuthorizedInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IsAuthorizedInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IsAuthorizedInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IsAuthorizedInput(IsAuthorizedInput other) : this() {
      userId_ = other.userId_;
      action_ = other.action_;
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IsAuthorizedInput Clone() {
      return new IsAuthorizedInput(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 2;
    private string action_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 3;
    private global::SKF.Enlight.API.Common.Origin resource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Common.Origin Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IsAuthorizedInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IsAuthorizedInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Action != other.Action) return false;
      if (!object.Equals(Resource, other.Resource)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (resource_ != null) hash ^= Resource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Action.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Action);
      }
      if (resource_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Resource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IsAuthorizedInput other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          resource_ = new global::SKF.Enlight.API.Common.Origin();
        }
        Resource.MergeFrom(other.Resource);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            Action = input.ReadString();
            break;
          }
          case 26: {
            if (resource_ == null) {
              resource_ = new global::SKF.Enlight.API.Common.Origin();
            }
            input.ReadMessage(resource_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IsAuthorizedOutput : pb::IMessage<IsAuthorizedOutput> {
    private static readonly pb::MessageParser<IsAuthorizedOutput> _parser = new pb::MessageParser<IsAuthorizedOutput>(() => new IsAuthorizedOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IsAuthorizedOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IsAuthorizedOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IsAuthorizedOutput(IsAuthorizedOutput other) : this() {
      ok_ = other.ok_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IsAuthorizedOutput Clone() {
      return new IsAuthorizedOutput(this);
    }

    /// <summary>Field number for the "ok" field.</summary>
    public const int OkFieldNumber = 1;
    private bool ok_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IsAuthorizedOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IsAuthorizedOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ok != other.Ok) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ok != false) hash ^= Ok.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ok != false) {
        output.WriteRawTag(8);
        output.WriteBool(Ok);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ok != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IsAuthorizedOutput other) {
      if (other == null) {
        return;
      }
      if (other.Ok != false) {
        Ok = other.Ok;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ok = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddAuthorizationResourceInput : pb::IMessage<AddAuthorizationResourceInput> {
    private static readonly pb::MessageParser<AddAuthorizationResourceInput> _parser = new pb::MessageParser<AddAuthorizationResourceInput>(() => new AddAuthorizationResourceInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddAuthorizationResourceInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAuthorizationResourceInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAuthorizationResourceInput(AddAuthorizationResourceInput other) : this() {
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAuthorizationResourceInput Clone() {
      return new AddAuthorizationResourceInput(this);
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 1;
    private global::SKF.Enlight.API.Common.Origin resource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Common.Origin Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddAuthorizationResourceInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddAuthorizationResourceInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Resource, other.Resource)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resource_ != null) hash ^= Resource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resource_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Resource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddAuthorizationResourceInput other) {
      if (other == null) {
        return;
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          resource_ = new global::SKF.Enlight.API.Common.Origin();
        }
        Resource.MergeFrom(other.Resource);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (resource_ == null) {
              resource_ = new global::SKF.Enlight.API.Common.Origin();
            }
            input.ReadMessage(resource_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveAuthorizationResourceInput : pb::IMessage<RemoveAuthorizationResourceInput> {
    private static readonly pb::MessageParser<RemoveAuthorizationResourceInput> _parser = new pb::MessageParser<RemoveAuthorizationResourceInput>(() => new RemoveAuthorizationResourceInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveAuthorizationResourceInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAuthorizationResourceInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAuthorizationResourceInput(RemoveAuthorizationResourceInput other) : this() {
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAuthorizationResourceInput Clone() {
      return new RemoveAuthorizationResourceInput(this);
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 1;
    private global::SKF.Enlight.API.Common.Origin resource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Common.Origin Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveAuthorizationResourceInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveAuthorizationResourceInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Resource, other.Resource)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resource_ != null) hash ^= Resource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resource_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Resource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveAuthorizationResourceInput other) {
      if (other == null) {
        return;
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          resource_ = new global::SKF.Enlight.API.Common.Origin();
        }
        Resource.MergeFrom(other.Resource);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (resource_ == null) {
              resource_ = new global::SKF.Enlight.API.Common.Origin();
            }
            input.ReadMessage(resource_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAuthorizationResourcesByTypeInput : pb::IMessage<GetAuthorizationResourcesByTypeInput> {
    private static readonly pb::MessageParser<GetAuthorizationResourcesByTypeInput> _parser = new pb::MessageParser<GetAuthorizationResourcesByTypeInput>(() => new GetAuthorizationResourcesByTypeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAuthorizationResourcesByTypeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthorizationResourcesByTypeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthorizationResourcesByTypeInput(GetAuthorizationResourcesByTypeInput other) : this() {
      resourceType_ = other.resourceType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthorizationResourcesByTypeInput Clone() {
      return new GetAuthorizationResourcesByTypeInput(this);
    }

    /// <summary>Field number for the "resource_type" field.</summary>
    public const int ResourceTypeFieldNumber = 1;
    private string resourceType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceType {
      get { return resourceType_; }
      set {
        resourceType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAuthorizationResourcesByTypeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAuthorizationResourcesByTypeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceType != other.ResourceType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceType.Length != 0) hash ^= ResourceType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAuthorizationResourcesByTypeInput other) {
      if (other == null) {
        return;
      }
      if (other.ResourceType.Length != 0) {
        ResourceType = other.ResourceType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetResourcesByOriginAndTypeInput : pb::IMessage<GetResourcesByOriginAndTypeInput> {
    private static readonly pb::MessageParser<GetResourcesByOriginAndTypeInput> _parser = new pb::MessageParser<GetResourcesByOriginAndTypeInput>(() => new GetResourcesByOriginAndTypeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetResourcesByOriginAndTypeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResourcesByOriginAndTypeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResourcesByOriginAndTypeInput(GetResourcesByOriginAndTypeInput other) : this() {
      originId_ = other.originId_;
      resourceType_ = other.resourceType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResourcesByOriginAndTypeInput Clone() {
      return new GetResourcesByOriginAndTypeInput(this);
    }

    /// <summary>Field number for the "origin_id" field.</summary>
    public const int OriginIdFieldNumber = 1;
    private string originId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginId {
      get { return originId_; }
      set {
        originId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource_type" field.</summary>
    public const int ResourceTypeFieldNumber = 2;
    private string resourceType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceType {
      get { return resourceType_; }
      set {
        resourceType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetResourcesByOriginAndTypeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetResourcesByOriginAndTypeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OriginId != other.OriginId) return false;
      if (ResourceType != other.ResourceType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OriginId.Length != 0) hash ^= OriginId.GetHashCode();
      if (ResourceType.Length != 0) hash ^= ResourceType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OriginId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OriginId);
      }
      if (ResourceType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ResourceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OriginId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginId);
      }
      if (ResourceType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetResourcesByOriginAndTypeInput other) {
      if (other == null) {
        return;
      }
      if (other.OriginId.Length != 0) {
        OriginId = other.OriginId;
      }
      if (other.ResourceType.Length != 0) {
        ResourceType = other.ResourceType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OriginId = input.ReadString();
            break;
          }
          case 18: {
            ResourceType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUserIDsWithAccessToResourceInput : pb::IMessage<GetUserIDsWithAccessToResourceInput> {
    private static readonly pb::MessageParser<GetUserIDsWithAccessToResourceInput> _parser = new pb::MessageParser<GetUserIDsWithAccessToResourceInput>(() => new GetUserIDsWithAccessToResourceInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserIDsWithAccessToResourceInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserIDsWithAccessToResourceInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserIDsWithAccessToResourceInput(GetUserIDsWithAccessToResourceInput other) : this() {
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserIDsWithAccessToResourceInput Clone() {
      return new GetUserIDsWithAccessToResourceInput(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserIDsWithAccessToResourceInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserIDsWithAccessToResourceInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserIDsWithAccessToResourceInput other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAuthorizationResourcesByTypeOutput : pb::IMessage<GetAuthorizationResourcesByTypeOutput> {
    private static readonly pb::MessageParser<GetAuthorizationResourcesByTypeOutput> _parser = new pb::MessageParser<GetAuthorizationResourcesByTypeOutput>(() => new GetAuthorizationResourcesByTypeOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAuthorizationResourcesByTypeOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthorizationResourcesByTypeOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthorizationResourcesByTypeOutput(GetAuthorizationResourcesByTypeOutput other) : this() {
      resources_ = other.resources_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthorizationResourcesByTypeOutput Clone() {
      return new GetAuthorizationResourcesByTypeOutput(this);
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SKF.Enlight.API.Common.Origin> _repeated_resources_codec
        = pb::FieldCodec.ForMessage(10, global::SKF.Enlight.API.Common.Origin.Parser);
    private readonly pbc::RepeatedField<global::SKF.Enlight.API.Common.Origin> resources_ = new pbc::RepeatedField<global::SKF.Enlight.API.Common.Origin>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SKF.Enlight.API.Common.Origin> Resources {
      get { return resources_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAuthorizationResourcesByTypeOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAuthorizationResourcesByTypeOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!resources_.Equals(other.resources_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= resources_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      resources_.WriteTo(output, _repeated_resources_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += resources_.CalculateSize(_repeated_resources_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAuthorizationResourcesByTypeOutput other) {
      if (other == null) {
        return;
      }
      resources_.Add(other.resources_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetResourcesByOriginAndTypeOutput : pb::IMessage<GetResourcesByOriginAndTypeOutput> {
    private static readonly pb::MessageParser<GetResourcesByOriginAndTypeOutput> _parser = new pb::MessageParser<GetResourcesByOriginAndTypeOutput>(() => new GetResourcesByOriginAndTypeOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetResourcesByOriginAndTypeOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResourcesByOriginAndTypeOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResourcesByOriginAndTypeOutput(GetResourcesByOriginAndTypeOutput other) : this() {
      resources_ = other.resources_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResourcesByOriginAndTypeOutput Clone() {
      return new GetResourcesByOriginAndTypeOutput(this);
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SKF.Enlight.API.Common.Origin> _repeated_resources_codec
        = pb::FieldCodec.ForMessage(10, global::SKF.Enlight.API.Common.Origin.Parser);
    private readonly pbc::RepeatedField<global::SKF.Enlight.API.Common.Origin> resources_ = new pbc::RepeatedField<global::SKF.Enlight.API.Common.Origin>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SKF.Enlight.API.Common.Origin> Resources {
      get { return resources_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetResourcesByOriginAndTypeOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetResourcesByOriginAndTypeOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!resources_.Equals(other.resources_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= resources_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      resources_.WriteTo(output, _repeated_resources_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += resources_.CalculateSize(_repeated_resources_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetResourcesByOriginAndTypeOutput other) {
      if (other == null) {
        return;
      }
      resources_.Add(other.resources_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUserIDsWithAccessToResourceOutput : pb::IMessage<GetUserIDsWithAccessToResourceOutput> {
    private static readonly pb::MessageParser<GetUserIDsWithAccessToResourceOutput> _parser = new pb::MessageParser<GetUserIDsWithAccessToResourceOutput>(() => new GetUserIDsWithAccessToResourceOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserIDsWithAccessToResourceOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserIDsWithAccessToResourceOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserIDsWithAccessToResourceOutput(GetUserIDsWithAccessToResourceOutput other) : this() {
      userIds_ = other.userIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserIDsWithAccessToResourceOutput Clone() {
      return new GetUserIDsWithAccessToResourceOutput(this);
    }

    /// <summary>Field number for the "user_ids" field.</summary>
    public const int UserIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_userIds_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> userIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> UserIds {
      get { return userIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserIDsWithAccessToResourceOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserIDsWithAccessToResourceOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!userIds_.Equals(other.userIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= userIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      userIds_.WriteTo(output, _repeated_userIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += userIds_.CalculateSize(_repeated_userIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserIDsWithAccessToResourceOutput other) {
      if (other == null) {
        return;
      }
      userIds_.Add(other.userIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            userIds_.AddEntriesFrom(input, _repeated_userIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddAuthorizationResourceRelationInput : pb::IMessage<AddAuthorizationResourceRelationInput> {
    private static readonly pb::MessageParser<AddAuthorizationResourceRelationInput> _parser = new pb::MessageParser<AddAuthorizationResourceRelationInput>(() => new AddAuthorizationResourceRelationInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddAuthorizationResourceRelationInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAuthorizationResourceRelationInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAuthorizationResourceRelationInput(AddAuthorizationResourceRelationInput other) : this() {
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      parent_ = other.parent_ != null ? other.parent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAuthorizationResourceRelationInput Clone() {
      return new AddAuthorizationResourceRelationInput(this);
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 1;
    private global::SKF.Enlight.API.Common.Origin resource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Common.Origin Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 2;
    private global::SKF.Enlight.API.Common.Origin parent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Common.Origin Parent {
      get { return parent_; }
      set {
        parent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddAuthorizationResourceRelationInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddAuthorizationResourceRelationInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Resource, other.Resource)) return false;
      if (!object.Equals(Parent, other.Parent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resource_ != null) hash ^= Resource.GetHashCode();
      if (parent_ != null) hash ^= Parent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resource_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Resource);
      }
      if (parent_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      if (parent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddAuthorizationResourceRelationInput other) {
      if (other == null) {
        return;
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          resource_ = new global::SKF.Enlight.API.Common.Origin();
        }
        Resource.MergeFrom(other.Resource);
      }
      if (other.parent_ != null) {
        if (parent_ == null) {
          parent_ = new global::SKF.Enlight.API.Common.Origin();
        }
        Parent.MergeFrom(other.Parent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (resource_ == null) {
              resource_ = new global::SKF.Enlight.API.Common.Origin();
            }
            input.ReadMessage(resource_);
            break;
          }
          case 18: {
            if (parent_ == null) {
              parent_ = new global::SKF.Enlight.API.Common.Origin();
            }
            input.ReadMessage(parent_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveAuthorizationResourceRelationInput : pb::IMessage<RemoveAuthorizationResourceRelationInput> {
    private static readonly pb::MessageParser<RemoveAuthorizationResourceRelationInput> _parser = new pb::MessageParser<RemoveAuthorizationResourceRelationInput>(() => new RemoveAuthorizationResourceRelationInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveAuthorizationResourceRelationInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAuthorizationResourceRelationInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAuthorizationResourceRelationInput(RemoveAuthorizationResourceRelationInput other) : this() {
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      parent_ = other.parent_ != null ? other.parent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAuthorizationResourceRelationInput Clone() {
      return new RemoveAuthorizationResourceRelationInput(this);
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 1;
    private global::SKF.Enlight.API.Common.Origin resource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Common.Origin Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 2;
    private global::SKF.Enlight.API.Common.Origin parent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Common.Origin Parent {
      get { return parent_; }
      set {
        parent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveAuthorizationResourceRelationInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveAuthorizationResourceRelationInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Resource, other.Resource)) return false;
      if (!object.Equals(Parent, other.Parent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resource_ != null) hash ^= Resource.GetHashCode();
      if (parent_ != null) hash ^= Parent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resource_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Resource);
      }
      if (parent_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      if (parent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveAuthorizationResourceRelationInput other) {
      if (other == null) {
        return;
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          resource_ = new global::SKF.Enlight.API.Common.Origin();
        }
        Resource.MergeFrom(other.Resource);
      }
      if (other.parent_ != null) {
        if (parent_ == null) {
          parent_ = new global::SKF.Enlight.API.Common.Origin();
        }
        Parent.MergeFrom(other.Parent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (resource_ == null) {
              resource_ = new global::SKF.Enlight.API.Common.Origin();
            }
            input.ReadMessage(resource_);
            break;
          }
          case 18: {
            if (parent_ == null) {
              parent_ = new global::SKF.Enlight.API.Common.Origin();
            }
            input.ReadMessage(parent_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAuthorizationResourceRelationsInput : pb::IMessage<GetAuthorizationResourceRelationsInput> {
    private static readonly pb::MessageParser<GetAuthorizationResourceRelationsInput> _parser = new pb::MessageParser<GetAuthorizationResourceRelationsInput>(() => new GetAuthorizationResourceRelationsInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAuthorizationResourceRelationsInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthorizationResourceRelationsInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthorizationResourceRelationsInput(GetAuthorizationResourceRelationsInput other) : this() {
      resourceId_ = other.resourceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthorizationResourceRelationsInput Clone() {
      return new GetAuthorizationResourceRelationsInput(this);
    }

    /// <summary>Field number for the "resource_id" field.</summary>
    public const int ResourceIdFieldNumber = 1;
    private string resourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceId {
      get { return resourceId_; }
      set {
        resourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAuthorizationResourceRelationsInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAuthorizationResourceRelationsInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceId != other.ResourceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceId.Length != 0) hash ^= ResourceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAuthorizationResourceRelationsInput other) {
      if (other == null) {
        return;
      }
      if (other.ResourceId.Length != 0) {
        ResourceId = other.ResourceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAuthorizationResourceRelationsOutput : pb::IMessage<GetAuthorizationResourceRelationsOutput> {
    private static readonly pb::MessageParser<GetAuthorizationResourceRelationsOutput> _parser = new pb::MessageParser<GetAuthorizationResourceRelationsOutput>(() => new GetAuthorizationResourceRelationsOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAuthorizationResourceRelationsOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthorizationResourceRelationsOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthorizationResourceRelationsOutput(GetAuthorizationResourceRelationsOutput other) : this() {
      resources_ = other.resources_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthorizationResourceRelationsOutput Clone() {
      return new GetAuthorizationResourceRelationsOutput(this);
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SKF.Enlight.API.Common.Origin> _repeated_resources_codec
        = pb::FieldCodec.ForMessage(10, global::SKF.Enlight.API.Common.Origin.Parser);
    private readonly pbc::RepeatedField<global::SKF.Enlight.API.Common.Origin> resources_ = new pbc::RepeatedField<global::SKF.Enlight.API.Common.Origin>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SKF.Enlight.API.Common.Origin> Resources {
      get { return resources_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAuthorizationResourceRelationsOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAuthorizationResourceRelationsOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!resources_.Equals(other.resources_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= resources_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      resources_.WriteTo(output, _repeated_resources_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += resources_.CalculateSize(_repeated_resources_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAuthorizationResourceRelationsOutput other) {
      if (other == null) {
        return;
      }
      resources_.Add(other.resources_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddUserPermissionInput : pb::IMessage<AddUserPermissionInput> {
    private static readonly pb::MessageParser<AddUserPermissionInput> _parser = new pb::MessageParser<AddUserPermissionInput>(() => new AddUserPermissionInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddUserPermissionInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUserPermissionInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUserPermissionInput(AddUserPermissionInput other) : this() {
      userId_ = other.userId_;
      role_ = other.role_;
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUserPermissionInput Clone() {
      return new AddUserPermissionInput(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 2;
    private string role_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Role {
      get { return role_; }
      set {
        role_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 3;
    private global::SKF.Enlight.API.Common.Origin resource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Common.Origin Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddUserPermissionInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddUserPermissionInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Role != other.Role) return false;
      if (!object.Equals(Resource, other.Resource)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Role.Length != 0) hash ^= Role.GetHashCode();
      if (resource_ != null) hash ^= Resource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Role.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Role);
      }
      if (resource_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Resource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Role.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Role);
      }
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddUserPermissionInput other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Role.Length != 0) {
        Role = other.Role;
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          resource_ = new global::SKF.Enlight.API.Common.Origin();
        }
        Resource.MergeFrom(other.Resource);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            Role = input.ReadString();
            break;
          }
          case 26: {
            if (resource_ == null) {
              resource_ = new global::SKF.Enlight.API.Common.Origin();
            }
            input.ReadMessage(resource_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveUserPermissionInput : pb::IMessage<RemoveUserPermissionInput> {
    private static readonly pb::MessageParser<RemoveUserPermissionInput> _parser = new pb::MessageParser<RemoveUserPermissionInput>(() => new RemoveUserPermissionInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveUserPermissionInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IAM.GrpcapiReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveUserPermissionInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveUserPermissionInput(RemoveUserPermissionInput other) : this() {
      userId_ = other.userId_;
      role_ = other.role_;
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveUserPermissionInput Clone() {
      return new RemoveUserPermissionInput(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 2;
    private string role_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Role {
      get { return role_; }
      set {
        role_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 3;
    private global::SKF.Enlight.API.Common.Origin resource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Common.Origin Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveUserPermissionInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveUserPermissionInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Role != other.Role) return false;
      if (!object.Equals(Resource, other.Resource)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Role.Length != 0) hash ^= Role.GetHashCode();
      if (resource_ != null) hash ^= Resource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Role.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Role);
      }
      if (resource_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Resource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Role.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Role);
      }
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveUserPermissionInput other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Role.Length != 0) {
        Role = other.Role;
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          resource_ = new global::SKF.Enlight.API.Common.Origin();
        }
        Resource.MergeFrom(other.Resource);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            Role = input.ReadString();
            break;
          }
          case 26: {
            if (resource_ == null) {
              resource_ = new global::SKF.Enlight.API.Common.Origin();
            }
            input.ReadMessage(resource_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
