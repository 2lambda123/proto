// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: pas/grpcapi.proto

package pas

import (
	context "context"
	common "github.com/SKF/proto/v2/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeDataContentType int32

const (
	NodeDataContentType_DEFAULT          NodeDataContentType = 0
	NodeDataContentType_DATA_POINT       NodeDataContentType = 1
	NodeDataContentType_SPECTRUM         NodeDataContentType = 2
	NodeDataContentType_TIME_SERIES      NodeDataContentType = 3
	NodeDataContentType_NOTE             NodeDataContentType = 4
	NodeDataContentType_MEDIA_V2         NodeDataContentType = 7
	NodeDataContentType_QUESTION_ANSWERS NodeDataContentType = 6
)

// Enum value maps for NodeDataContentType.
var (
	NodeDataContentType_name = map[int32]string{
		0: "DEFAULT",
		1: "DATA_POINT",
		2: "SPECTRUM",
		3: "TIME_SERIES",
		4: "NOTE",
		7: "MEDIA_V2",
		6: "QUESTION_ANSWERS",
	}
	NodeDataContentType_value = map[string]int32{
		"DEFAULT":          0,
		"DATA_POINT":       1,
		"SPECTRUM":         2,
		"TIME_SERIES":      3,
		"NOTE":             4,
		"MEDIA_V2":         7,
		"QUESTION_ANSWERS": 6,
	}
)

func (x NodeDataContentType) Enum() *NodeDataContentType {
	p := new(NodeDataContentType)
	*p = x
	return p
}

func (x NodeDataContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeDataContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_pas_grpcapi_proto_enumTypes[0].Descriptor()
}

func (NodeDataContentType) Type() protoreflect.EnumType {
	return &file_pas_grpcapi_proto_enumTypes[0]
}

func (x NodeDataContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeDataContentType.Descriptor instead.
func (NodeDataContentType) EnumDescriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{0}
}

type MediaType int32

const (
	MediaType_UNKNOWN    MediaType = 0
	MediaType_AUDIO_WAV  MediaType = 1
	MediaType_IMAGE_JPEG MediaType = 2
	MediaType_IMAGE_PNG  MediaType = 3
	MediaType_AUDIO_MP4  MediaType = 4
)

// Enum value maps for MediaType.
var (
	MediaType_name = map[int32]string{
		0: "UNKNOWN",
		1: "AUDIO_WAV",
		2: "IMAGE_JPEG",
		3: "IMAGE_PNG",
		4: "AUDIO_MP4",
	}
	MediaType_value = map[string]int32{
		"UNKNOWN":    0,
		"AUDIO_WAV":  1,
		"IMAGE_JPEG": 2,
		"IMAGE_PNG":  3,
		"AUDIO_MP4":  4,
	}
)

func (x MediaType) Enum() *MediaType {
	p := new(MediaType)
	*p = x
	return p
}

func (x MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_pas_grpcapi_proto_enumTypes[1].Descriptor()
}

func (MediaType) Type() protoreflect.EnumType {
	return &file_pas_grpcapi_proto_enumTypes[1]
}

func (x MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaType.Descriptor instead.
func (MediaType) EnumDescriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{1}
}

type AlarmStatus int32

const (
	AlarmStatus_NOT_CONFIGURED AlarmStatus = 0 // No threshold configured.
	AlarmStatus_NO_DATA        AlarmStatus = 1 // No measurement data.
	AlarmStatus_GOOD           AlarmStatus = 2 // Latest measurement data within a good interval.
	AlarmStatus_ALERT          AlarmStatus = 3 // Latest measurement data within an alert interval.
	AlarmStatus_DANGER         AlarmStatus = 4 // Latest measurement data within a danger interval.
)

// Enum value maps for AlarmStatus.
var (
	AlarmStatus_name = map[int32]string{
		0: "NOT_CONFIGURED",
		1: "NO_DATA",
		2: "GOOD",
		3: "ALERT",
		4: "DANGER",
	}
	AlarmStatus_value = map[string]int32{
		"NOT_CONFIGURED": 0,
		"NO_DATA":        1,
		"GOOD":           2,
		"ALERT":          3,
		"DANGER":         4,
	}
)

func (x AlarmStatus) Enum() *AlarmStatus {
	p := new(AlarmStatus)
	*p = x
	return p
}

func (x AlarmStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlarmStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pas_grpcapi_proto_enumTypes[2].Descriptor()
}

func (AlarmStatus) Type() protoreflect.EnumType {
	return &file_pas_grpcapi_proto_enumTypes[2]
}

func (x AlarmStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlarmStatus.Descriptor instead.
func (AlarmStatus) EnumDescriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{2}
}

type ThresholdType int32

const (
	ThresholdType_NONE                  ThresholdType = 0
	ThresholdType_OVERALL_IN_WINDOW     ThresholdType = 1
	ThresholdType_OVERALL_OUT_OF_WINDOW ThresholdType = 2
	ThresholdType_INSPECTION            ThresholdType = 3
)

// Enum value maps for ThresholdType.
var (
	ThresholdType_name = map[int32]string{
		0: "NONE",
		1: "OVERALL_IN_WINDOW",
		2: "OVERALL_OUT_OF_WINDOW",
		3: "INSPECTION",
	}
	ThresholdType_value = map[string]int32{
		"NONE":                  0,
		"OVERALL_IN_WINDOW":     1,
		"OVERALL_OUT_OF_WINDOW": 2,
		"INSPECTION":            3,
	}
)

func (x ThresholdType) Enum() *ThresholdType {
	p := new(ThresholdType)
	*p = x
	return p
}

func (x ThresholdType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ThresholdType) Descriptor() protoreflect.EnumDescriptor {
	return file_pas_grpcapi_proto_enumTypes[3].Descriptor()
}

func (ThresholdType) Type() protoreflect.EnumType {
	return &file_pas_grpcapi_proto_enumTypes[3]
}

func (x ThresholdType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ThresholdType.Descriptor instead.
func (ThresholdType) EnumDescriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{3}
}

type Frequency_FrequencyType int32

const (
	Frequency_UNKNOWN        Frequency_FrequencyType = 0
	Frequency_FIXED          Frequency_FrequencyType = 1
	Frequency_SPEED_MULTIPLE Frequency_FrequencyType = 2
)

// Enum value maps for Frequency_FrequencyType.
var (
	Frequency_FrequencyType_name = map[int32]string{
		0: "UNKNOWN",
		1: "FIXED",
		2: "SPEED_MULTIPLE",
	}
	Frequency_FrequencyType_value = map[string]int32{
		"UNKNOWN":        0,
		"FIXED":          1,
		"SPEED_MULTIPLE": 2,
	}
)

func (x Frequency_FrequencyType) Enum() *Frequency_FrequencyType {
	p := new(Frequency_FrequencyType)
	*p = x
	return p
}

func (x Frequency_FrequencyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Frequency_FrequencyType) Descriptor() protoreflect.EnumDescriptor {
	return file_pas_grpcapi_proto_enumTypes[4].Descriptor()
}

func (Frequency_FrequencyType) Type() protoreflect.EnumType {
	return &file_pas_grpcapi_proto_enumTypes[4]
}

func (x Frequency_FrequencyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Frequency_FrequencyType.Descriptor instead.
func (Frequency_FrequencyType) EnumDescriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{24, 0}
}

type ThresholdValue_ThresholdValueType int32

const (
	ThresholdValue_UNKNOWN            ThresholdValue_ThresholdValueType = 0
	ThresholdValue_ABSOLUTE           ThresholdValue_ThresholdValueType = 1
	ThresholdValue_RELATIVE_FULLSCALE ThresholdValue_ThresholdValueType = 2
)

// Enum value maps for ThresholdValue_ThresholdValueType.
var (
	ThresholdValue_ThresholdValueType_name = map[int32]string{
		0: "UNKNOWN",
		1: "ABSOLUTE",
		2: "RELATIVE_FULLSCALE",
	}
	ThresholdValue_ThresholdValueType_value = map[string]int32{
		"UNKNOWN":            0,
		"ABSOLUTE":           1,
		"RELATIVE_FULLSCALE": 2,
	}
)

func (x ThresholdValue_ThresholdValueType) Enum() *ThresholdValue_ThresholdValueType {
	p := new(ThresholdValue_ThresholdValueType)
	*p = x
	return p
}

func (x ThresholdValue_ThresholdValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ThresholdValue_ThresholdValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_pas_grpcapi_proto_enumTypes[5].Descriptor()
}

func (ThresholdValue_ThresholdValueType) Type() protoreflect.EnumType {
	return &file_pas_grpcapi_proto_enumTypes[5]
}

func (x ThresholdValue_ThresholdValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ThresholdValue_ThresholdValueType.Descriptor instead.
func (ThresholdValue_ThresholdValueType) EnumDescriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{26, 0}
}

// DeepPing Messages
type DeepPingOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DeepPingOutput) Reset() {
	*x = DeepPingOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeepPingOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepPingOutput) ProtoMessage() {}

func (x *DeepPingOutput) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepPingOutput.ProtoReflect.Descriptor instead.
func (*DeepPingOutput) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{0}
}

func (x *DeepPingOutput) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type NodeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt       int64               `protobuf:"varint,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ContentType     NodeDataContentType `protobuf:"varint,2,opt,name=content_type,json=contentType,proto3,enum=pasapi.NodeDataContentType" json:"content_type,omitempty"`
	DataPoint       *DataPoint          `protobuf:"bytes,3,opt,name=data_point,json=dataPoint,proto3" json:"data_point,omitempty"`
	Spectrum        *Spectrum           `protobuf:"bytes,4,opt,name=spectrum,proto3" json:"spectrum,omitempty"`
	TimeSeries      *TimeSeries         `protobuf:"bytes,5,opt,name=time_series,json=timeSeries,proto3" json:"time_series,omitempty"`
	Note            string              `protobuf:"bytes,6,opt,name=note,proto3" json:"note,omitempty"`
	MediaV2         *Media              `protobuf:"bytes,9,opt,name=media_v2,json=mediaV2,proto3" json:"media_v2,omitempty"`
	QuestionAnswers []string            `protobuf:"bytes,8,rep,name=question_answers,json=questionAnswers,proto3" json:"question_answers,omitempty"`
}

func (x *NodeData) Reset() {
	*x = NodeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeData) ProtoMessage() {}

func (x *NodeData) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeData.ProtoReflect.Descriptor instead.
func (*NodeData) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{1}
}

func (x *NodeData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *NodeData) GetContentType() NodeDataContentType {
	if x != nil {
		return x.ContentType
	}
	return NodeDataContentType_DEFAULT
}

func (x *NodeData) GetDataPoint() *DataPoint {
	if x != nil {
		return x.DataPoint
	}
	return nil
}

func (x *NodeData) GetSpectrum() *Spectrum {
	if x != nil {
		return x.Spectrum
	}
	return nil
}

func (x *NodeData) GetTimeSeries() *TimeSeries {
	if x != nil {
		return x.TimeSeries
	}
	return nil
}

func (x *NodeData) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *NodeData) GetMediaV2() *Media {
	if x != nil {
		return x.MediaV2
	}
	return nil
}

func (x *NodeData) GetQuestionAnswers() []string {
	if x != nil {
		return x.QuestionAnswers
	}
	return nil
}

type Coordinate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Coordinate) Reset() {
	*x = Coordinate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coordinate) ProtoMessage() {}

func (x *Coordinate) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coordinate.ProtoReflect.Descriptor instead.
func (*Coordinate) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{2}
}

func (x *Coordinate) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Coordinate) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

type DataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coordinate *Coordinate `protobuf:"bytes,1,opt,name=coordinate,proto3" json:"coordinate,omitempty"`
	XUnit      string      `protobuf:"bytes,2,opt,name=x_unit,json=xUnit,proto3" json:"x_unit,omitempty"`
	YUnit      string      `protobuf:"bytes,3,opt,name=y_unit,json=yUnit,proto3" json:"y_unit,omitempty"`
}

func (x *DataPoint) Reset() {
	*x = DataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPoint) ProtoMessage() {}

func (x *DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPoint.ProtoReflect.Descriptor instead.
func (*DataPoint) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{3}
}

func (x *DataPoint) GetCoordinate() *Coordinate {
	if x != nil {
		return x.Coordinate
	}
	return nil
}

func (x *DataPoint) GetXUnit() string {
	if x != nil {
		return x.XUnit
	}
	return ""
}

func (x *DataPoint) GetYUnit() string {
	if x != nil {
		return x.YUnit
	}
	return ""
}

type Spectrum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coordinates    []*Coordinate `protobuf:"bytes,1,rep,name=coordinates,proto3" json:"coordinates,omitempty"`
	XUnit          string        `protobuf:"bytes,2,opt,name=x_unit,json=xUnit,proto3" json:"x_unit,omitempty"`
	YUnit          string        `protobuf:"bytes,3,opt,name=y_unit,json=yUnit,proto3" json:"y_unit,omitempty"`
	WindowFunction string        `protobuf:"bytes,4,opt,name=window_function,json=windowFunction,proto3" json:"window_function,omitempty"`
	SpeedRpm       float64       `protobuf:"fixed64,5,opt,name=speed_rpm,json=speedRpm,proto3" json:"speed_rpm,omitempty"`
}

func (x *Spectrum) Reset() {
	*x = Spectrum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spectrum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spectrum) ProtoMessage() {}

func (x *Spectrum) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spectrum.ProtoReflect.Descriptor instead.
func (*Spectrum) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{4}
}

func (x *Spectrum) GetCoordinates() []*Coordinate {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *Spectrum) GetXUnit() string {
	if x != nil {
		return x.XUnit
	}
	return ""
}

func (x *Spectrum) GetYUnit() string {
	if x != nil {
		return x.YUnit
	}
	return ""
}

func (x *Spectrum) GetWindowFunction() string {
	if x != nil {
		return x.WindowFunction
	}
	return ""
}

func (x *Spectrum) GetSpeedRpm() float64 {
	if x != nil {
		return x.SpeedRpm
	}
	return 0
}

type TimeSeries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coordinates []*Coordinate `protobuf:"bytes,1,rep,name=coordinates,proto3" json:"coordinates,omitempty"`
	XUnit       string        `protobuf:"bytes,2,opt,name=x_unit,json=xUnit,proto3" json:"x_unit,omitempty"`
	YUnit       string        `protobuf:"bytes,3,opt,name=y_unit,json=yUnit,proto3" json:"y_unit,omitempty"`
}

func (x *TimeSeries) Reset() {
	*x = TimeSeries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSeries) ProtoMessage() {}

func (x *TimeSeries) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSeries.ProtoReflect.Descriptor instead.
func (*TimeSeries) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{5}
}

func (x *TimeSeries) GetCoordinates() []*Coordinate {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *TimeSeries) GetXUnit() string {
	if x != nil {
		return x.XUnit
	}
	return ""
}

func (x *TimeSeries) GetYUnit() string {
	if x != nil {
		return x.YUnit
	}
	return ""
}

type Media struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type  MediaType `protobuf:"varint,2,opt,name=type,proto3,enum=pasapi.MediaType" json:"type,omitempty"`
	Media []byte    `protobuf:"bytes,3,opt,name=media,proto3" json:"media,omitempty"`
}

func (x *Media) Reset() {
	*x = Media{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{6}
}

func (x *Media) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Media) GetType() MediaType {
	if x != nil {
		return x.Type
	}
	return MediaType_UNKNOWN
}

func (x *Media) GetMedia() []byte {
	if x != nil {
		return x.Media
	}
	return nil
}

// SetPointAlarmThreshold Messages
type SetPointAlarmThresholdInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId     string         `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	UserId     string         `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type       ThresholdType  `protobuf:"varint,3,opt,name=type,proto3,enum=pasapi.ThresholdType" json:"type,omitempty"`
	Overall    *Overall       `protobuf:"bytes,4,opt,name=overall,proto3" json:"overall,omitempty"`
	Origin     *common.Origin `protobuf:"bytes,5,opt,name=origin,proto3" json:"origin,omitempty"`
	Inspection *Inspection    `protobuf:"bytes,6,opt,name=inspection,proto3" json:"inspection,omitempty"`
	BandAlarms []*BandAlarm   `protobuf:"bytes,7,rep,name=band_alarms,json=bandAlarms,proto3" json:"band_alarms,omitempty"`
	FullScale  *DoubleObject  `protobuf:"bytes,8,opt,name=full_scale,json=fullScale,proto3" json:"full_scale,omitempty"`
}

func (x *SetPointAlarmThresholdInput) Reset() {
	*x = SetPointAlarmThresholdInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPointAlarmThresholdInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPointAlarmThresholdInput) ProtoMessage() {}

func (x *SetPointAlarmThresholdInput) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPointAlarmThresholdInput.ProtoReflect.Descriptor instead.
func (*SetPointAlarmThresholdInput) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{7}
}

func (x *SetPointAlarmThresholdInput) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SetPointAlarmThresholdInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SetPointAlarmThresholdInput) GetType() ThresholdType {
	if x != nil {
		return x.Type
	}
	return ThresholdType_NONE
}

func (x *SetPointAlarmThresholdInput) GetOverall() *Overall {
	if x != nil {
		return x.Overall
	}
	return nil
}

func (x *SetPointAlarmThresholdInput) GetOrigin() *common.Origin {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *SetPointAlarmThresholdInput) GetInspection() *Inspection {
	if x != nil {
		return x.Inspection
	}
	return nil
}

func (x *SetPointAlarmThresholdInput) GetBandAlarms() []*BandAlarm {
	if x != nil {
		return x.BandAlarms
	}
	return nil
}

func (x *SetPointAlarmThresholdInput) GetFullScale() *DoubleObject {
	if x != nil {
		return x.FullScale
	}
	return nil
}

type SetPointAlarmThresholdOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetPointAlarmThresholdOutput) Reset() {
	*x = SetPointAlarmThresholdOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPointAlarmThresholdOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPointAlarmThresholdOutput) ProtoMessage() {}

func (x *SetPointAlarmThresholdOutput) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPointAlarmThresholdOutput.ProtoReflect.Descriptor instead.
func (*SetPointAlarmThresholdOutput) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{8}
}

// GetPointAlarmThreshold Messages
type GetPointAlarmThresholdInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *GetPointAlarmThresholdInput) Reset() {
	*x = GetPointAlarmThresholdInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPointAlarmThresholdInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPointAlarmThresholdInput) ProtoMessage() {}

func (x *GetPointAlarmThresholdInput) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPointAlarmThresholdInput.ProtoReflect.Descriptor instead.
func (*GetPointAlarmThresholdInput) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{9}
}

func (x *GetPointAlarmThresholdInput) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type GetPointAlarmThresholdOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       ThresholdType `protobuf:"varint,1,opt,name=type,proto3,enum=pasapi.ThresholdType" json:"type,omitempty"`
	Overall    *Overall      `protobuf:"bytes,2,opt,name=overall,proto3" json:"overall,omitempty"`
	Inspection *Inspection   `protobuf:"bytes,3,opt,name=inspection,proto3" json:"inspection,omitempty"`
	FullScale  float64       `protobuf:"fixed64,4,opt,name=full_scale,json=fullScale,proto3" json:"full_scale,omitempty"`
	BandAlarms []*BandAlarm  `protobuf:"bytes,5,rep,name=band_alarms,json=bandAlarms,proto3" json:"band_alarms,omitempty"`
}

func (x *GetPointAlarmThresholdOutput) Reset() {
	*x = GetPointAlarmThresholdOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPointAlarmThresholdOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPointAlarmThresholdOutput) ProtoMessage() {}

func (x *GetPointAlarmThresholdOutput) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPointAlarmThresholdOutput.ProtoReflect.Descriptor instead.
func (*GetPointAlarmThresholdOutput) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{10}
}

func (x *GetPointAlarmThresholdOutput) GetType() ThresholdType {
	if x != nil {
		return x.Type
	}
	return ThresholdType_NONE
}

func (x *GetPointAlarmThresholdOutput) GetOverall() *Overall {
	if x != nil {
		return x.Overall
	}
	return nil
}

func (x *GetPointAlarmThresholdOutput) GetInspection() *Inspection {
	if x != nil {
		return x.Inspection
	}
	return nil
}

func (x *GetPointAlarmThresholdOutput) GetFullScale() float64 {
	if x != nil {
		return x.FullScale
	}
	return 0
}

func (x *GetPointAlarmThresholdOutput) GetBandAlarms() []*BandAlarm {
	if x != nil {
		return x.BandAlarms
	}
	return nil
}

// SetPointAlarmStatus Messages
type SetPointAlarmStatusInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId      string         `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	AlarmStatus AlarmStatus    `protobuf:"varint,2,opt,name=alarm_status,json=alarmStatus,proto3,enum=pasapi.AlarmStatus" json:"alarm_status,omitempty"`
	Origin      *common.Origin `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *SetPointAlarmStatusInput) Reset() {
	*x = SetPointAlarmStatusInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPointAlarmStatusInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPointAlarmStatusInput) ProtoMessage() {}

func (x *SetPointAlarmStatusInput) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPointAlarmStatusInput.ProtoReflect.Descriptor instead.
func (*SetPointAlarmStatusInput) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{11}
}

func (x *SetPointAlarmStatusInput) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SetPointAlarmStatusInput) GetAlarmStatus() AlarmStatus {
	if x != nil {
		return x.AlarmStatus
	}
	return AlarmStatus_NOT_CONFIGURED
}

func (x *SetPointAlarmStatusInput) GetOrigin() *common.Origin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type SetPointAlarmStatusOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetPointAlarmStatusOutput) Reset() {
	*x = SetPointAlarmStatusOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPointAlarmStatusOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPointAlarmStatusOutput) ProtoMessage() {}

func (x *SetPointAlarmStatusOutput) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPointAlarmStatusOutput.ProtoReflect.Descriptor instead.
func (*SetPointAlarmStatusOutput) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{12}
}

// GetPointAlarmStatus Messages
type GetPointAlarmStatusInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *GetPointAlarmStatusInput) Reset() {
	*x = GetPointAlarmStatusInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPointAlarmStatusInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPointAlarmStatusInput) ProtoMessage() {}

func (x *GetPointAlarmStatusInput) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPointAlarmStatusInput.ProtoReflect.Descriptor instead.
func (*GetPointAlarmStatusInput) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{13}
}

func (x *GetPointAlarmStatusInput) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type GetPointAlarmStatusOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmStatus AlarmStatus `protobuf:"varint,1,opt,name=alarm_status,json=alarmStatus,proto3,enum=pasapi.AlarmStatus" json:"alarm_status,omitempty"`
}

func (x *GetPointAlarmStatusOutput) Reset() {
	*x = GetPointAlarmStatusOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPointAlarmStatusOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPointAlarmStatusOutput) ProtoMessage() {}

func (x *GetPointAlarmStatusOutput) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPointAlarmStatusOutput.ProtoReflect.Descriptor instead.
func (*GetPointAlarmStatusOutput) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{14}
}

func (x *GetPointAlarmStatusOutput) GetAlarmStatus() AlarmStatus {
	if x != nil {
		return x.AlarmStatus
	}
	return AlarmStatus_NOT_CONFIGURED
}

type PointAlarmStatusEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqId     string      `protobuf:"bytes,1,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	NodeId    string      `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Timestamp int64       `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Status    AlarmStatus `protobuf:"varint,4,opt,name=status,proto3,enum=pasapi.AlarmStatus" json:"status,omitempty"`
}

func (x *PointAlarmStatusEvent) Reset() {
	*x = PointAlarmStatusEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointAlarmStatusEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointAlarmStatusEvent) ProtoMessage() {}

func (x *PointAlarmStatusEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointAlarmStatusEvent.ProtoReflect.Descriptor instead.
func (*PointAlarmStatusEvent) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{15}
}

func (x *PointAlarmStatusEvent) GetSeqId() string {
	if x != nil {
		return x.SeqId
	}
	return ""
}

func (x *PointAlarmStatusEvent) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *PointAlarmStatusEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PointAlarmStatusEvent) GetStatus() AlarmStatus {
	if x != nil {
		return x.Status
	}
	return AlarmStatus_NOT_CONFIGURED
}

type GetPointAlarmStatusEventLogInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqId string `protobuf:"bytes,1,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
}

func (x *GetPointAlarmStatusEventLogInput) Reset() {
	*x = GetPointAlarmStatusEventLogInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPointAlarmStatusEventLogInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPointAlarmStatusEventLogInput) ProtoMessage() {}

func (x *GetPointAlarmStatusEventLogInput) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPointAlarmStatusEventLogInput.ProtoReflect.Descriptor instead.
func (*GetPointAlarmStatusEventLogInput) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{16}
}

func (x *GetPointAlarmStatusEventLogInput) GetSeqId() string {
	if x != nil {
		return x.SeqId
	}
	return ""
}

type GetPointAlarmStatusEventLogOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*PointAlarmStatusEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *GetPointAlarmStatusEventLogOutput) Reset() {
	*x = GetPointAlarmStatusEventLogOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPointAlarmStatusEventLogOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPointAlarmStatusEventLogOutput) ProtoMessage() {}

func (x *GetPointAlarmStatusEventLogOutput) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPointAlarmStatusEventLogOutput.ProtoReflect.Descriptor instead.
func (*GetPointAlarmStatusEventLogOutput) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{17}
}

func (x *GetPointAlarmStatusEventLogOutput) GetEvents() []*PointAlarmStatusEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

// CalculateAndSetPointAlarmStatusInput
type CalculateAndSetPointAlarmStatusInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId   string    `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeData *NodeData `protobuf:"bytes,2,opt,name=node_data,json=nodeData,proto3" json:"node_data,omitempty"`
}

func (x *CalculateAndSetPointAlarmStatusInput) Reset() {
	*x = CalculateAndSetPointAlarmStatusInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateAndSetPointAlarmStatusInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateAndSetPointAlarmStatusInput) ProtoMessage() {}

func (x *CalculateAndSetPointAlarmStatusInput) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateAndSetPointAlarmStatusInput.ProtoReflect.Descriptor instead.
func (*CalculateAndSetPointAlarmStatusInput) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{18}
}

func (x *CalculateAndSetPointAlarmStatusInput) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *CalculateAndSetPointAlarmStatusInput) GetNodeData() *NodeData {
	if x != nil {
		return x.NodeData
	}
	return nil
}

type DoubleObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DoubleObject) Reset() {
	*x = DoubleObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleObject) ProtoMessage() {}

func (x *DoubleObject) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleObject.ProtoReflect.Descriptor instead.
func (*DoubleObject) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{19}
}

func (x *DoubleObject) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Overall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OuterHigh *DoubleObject `protobuf:"bytes,1,opt,name=outer_high,json=outerHigh,proto3" json:"outer_high,omitempty"`
	InnerHigh *DoubleObject `protobuf:"bytes,2,opt,name=inner_high,json=innerHigh,proto3" json:"inner_high,omitempty"`
	InnerLow  *DoubleObject `protobuf:"bytes,3,opt,name=inner_low,json=innerLow,proto3" json:"inner_low,omitempty"`
	OuterLow  *DoubleObject `protobuf:"bytes,4,opt,name=outer_low,json=outerLow,proto3" json:"outer_low,omitempty"`
	Unit      string        `protobuf:"bytes,5,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *Overall) Reset() {
	*x = Overall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Overall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Overall) ProtoMessage() {}

func (x *Overall) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Overall.ProtoReflect.Descriptor instead.
func (*Overall) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{20}
}

func (x *Overall) GetOuterHigh() *DoubleObject {
	if x != nil {
		return x.OuterHigh
	}
	return nil
}

func (x *Overall) GetInnerHigh() *DoubleObject {
	if x != nil {
		return x.InnerHigh
	}
	return nil
}

func (x *Overall) GetInnerLow() *DoubleObject {
	if x != nil {
		return x.InnerLow
	}
	return nil
}

func (x *Overall) GetOuterLow() *DoubleObject {
	if x != nil {
		return x.OuterLow
	}
	return nil
}

func (x *Overall) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type Inspection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Choices []*InspectionChoice `protobuf:"bytes,1,rep,name=choices,proto3" json:"choices,omitempty"`
}

func (x *Inspection) Reset() {
	*x = Inspection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Inspection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inspection) ProtoMessage() {}

func (x *Inspection) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inspection.ProtoReflect.Descriptor instead.
func (*Inspection) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{21}
}

func (x *Inspection) GetChoices() []*InspectionChoice {
	if x != nil {
		return x.Choices
	}
	return nil
}

type InspectionChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer      string      `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	Instruction string      `protobuf:"bytes,2,opt,name=instruction,proto3" json:"instruction,omitempty"`
	Status      AlarmStatus `protobuf:"varint,3,opt,name=status,proto3,enum=pasapi.AlarmStatus" json:"status,omitempty"`
}

func (x *InspectionChoice) Reset() {
	*x = InspectionChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InspectionChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectionChoice) ProtoMessage() {}

func (x *InspectionChoice) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectionChoice.ProtoReflect.Descriptor instead.
func (*InspectionChoice) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{22}
}

func (x *InspectionChoice) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *InspectionChoice) GetInstruction() string {
	if x != nil {
		return x.Instruction
	}
	return ""
}

func (x *InspectionChoice) GetStatus() AlarmStatus {
	if x != nil {
		return x.Status
	}
	return AlarmStatus_NOT_CONFIGURED
}

type BandAlarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label            string                     `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	MinFrequency     *Frequency                 `protobuf:"bytes,2,opt,name=min_frequency,json=minFrequency,proto3" json:"min_frequency,omitempty"`
	MaxFrequency     *Frequency                 `protobuf:"bytes,3,opt,name=max_frequency,json=maxFrequency,proto3" json:"max_frequency,omitempty"`
	OverallThreshold *BandAlarmOverallThreshold `protobuf:"bytes,4,opt,name=overall_threshold,json=overallThreshold,proto3" json:"overall_threshold,omitempty"`
}

func (x *BandAlarm) Reset() {
	*x = BandAlarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BandAlarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BandAlarm) ProtoMessage() {}

func (x *BandAlarm) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BandAlarm.ProtoReflect.Descriptor instead.
func (*BandAlarm) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{23}
}

func (x *BandAlarm) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *BandAlarm) GetMinFrequency() *Frequency {
	if x != nil {
		return x.MinFrequency
	}
	return nil
}

func (x *BandAlarm) GetMaxFrequency() *Frequency {
	if x != nil {
		return x.MaxFrequency
	}
	return nil
}

func (x *BandAlarm) GetOverallThreshold() *BandAlarmOverallThreshold {
	if x != nil {
		return x.OverallThreshold
	}
	return nil
}

type Frequency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueType Frequency_FrequencyType `protobuf:"varint,1,opt,name=value_type,json=valueType,proto3,enum=pasapi.Frequency_FrequencyType" json:"value_type,omitempty"`
	Value     *DoubleObject           `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Frequency) Reset() {
	*x = Frequency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frequency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frequency) ProtoMessage() {}

func (x *Frequency) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frequency.ProtoReflect.Descriptor instead.
func (*Frequency) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{24}
}

func (x *Frequency) GetValueType() Frequency_FrequencyType {
	if x != nil {
		return x.ValueType
	}
	return Frequency_UNKNOWN
}

func (x *Frequency) GetValue() *DoubleObject {
	if x != nil {
		return x.Value
	}
	return nil
}

type BandAlarmOverallThreshold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpperAlert  *ThresholdValue `protobuf:"bytes,1,opt,name=upper_alert,json=upperAlert,proto3" json:"upper_alert,omitempty"`
	UpperDanger *ThresholdValue `protobuf:"bytes,2,opt,name=upper_danger,json=upperDanger,proto3" json:"upper_danger,omitempty"`
}

func (x *BandAlarmOverallThreshold) Reset() {
	*x = BandAlarmOverallThreshold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BandAlarmOverallThreshold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BandAlarmOverallThreshold) ProtoMessage() {}

func (x *BandAlarmOverallThreshold) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BandAlarmOverallThreshold.ProtoReflect.Descriptor instead.
func (*BandAlarmOverallThreshold) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{25}
}

func (x *BandAlarmOverallThreshold) GetUpperAlert() *ThresholdValue {
	if x != nil {
		return x.UpperAlert
	}
	return nil
}

func (x *BandAlarmOverallThreshold) GetUpperDanger() *ThresholdValue {
	if x != nil {
		return x.UpperDanger
	}
	return nil
}

type ThresholdValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueType ThresholdValue_ThresholdValueType `protobuf:"varint,1,opt,name=value_type,json=valueType,proto3,enum=pasapi.ThresholdValue_ThresholdValueType" json:"value_type,omitempty"`
	Value     *DoubleObject                     `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ThresholdValue) Reset() {
	*x = ThresholdValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pas_grpcapi_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThresholdValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThresholdValue) ProtoMessage() {}

func (x *ThresholdValue) ProtoReflect() protoreflect.Message {
	mi := &file_pas_grpcapi_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThresholdValue.ProtoReflect.Descriptor instead.
func (*ThresholdValue) Descriptor() ([]byte, []int) {
	return file_pas_grpcapi_proto_rawDescGZIP(), []int{26}
}

func (x *ThresholdValue) GetValueType() ThresholdValue_ThresholdValueType {
	if x != nil {
		return x.ValueType
	}
	return ThresholdValue_UNKNOWN
}

func (x *ThresholdValue) GetValue() *DoubleObject {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_pas_grpcapi_proto protoreflect.FileDescriptor

var file_pas_grpcapi_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x61, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x1a, 0x13, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x26, 0x0a, 0x0e, 0x44, 0x65, 0x65, 0x70, 0x50, 0x69, 0x6e, 0x67, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe7, 0x02, 0x0a, 0x08, 0x4e, 0x6f, 0x64,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x61, 0x73,
	0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x61, 0x74,
	0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x74, 0x72,
	0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x72, 0x75, 0x6d, 0x12, 0x33, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x73, 0x61,
	0x70, 0x69, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x28, 0x0a,
	0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x76, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x07,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x56, 0x32, 0x12, 0x29, 0x0a, 0x10, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x73, 0x22, 0x28, 0x0a, 0x0a, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x22, 0x6d, 0x0a, 0x09,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x78, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x78,
	0x55, 0x6e, 0x69, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x08,
	0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x15,
	0x0a, 0x06, 0x78, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x78, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x72,
	0x70, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x70, 0x65, 0x65, 0x64, 0x52,
	0x70, 0x6d, 0x22, 0x70, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x34, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x78, 0x5f, 0x75, 0x6e, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x78, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x79,
	0x55, 0x6e, 0x69, 0x74, 0x22, 0x54, 0x0a, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x61,
	0x73, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x22, 0xea, 0x02, 0x0a, 0x1b, 0x53,
	0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x61, 0x73,
	0x61, 0x70, 0x69, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x6f, 0x76, 0x65, 0x72, 0x61,
	0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70,
	0x69, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x52, 0x07, 0x6f, 0x76, 0x65, 0x72, 0x61,
	0x6c, 0x6c, 0x12, 0x26, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x0a, 0x69, 0x6e,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32,
	0x0a, 0x0b, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x6e,
	0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x64, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x09, 0x66, 0x75,
	0x6c, 0x6c, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x36, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22,
	0xfb, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x6f,
	0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x52, 0x07, 0x6f,
	0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x73,
	0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x75,
	0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x66, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x62, 0x61, 0x6e,
	0x64, 0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x6e, 0x64, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x22, 0x93, 0x01,
	0x0a, 0x18, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0c, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x73, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x22, 0x1b, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x33, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x36, 0x0a, 0x0c, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x15, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x39, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x21, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x35, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x6e, 0x0a, 0x24, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x73,
	0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6e, 0x6f,
	0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x24, 0x0a, 0x0c, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xed, 0x01, 0x0a,
	0x07, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x12, 0x33, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x48, 0x69, 0x67, 0x68, 0x12, 0x33, 0x0a,
	0x0a, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x09, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x48, 0x69,
	0x67, 0x68, 0x12, 0x31, 0x0a, 0x09, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x77, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x4c, 0x6f, 0x77, 0x12, 0x31, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x6c,
	0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x40, 0x0a, 0x0a,
	0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x61,
	0x73, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x22, 0x79,
	0x0a, 0x10, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70,
	0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xe1, 0x01, 0x0a, 0x09, 0x42, 0x61,
	0x6e, 0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x36, 0x0a,
	0x0d, 0x6d, 0x69, 0x6e, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x46, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x52,
	0x0c, 0x6d, 0x61, 0x78, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x4e, 0x0a,
	0x11, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70,
	0x69, 0x2e, 0x42, 0x61, 0x6e, 0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x61,
	0x6c, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x52, 0x10, 0x6f, 0x76, 0x65,
	0x72, 0x61, 0x6c, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0xb4, 0x01,
	0x0a, 0x09, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x3e, 0x0a, 0x0a, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x79, 0x2e, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x73,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x0d, 0x46, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x49, 0x58, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x53, 0x50, 0x45, 0x45, 0x44, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x50,
	0x4c, 0x45, 0x10, 0x02, 0x22, 0x8f, 0x01, 0x0a, 0x19, 0x42, 0x61, 0x6e, 0x64, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x12, 0x37, 0x0a, 0x0b, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69,
	0x2e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0a, 0x75, 0x70, 0x70, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x75,
	0x70, 0x70, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x75, 0x70, 0x70, 0x65, 0x72,
	0x44, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x22, 0xcf, 0x01, 0x0a, 0x0e, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e,
	0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x47, 0x0a, 0x12, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x42, 0x53, 0x4f, 0x4c, 0x55, 0x54, 0x45, 0x10, 0x01,
	0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x46, 0x55, 0x4c,
	0x4c, 0x53, 0x43, 0x41, 0x4c, 0x45, 0x10, 0x02, 0x2a, 0x7f, 0x0a, 0x13, 0x4e, 0x6f, 0x64, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x53, 0x50, 0x45, 0x43, 0x54, 0x52, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x49,
	0x4d, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x49, 0x45, 0x53, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x54, 0x45, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x56,
	0x32, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x41, 0x4e, 0x53, 0x57, 0x45, 0x52, 0x53, 0x10, 0x06, 0x2a, 0x55, 0x0a, 0x09, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x57, 0x41, 0x56,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x4a, 0x50, 0x45, 0x47,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x4e, 0x47, 0x10,
	0x03, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x4d, 0x50, 0x34, 0x10, 0x04,
	0x2a, 0x4f, 0x0a, 0x0b, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x47, 0x4f, 0x4f, 0x44, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x4c,
	0x45, 0x52, 0x54, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x41, 0x4e, 0x47, 0x45, 0x52, 0x10,
	0x04, 0x2a, 0x5b, 0x0a, 0x0d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x4f, 0x56, 0x45, 0x52, 0x41, 0x4c, 0x4c, 0x5f, 0x49, 0x4e, 0x5f, 0x57, 0x49, 0x4e, 0x44, 0x4f,
	0x57, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x56, 0x45, 0x52, 0x41, 0x4c, 0x4c, 0x5f, 0x4f,
	0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x10, 0x02, 0x12, 0x0e,
	0x0a, 0x0a, 0x49, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x32, 0xa7,
	0x05, 0x0a, 0x10, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x44, 0x65, 0x65, 0x70, 0x50, 0x69, 0x6e, 0x67, 0x12,
	0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x1a, 0x16, 0x2e,
	0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x65, 0x70, 0x50, 0x69, 0x6e, 0x67, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x12, 0x23, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x65,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x23, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24, 0x2e,
	0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x2e, 0x70,
	0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x21,
	0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x61, 0x73,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x21, 0x2e, 0x70,
	0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x00, 0x12, 0x74, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67,
	0x12, 0x28, 0x2e, 0x70, 0x61, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x61, 0x73,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x1f, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x2e, 0x70, 0x61, 0x73,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64,
	0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x42, 0x30, 0x5a, 0x18, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x4b, 0x46, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x70, 0x61, 0x73, 0xaa, 0x02, 0x13, 0x53, 0x4b, 0x46, 0x2e, 0x45, 0x6e, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x50, 0x41, 0x53, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pas_grpcapi_proto_rawDescOnce sync.Once
	file_pas_grpcapi_proto_rawDescData = file_pas_grpcapi_proto_rawDesc
)

func file_pas_grpcapi_proto_rawDescGZIP() []byte {
	file_pas_grpcapi_proto_rawDescOnce.Do(func() {
		file_pas_grpcapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_pas_grpcapi_proto_rawDescData)
	})
	return file_pas_grpcapi_proto_rawDescData
}

var file_pas_grpcapi_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_pas_grpcapi_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_pas_grpcapi_proto_goTypes = []interface{}{
	(NodeDataContentType)(0),                     // 0: pasapi.NodeDataContentType
	(MediaType)(0),                               // 1: pasapi.MediaType
	(AlarmStatus)(0),                             // 2: pasapi.AlarmStatus
	(ThresholdType)(0),                           // 3: pasapi.ThresholdType
	(Frequency_FrequencyType)(0),                 // 4: pasapi.Frequency.FrequencyType
	(ThresholdValue_ThresholdValueType)(0),       // 5: pasapi.ThresholdValue.ThresholdValueType
	(*DeepPingOutput)(nil),                       // 6: pasapi.DeepPingOutput
	(*NodeData)(nil),                             // 7: pasapi.NodeData
	(*Coordinate)(nil),                           // 8: pasapi.Coordinate
	(*DataPoint)(nil),                            // 9: pasapi.DataPoint
	(*Spectrum)(nil),                             // 10: pasapi.Spectrum
	(*TimeSeries)(nil),                           // 11: pasapi.TimeSeries
	(*Media)(nil),                                // 12: pasapi.Media
	(*SetPointAlarmThresholdInput)(nil),          // 13: pasapi.SetPointAlarmThresholdInput
	(*SetPointAlarmThresholdOutput)(nil),         // 14: pasapi.SetPointAlarmThresholdOutput
	(*GetPointAlarmThresholdInput)(nil),          // 15: pasapi.GetPointAlarmThresholdInput
	(*GetPointAlarmThresholdOutput)(nil),         // 16: pasapi.GetPointAlarmThresholdOutput
	(*SetPointAlarmStatusInput)(nil),             // 17: pasapi.SetPointAlarmStatusInput
	(*SetPointAlarmStatusOutput)(nil),            // 18: pasapi.SetPointAlarmStatusOutput
	(*GetPointAlarmStatusInput)(nil),             // 19: pasapi.GetPointAlarmStatusInput
	(*GetPointAlarmStatusOutput)(nil),            // 20: pasapi.GetPointAlarmStatusOutput
	(*PointAlarmStatusEvent)(nil),                // 21: pasapi.PointAlarmStatusEvent
	(*GetPointAlarmStatusEventLogInput)(nil),     // 22: pasapi.GetPointAlarmStatusEventLogInput
	(*GetPointAlarmStatusEventLogOutput)(nil),    // 23: pasapi.GetPointAlarmStatusEventLogOutput
	(*CalculateAndSetPointAlarmStatusInput)(nil), // 24: pasapi.CalculateAndSetPointAlarmStatusInput
	(*DoubleObject)(nil),                         // 25: pasapi.DoubleObject
	(*Overall)(nil),                              // 26: pasapi.Overall
	(*Inspection)(nil),                           // 27: pasapi.Inspection
	(*InspectionChoice)(nil),                     // 28: pasapi.InspectionChoice
	(*BandAlarm)(nil),                            // 29: pasapi.BandAlarm
	(*Frequency)(nil),                            // 30: pasapi.Frequency
	(*BandAlarmOverallThreshold)(nil),            // 31: pasapi.BandAlarmOverallThreshold
	(*ThresholdValue)(nil),                       // 32: pasapi.ThresholdValue
	(*common.Origin)(nil),                        // 33: common.Origin
	(*common.Void)(nil),                          // 34: common.Void
}
var file_pas_grpcapi_proto_depIdxs = []int32{
	0,  // 0: pasapi.NodeData.content_type:type_name -> pasapi.NodeDataContentType
	9,  // 1: pasapi.NodeData.data_point:type_name -> pasapi.DataPoint
	10, // 2: pasapi.NodeData.spectrum:type_name -> pasapi.Spectrum
	11, // 3: pasapi.NodeData.time_series:type_name -> pasapi.TimeSeries
	12, // 4: pasapi.NodeData.media_v2:type_name -> pasapi.Media
	8,  // 5: pasapi.DataPoint.coordinate:type_name -> pasapi.Coordinate
	8,  // 6: pasapi.Spectrum.coordinates:type_name -> pasapi.Coordinate
	8,  // 7: pasapi.TimeSeries.coordinates:type_name -> pasapi.Coordinate
	1,  // 8: pasapi.Media.type:type_name -> pasapi.MediaType
	3,  // 9: pasapi.SetPointAlarmThresholdInput.type:type_name -> pasapi.ThresholdType
	26, // 10: pasapi.SetPointAlarmThresholdInput.overall:type_name -> pasapi.Overall
	33, // 11: pasapi.SetPointAlarmThresholdInput.origin:type_name -> common.Origin
	27, // 12: pasapi.SetPointAlarmThresholdInput.inspection:type_name -> pasapi.Inspection
	29, // 13: pasapi.SetPointAlarmThresholdInput.band_alarms:type_name -> pasapi.BandAlarm
	25, // 14: pasapi.SetPointAlarmThresholdInput.full_scale:type_name -> pasapi.DoubleObject
	3,  // 15: pasapi.GetPointAlarmThresholdOutput.type:type_name -> pasapi.ThresholdType
	26, // 16: pasapi.GetPointAlarmThresholdOutput.overall:type_name -> pasapi.Overall
	27, // 17: pasapi.GetPointAlarmThresholdOutput.inspection:type_name -> pasapi.Inspection
	29, // 18: pasapi.GetPointAlarmThresholdOutput.band_alarms:type_name -> pasapi.BandAlarm
	2,  // 19: pasapi.SetPointAlarmStatusInput.alarm_status:type_name -> pasapi.AlarmStatus
	33, // 20: pasapi.SetPointAlarmStatusInput.origin:type_name -> common.Origin
	2,  // 21: pasapi.GetPointAlarmStatusOutput.alarm_status:type_name -> pasapi.AlarmStatus
	2,  // 22: pasapi.PointAlarmStatusEvent.status:type_name -> pasapi.AlarmStatus
	21, // 23: pasapi.GetPointAlarmStatusEventLogOutput.events:type_name -> pasapi.PointAlarmStatusEvent
	7,  // 24: pasapi.CalculateAndSetPointAlarmStatusInput.node_data:type_name -> pasapi.NodeData
	25, // 25: pasapi.Overall.outer_high:type_name -> pasapi.DoubleObject
	25, // 26: pasapi.Overall.inner_high:type_name -> pasapi.DoubleObject
	25, // 27: pasapi.Overall.inner_low:type_name -> pasapi.DoubleObject
	25, // 28: pasapi.Overall.outer_low:type_name -> pasapi.DoubleObject
	28, // 29: pasapi.Inspection.choices:type_name -> pasapi.InspectionChoice
	2,  // 30: pasapi.InspectionChoice.status:type_name -> pasapi.AlarmStatus
	30, // 31: pasapi.BandAlarm.min_frequency:type_name -> pasapi.Frequency
	30, // 32: pasapi.BandAlarm.max_frequency:type_name -> pasapi.Frequency
	31, // 33: pasapi.BandAlarm.overall_threshold:type_name -> pasapi.BandAlarmOverallThreshold
	4,  // 34: pasapi.Frequency.value_type:type_name -> pasapi.Frequency.FrequencyType
	25, // 35: pasapi.Frequency.value:type_name -> pasapi.DoubleObject
	32, // 36: pasapi.BandAlarmOverallThreshold.upper_alert:type_name -> pasapi.ThresholdValue
	32, // 37: pasapi.BandAlarmOverallThreshold.upper_danger:type_name -> pasapi.ThresholdValue
	5,  // 38: pasapi.ThresholdValue.value_type:type_name -> pasapi.ThresholdValue.ThresholdValueType
	25, // 39: pasapi.ThresholdValue.value:type_name -> pasapi.DoubleObject
	34, // 40: pasapi.PointAlarmStatus.DeepPing:input_type -> common.Void
	13, // 41: pasapi.PointAlarmStatus.SetPointAlarmThreshold:input_type -> pasapi.SetPointAlarmThresholdInput
	15, // 42: pasapi.PointAlarmStatus.GetPointAlarmThreshold:input_type -> pasapi.GetPointAlarmThresholdInput
	17, // 43: pasapi.PointAlarmStatus.SetPointAlarmStatus:input_type -> pasapi.SetPointAlarmStatusInput
	19, // 44: pasapi.PointAlarmStatus.GetPointAlarmStatus:input_type -> pasapi.GetPointAlarmStatusInput
	22, // 45: pasapi.PointAlarmStatus.GetPointAlarmStatusEventLog:input_type -> pasapi.GetPointAlarmStatusEventLogInput
	24, // 46: pasapi.PointAlarmStatus.CalculateAndSetPointAlarmStatus:input_type -> pasapi.CalculateAndSetPointAlarmStatusInput
	6,  // 47: pasapi.PointAlarmStatus.DeepPing:output_type -> pasapi.DeepPingOutput
	14, // 48: pasapi.PointAlarmStatus.SetPointAlarmThreshold:output_type -> pasapi.SetPointAlarmThresholdOutput
	16, // 49: pasapi.PointAlarmStatus.GetPointAlarmThreshold:output_type -> pasapi.GetPointAlarmThresholdOutput
	18, // 50: pasapi.PointAlarmStatus.SetPointAlarmStatus:output_type -> pasapi.SetPointAlarmStatusOutput
	20, // 51: pasapi.PointAlarmStatus.GetPointAlarmStatus:output_type -> pasapi.GetPointAlarmStatusOutput
	23, // 52: pasapi.PointAlarmStatus.GetPointAlarmStatusEventLog:output_type -> pasapi.GetPointAlarmStatusEventLogOutput
	34, // 53: pasapi.PointAlarmStatus.CalculateAndSetPointAlarmStatus:output_type -> common.Void
	47, // [47:54] is the sub-list for method output_type
	40, // [40:47] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_pas_grpcapi_proto_init() }
func file_pas_grpcapi_proto_init() {
	if File_pas_grpcapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pas_grpcapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeepPingOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coordinate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spectrum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSeries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Media); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPointAlarmThresholdInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPointAlarmThresholdOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPointAlarmThresholdInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPointAlarmThresholdOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPointAlarmStatusInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPointAlarmStatusOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPointAlarmStatusInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPointAlarmStatusOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointAlarmStatusEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPointAlarmStatusEventLogInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPointAlarmStatusEventLogOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateAndSetPointAlarmStatusInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoubleObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Overall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Inspection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InspectionChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BandAlarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frequency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BandAlarmOverallThreshold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pas_grpcapi_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThresholdValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pas_grpcapi_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pas_grpcapi_proto_goTypes,
		DependencyIndexes: file_pas_grpcapi_proto_depIdxs,
		EnumInfos:         file_pas_grpcapi_proto_enumTypes,
		MessageInfos:      file_pas_grpcapi_proto_msgTypes,
	}.Build()
	File_pas_grpcapi_proto = out.File
	file_pas_grpcapi_proto_rawDesc = nil
	file_pas_grpcapi_proto_goTypes = nil
	file_pas_grpcapi_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PointAlarmStatusClient is the client API for PointAlarmStatus service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PointAlarmStatusClient interface {
	DeepPing(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*DeepPingOutput, error)
	SetPointAlarmThreshold(ctx context.Context, in *SetPointAlarmThresholdInput, opts ...grpc.CallOption) (*SetPointAlarmThresholdOutput, error)
	GetPointAlarmThreshold(ctx context.Context, in *GetPointAlarmThresholdInput, opts ...grpc.CallOption) (*GetPointAlarmThresholdOutput, error)
	SetPointAlarmStatus(ctx context.Context, in *SetPointAlarmStatusInput, opts ...grpc.CallOption) (*SetPointAlarmStatusOutput, error)
	GetPointAlarmStatus(ctx context.Context, in *GetPointAlarmStatusInput, opts ...grpc.CallOption) (*GetPointAlarmStatusOutput, error)
	GetPointAlarmStatusEventLog(ctx context.Context, in *GetPointAlarmStatusEventLogInput, opts ...grpc.CallOption) (*GetPointAlarmStatusEventLogOutput, error)
	CalculateAndSetPointAlarmStatus(ctx context.Context, in *CalculateAndSetPointAlarmStatusInput, opts ...grpc.CallOption) (*common.Void, error)
}

type pointAlarmStatusClient struct {
	cc grpc.ClientConnInterface
}

func NewPointAlarmStatusClient(cc grpc.ClientConnInterface) PointAlarmStatusClient {
	return &pointAlarmStatusClient{cc}
}

func (c *pointAlarmStatusClient) DeepPing(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*DeepPingOutput, error) {
	out := new(DeepPingOutput)
	err := c.cc.Invoke(ctx, "/pasapi.PointAlarmStatus/DeepPing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointAlarmStatusClient) SetPointAlarmThreshold(ctx context.Context, in *SetPointAlarmThresholdInput, opts ...grpc.CallOption) (*SetPointAlarmThresholdOutput, error) {
	out := new(SetPointAlarmThresholdOutput)
	err := c.cc.Invoke(ctx, "/pasapi.PointAlarmStatus/SetPointAlarmThreshold", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointAlarmStatusClient) GetPointAlarmThreshold(ctx context.Context, in *GetPointAlarmThresholdInput, opts ...grpc.CallOption) (*GetPointAlarmThresholdOutput, error) {
	out := new(GetPointAlarmThresholdOutput)
	err := c.cc.Invoke(ctx, "/pasapi.PointAlarmStatus/GetPointAlarmThreshold", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointAlarmStatusClient) SetPointAlarmStatus(ctx context.Context, in *SetPointAlarmStatusInput, opts ...grpc.CallOption) (*SetPointAlarmStatusOutput, error) {
	out := new(SetPointAlarmStatusOutput)
	err := c.cc.Invoke(ctx, "/pasapi.PointAlarmStatus/SetPointAlarmStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointAlarmStatusClient) GetPointAlarmStatus(ctx context.Context, in *GetPointAlarmStatusInput, opts ...grpc.CallOption) (*GetPointAlarmStatusOutput, error) {
	out := new(GetPointAlarmStatusOutput)
	err := c.cc.Invoke(ctx, "/pasapi.PointAlarmStatus/GetPointAlarmStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointAlarmStatusClient) GetPointAlarmStatusEventLog(ctx context.Context, in *GetPointAlarmStatusEventLogInput, opts ...grpc.CallOption) (*GetPointAlarmStatusEventLogOutput, error) {
	out := new(GetPointAlarmStatusEventLogOutput)
	err := c.cc.Invoke(ctx, "/pasapi.PointAlarmStatus/GetPointAlarmStatusEventLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointAlarmStatusClient) CalculateAndSetPointAlarmStatus(ctx context.Context, in *CalculateAndSetPointAlarmStatusInput, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/pasapi.PointAlarmStatus/CalculateAndSetPointAlarmStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PointAlarmStatusServer is the server API for PointAlarmStatus service.
type PointAlarmStatusServer interface {
	DeepPing(context.Context, *common.Void) (*DeepPingOutput, error)
	SetPointAlarmThreshold(context.Context, *SetPointAlarmThresholdInput) (*SetPointAlarmThresholdOutput, error)
	GetPointAlarmThreshold(context.Context, *GetPointAlarmThresholdInput) (*GetPointAlarmThresholdOutput, error)
	SetPointAlarmStatus(context.Context, *SetPointAlarmStatusInput) (*SetPointAlarmStatusOutput, error)
	GetPointAlarmStatus(context.Context, *GetPointAlarmStatusInput) (*GetPointAlarmStatusOutput, error)
	GetPointAlarmStatusEventLog(context.Context, *GetPointAlarmStatusEventLogInput) (*GetPointAlarmStatusEventLogOutput, error)
	CalculateAndSetPointAlarmStatus(context.Context, *CalculateAndSetPointAlarmStatusInput) (*common.Void, error)
}

// UnimplementedPointAlarmStatusServer can be embedded to have forward compatible implementations.
type UnimplementedPointAlarmStatusServer struct {
}

func (*UnimplementedPointAlarmStatusServer) DeepPing(context.Context, *common.Void) (*DeepPingOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeepPing not implemented")
}
func (*UnimplementedPointAlarmStatusServer) SetPointAlarmThreshold(context.Context, *SetPointAlarmThresholdInput) (*SetPointAlarmThresholdOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPointAlarmThreshold not implemented")
}
func (*UnimplementedPointAlarmStatusServer) GetPointAlarmThreshold(context.Context, *GetPointAlarmThresholdInput) (*GetPointAlarmThresholdOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPointAlarmThreshold not implemented")
}
func (*UnimplementedPointAlarmStatusServer) SetPointAlarmStatus(context.Context, *SetPointAlarmStatusInput) (*SetPointAlarmStatusOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPointAlarmStatus not implemented")
}
func (*UnimplementedPointAlarmStatusServer) GetPointAlarmStatus(context.Context, *GetPointAlarmStatusInput) (*GetPointAlarmStatusOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPointAlarmStatus not implemented")
}
func (*UnimplementedPointAlarmStatusServer) GetPointAlarmStatusEventLog(context.Context, *GetPointAlarmStatusEventLogInput) (*GetPointAlarmStatusEventLogOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPointAlarmStatusEventLog not implemented")
}
func (*UnimplementedPointAlarmStatusServer) CalculateAndSetPointAlarmStatus(context.Context, *CalculateAndSetPointAlarmStatusInput) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalculateAndSetPointAlarmStatus not implemented")
}

func RegisterPointAlarmStatusServer(s *grpc.Server, srv PointAlarmStatusServer) {
	s.RegisterService(&_PointAlarmStatus_serviceDesc, srv)
}

func _PointAlarmStatus_DeepPing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointAlarmStatusServer).DeepPing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pasapi.PointAlarmStatus/DeepPing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointAlarmStatusServer).DeepPing(ctx, req.(*common.Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _PointAlarmStatus_SetPointAlarmThreshold_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPointAlarmThresholdInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointAlarmStatusServer).SetPointAlarmThreshold(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pasapi.PointAlarmStatus/SetPointAlarmThreshold",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointAlarmStatusServer).SetPointAlarmThreshold(ctx, req.(*SetPointAlarmThresholdInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _PointAlarmStatus_GetPointAlarmThreshold_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPointAlarmThresholdInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointAlarmStatusServer).GetPointAlarmThreshold(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pasapi.PointAlarmStatus/GetPointAlarmThreshold",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointAlarmStatusServer).GetPointAlarmThreshold(ctx, req.(*GetPointAlarmThresholdInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _PointAlarmStatus_SetPointAlarmStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPointAlarmStatusInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointAlarmStatusServer).SetPointAlarmStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pasapi.PointAlarmStatus/SetPointAlarmStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointAlarmStatusServer).SetPointAlarmStatus(ctx, req.(*SetPointAlarmStatusInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _PointAlarmStatus_GetPointAlarmStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPointAlarmStatusInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointAlarmStatusServer).GetPointAlarmStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pasapi.PointAlarmStatus/GetPointAlarmStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointAlarmStatusServer).GetPointAlarmStatus(ctx, req.(*GetPointAlarmStatusInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _PointAlarmStatus_GetPointAlarmStatusEventLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPointAlarmStatusEventLogInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointAlarmStatusServer).GetPointAlarmStatusEventLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pasapi.PointAlarmStatus/GetPointAlarmStatusEventLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointAlarmStatusServer).GetPointAlarmStatusEventLog(ctx, req.(*GetPointAlarmStatusEventLogInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _PointAlarmStatus_CalculateAndSetPointAlarmStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculateAndSetPointAlarmStatusInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointAlarmStatusServer).CalculateAndSetPointAlarmStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pasapi.PointAlarmStatus/CalculateAndSetPointAlarmStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointAlarmStatusServer).CalculateAndSetPointAlarmStatus(ctx, req.(*CalculateAndSetPointAlarmStatusInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _PointAlarmStatus_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pasapi.PointAlarmStatus",
	HandlerType: (*PointAlarmStatusServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeepPing",
			Handler:    _PointAlarmStatus_DeepPing_Handler,
		},
		{
			MethodName: "SetPointAlarmThreshold",
			Handler:    _PointAlarmStatus_SetPointAlarmThreshold_Handler,
		},
		{
			MethodName: "GetPointAlarmThreshold",
			Handler:    _PointAlarmStatus_GetPointAlarmThreshold_Handler,
		},
		{
			MethodName: "SetPointAlarmStatus",
			Handler:    _PointAlarmStatus_SetPointAlarmStatus_Handler,
		},
		{
			MethodName: "GetPointAlarmStatus",
			Handler:    _PointAlarmStatus_GetPointAlarmStatus_Handler,
		},
		{
			MethodName: "GetPointAlarmStatusEventLog",
			Handler:    _PointAlarmStatus_GetPointAlarmStatusEventLog_Handler,
		},
		{
			MethodName: "CalculateAndSetPointAlarmStatus",
			Handler:    _PointAlarmStatus_CalculateAndSetPointAlarmStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pas/grpcapi.proto",
}
