# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import mhubapi_pb2 as mhubapi__pb2


class MicrologProxyHubStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.DeepPing = channel.unary_unary(
        '/mhubapi.MicrologProxyHub/DeepPing',
        request_serializer=mhubapi__pb2.Void.SerializeToString,
        response_deserializer=mhubapi__pb2.DeepPingOutput.FromString,
        )
    self.SetTaskStatus = channel.unary_unary(
        '/mhubapi.MicrologProxyHub/SetTaskStatus',
        request_serializer=mhubapi__pb2.SetTaskStatusInput.SerializeToString,
        response_deserializer=mhubapi__pb2.Void.FromString,
        )
    self.AvailableDSKFStream = channel.unary_stream(
        '/mhubapi.MicrologProxyHub/AvailableDSKFStream',
        request_serializer=mhubapi__pb2.AvailableDSKFStreamInput.SerializeToString,
        response_deserializer=mhubapi__pb2.AvailableDSKFStreamOutput.FromString,
        )


class MicrologProxyHubServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def DeepPing(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetTaskStatus(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AvailableDSKFStream(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MicrologProxyHubServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'DeepPing': grpc.unary_unary_rpc_method_handler(
          servicer.DeepPing,
          request_deserializer=mhubapi__pb2.Void.FromString,
          response_serializer=mhubapi__pb2.DeepPingOutput.SerializeToString,
      ),
      'SetTaskStatus': grpc.unary_unary_rpc_method_handler(
          servicer.SetTaskStatus,
          request_deserializer=mhubapi__pb2.SetTaskStatusInput.FromString,
          response_serializer=mhubapi__pb2.Void.SerializeToString,
      ),
      'AvailableDSKFStream': grpc.unary_stream_rpc_method_handler(
          servicer.AvailableDSKFStream,
          request_deserializer=mhubapi__pb2.AvailableDSKFStreamInput.FromString,
          response_serializer=mhubapi__pb2.AvailableDSKFStreamOutput.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'mhubapi.MicrologProxyHub', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
