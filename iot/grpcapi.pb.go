// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: iot/grpcapi.proto

package iot

import (
	context "context"
	common "github.com/SKF/proto/v2/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeEventType int32

const (
	NodeEventType_UNKNOWN_EVENT          NodeEventType = 0
	NodeEventType_CREATE_TASK_EVENT      NodeEventType = 1
	NodeEventType_SET_TASK_STATUS_EVENT  NodeEventType = 2
	NodeEventType_DELETE_TASK_EVENT      NodeEventType = 3
	NodeEventType_APPEND_NODE_DATA_EVENT NodeEventType = 4
)

// Enum value maps for NodeEventType.
var (
	NodeEventType_name = map[int32]string{
		0: "UNKNOWN_EVENT",
		1: "CREATE_TASK_EVENT",
		2: "SET_TASK_STATUS_EVENT",
		3: "DELETE_TASK_EVENT",
		4: "APPEND_NODE_DATA_EVENT",
	}
	NodeEventType_value = map[string]int32{
		"UNKNOWN_EVENT":          0,
		"CREATE_TASK_EVENT":      1,
		"SET_TASK_STATUS_EVENT":  2,
		"DELETE_TASK_EVENT":      3,
		"APPEND_NODE_DATA_EVENT": 4,
	}
)

func (x NodeEventType) Enum() *NodeEventType {
	p := new(NodeEventType)
	*p = x
	return p
}

func (x NodeEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_iot_grpcapi_proto_enumTypes[0].Descriptor()
}

func (NodeEventType) Type() protoreflect.EnumType {
	return &file_iot_grpcapi_proto_enumTypes[0]
}

func (x NodeEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeEventType.Descriptor instead.
func (NodeEventType) EnumDescriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{0}
}

type TaskStatus int32

const (
	TaskStatus_NOT_SENT            TaskStatus = 0
	TaskStatus_SENT                TaskStatus = 1
	TaskStatus_RECEIVED            TaskStatus = 2
	TaskStatus_COMPLETED           TaskStatus = 3
	TaskStatus_IN_PROGRESS         TaskStatus = 4
	TaskStatus_MISSED              TaskStatus = 5
	TaskStatus_PARTIALLY_COLLECTED TaskStatus = 6
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "NOT_SENT",
		1: "SENT",
		2: "RECEIVED",
		3: "COMPLETED",
		4: "IN_PROGRESS",
		5: "MISSED",
		6: "PARTIALLY_COLLECTED",
	}
	TaskStatus_value = map[string]int32{
		"NOT_SENT":            0,
		"SENT":                1,
		"RECEIVED":            2,
		"COMPLETED":           3,
		"IN_PROGRESS":         4,
		"MISSED":              5,
		"PARTIALLY_COLLECTED": 6,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_iot_grpcapi_proto_enumTypes[1].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_iot_grpcapi_proto_enumTypes[1]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{1}
}

type NodeDataContentType int32

const (
	NodeDataContentType_DEFAULT          NodeDataContentType = 0
	NodeDataContentType_DATA_POINT       NodeDataContentType = 1
	NodeDataContentType_SPECTRUM         NodeDataContentType = 2
	NodeDataContentType_TIME_SERIES      NodeDataContentType = 3
	NodeDataContentType_NOTE             NodeDataContentType = 4
	NodeDataContentType_MEDIA_V2         NodeDataContentType = 7
	NodeDataContentType_QUESTION_ANSWERS NodeDataContentType = 6
	NodeDataContentType_MISSING_VALUE    NodeDataContentType = 8
)

// Enum value maps for NodeDataContentType.
var (
	NodeDataContentType_name = map[int32]string{
		0: "DEFAULT",
		1: "DATA_POINT",
		2: "SPECTRUM",
		3: "TIME_SERIES",
		4: "NOTE",
		7: "MEDIA_V2",
		6: "QUESTION_ANSWERS",
		8: "MISSING_VALUE",
	}
	NodeDataContentType_value = map[string]int32{
		"DEFAULT":          0,
		"DATA_POINT":       1,
		"SPECTRUM":         2,
		"TIME_SERIES":      3,
		"NOTE":             4,
		"MEDIA_V2":         7,
		"QUESTION_ANSWERS": 6,
		"MISSING_VALUE":    8,
	}
)

func (x NodeDataContentType) Enum() *NodeDataContentType {
	p := new(NodeDataContentType)
	*p = x
	return p
}

func (x NodeDataContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeDataContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_iot_grpcapi_proto_enumTypes[2].Descriptor()
}

func (NodeDataContentType) Type() protoreflect.EnumType {
	return &file_iot_grpcapi_proto_enumTypes[2]
}

func (x NodeDataContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeDataContentType.Descriptor instead.
func (NodeDataContentType) EnumDescriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{2}
}

type MediaType int32

const (
	MediaType_UNKNOWN    MediaType = 0
	MediaType_AUDIO_WAV  MediaType = 1
	MediaType_IMAGE_JPEG MediaType = 2
	MediaType_IMAGE_PNG  MediaType = 3
	MediaType_AUDIO_MP4  MediaType = 4
)

// Enum value maps for MediaType.
var (
	MediaType_name = map[int32]string{
		0: "UNKNOWN",
		1: "AUDIO_WAV",
		2: "IMAGE_JPEG",
		3: "IMAGE_PNG",
		4: "AUDIO_MP4",
	}
	MediaType_value = map[string]int32{
		"UNKNOWN":    0,
		"AUDIO_WAV":  1,
		"IMAGE_JPEG": 2,
		"IMAGE_PNG":  3,
		"AUDIO_MP4":  4,
	}
)

func (x MediaType) Enum() *MediaType {
	p := new(MediaType)
	*p = x
	return p
}

func (x MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_iot_grpcapi_proto_enumTypes[3].Descriptor()
}

func (MediaType) Type() protoreflect.EnumType {
	return &file_iot_grpcapi_proto_enumTypes[3]
}

func (x MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaType.Descriptor instead.
func (MediaType) EnumDescriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{3}
}

type TaskDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TaskId                string                 `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskName              string                 `protobuf:"bytes,3,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	HierarchyId           string                 `protobuf:"bytes,4,opt,name=hierarchy_id,json=hierarchyId,proto3" json:"hierarchy_id,omitempty"`
	DueDateTimestamp      int64                  `protobuf:"varint,5,opt,name=due_date_timestamp,json=dueDateTimestamp,proto3" json:"due_date_timestamp,omitempty"`
	IsCompleted           bool                   `protobuf:"varint,6,opt,name=is_completed,json=isCompleted,proto3" json:"is_completed,omitempty"`
	FunctionalLocationIds *FunctionalLocationIds `protobuf:"bytes,7,opt,name=functional_location_ids,json=functionalLocationIds,proto3" json:"functional_location_ids,omitempty"`
	ExternalTaskId        string                 `protobuf:"bytes,9,opt,name=external_task_id,json=externalTaskId,proto3" json:"external_task_id,omitempty"`
	Status                TaskStatus             `protobuf:"varint,8,opt,name=status,proto3,enum=iot.TaskStatus" json:"status,omitempty"`
	StatusUpdatedAt       int64                  `protobuf:"varint,10,opt,name=status_updated_at,json=statusUpdatedAt,proto3" json:"status_updated_at,omitempty"` // ms
	LongId                int64                  `protobuf:"varint,11,opt,name=long_id,json=longId,proto3" json:"long_id,omitempty"`
	Nodes                 []*Node                `protobuf:"bytes,12,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *TaskDescription) Reset() {
	*x = TaskDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDescription) ProtoMessage() {}

func (x *TaskDescription) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDescription.ProtoReflect.Descriptor instead.
func (*TaskDescription) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{0}
}

func (x *TaskDescription) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TaskDescription) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskDescription) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *TaskDescription) GetHierarchyId() string {
	if x != nil {
		return x.HierarchyId
	}
	return ""
}

func (x *TaskDescription) GetDueDateTimestamp() int64 {
	if x != nil {
		return x.DueDateTimestamp
	}
	return 0
}

func (x *TaskDescription) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

func (x *TaskDescription) GetFunctionalLocationIds() *FunctionalLocationIds {
	if x != nil {
		return x.FunctionalLocationIds
	}
	return nil
}

func (x *TaskDescription) GetExternalTaskId() string {
	if x != nil {
		return x.ExternalTaskId
	}
	return ""
}

func (x *TaskDescription) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_NOT_SENT
}

func (x *TaskDescription) GetStatusUpdatedAt() int64 {
	if x != nil {
		return x.StatusUpdatedAt
	}
	return 0
}

func (x *TaskDescription) GetLongId() int64 {
	if x != nil {
		return x.LongId
	}
	return 0
}

func (x *TaskDescription) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type InitialTaskDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TaskName              string                 `protobuf:"bytes,2,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	HierarchyId           string                 `protobuf:"bytes,3,opt,name=hierarchy_id,json=hierarchyId,proto3" json:"hierarchy_id,omitempty"`
	DueDateTimestamp      int64                  `protobuf:"varint,4,opt,name=due_date_timestamp,json=dueDateTimestamp,proto3" json:"due_date_timestamp,omitempty"`
	FunctionalLocationIds *FunctionalLocationIds `protobuf:"bytes,5,opt,name=functional_location_ids,json=functionalLocationIds,proto3" json:"functional_location_ids,omitempty"`
	ExternalTaskId        string                 `protobuf:"bytes,6,opt,name=external_task_id,json=externalTaskId,proto3" json:"external_task_id,omitempty"`
	Status                TaskStatus             `protobuf:"varint,7,opt,name=status,proto3,enum=iot.TaskStatus" json:"status,omitempty"`
	Nodes                 []*Node                `protobuf:"bytes,8,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *InitialTaskDescription) Reset() {
	*x = InitialTaskDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitialTaskDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitialTaskDescription) ProtoMessage() {}

func (x *InitialTaskDescription) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitialTaskDescription.ProtoReflect.Descriptor instead.
func (*InitialTaskDescription) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{1}
}

func (x *InitialTaskDescription) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *InitialTaskDescription) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *InitialTaskDescription) GetHierarchyId() string {
	if x != nil {
		return x.HierarchyId
	}
	return ""
}

func (x *InitialTaskDescription) GetDueDateTimestamp() int64 {
	if x != nil {
		return x.DueDateTimestamp
	}
	return 0
}

func (x *InitialTaskDescription) GetFunctionalLocationIds() *FunctionalLocationIds {
	if x != nil {
		return x.FunctionalLocationIds
	}
	return nil
}

func (x *InitialTaskDescription) GetExternalTaskId() string {
	if x != nil {
		return x.ExternalTaskId
	}
	return ""
}

func (x *InitialTaskDescription) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_NOT_SENT
}

func (x *InitialTaskDescription) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId   string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeType string `protobuf:"bytes,2,opt,name=node_type,json=nodeType,proto3" json:"node_type,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{2}
}

func (x *Node) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Node) GetNodeType() string {
	if x != nil {
		return x.NodeType
	}
	return ""
}

type TaskUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TaskId string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *TaskUser) Reset() {
	*x = TaskUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskUser) ProtoMessage() {}

func (x *TaskUser) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskUser.ProtoReflect.Descriptor instead.
func (*TaskUser) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{3}
}

func (x *TaskUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TaskUser) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type SetTaskStatusInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId    string     `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	UserId    string     `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status    TaskStatus `protobuf:"varint,2,opt,name=status,proto3,enum=iot.TaskStatus" json:"status,omitempty"`
	UpdatedAt int64      `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // ms
}

func (x *SetTaskStatusInput) Reset() {
	*x = SetTaskStatusInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTaskStatusInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTaskStatusInput) ProtoMessage() {}

func (x *SetTaskStatusInput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTaskStatusInput.ProtoReflect.Descriptor instead.
func (*SetTaskStatusInput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{4}
}

func (x *SetTaskStatusInput) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *SetTaskStatusInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SetTaskStatusInput) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_NOT_SENT
}

func (x *SetTaskStatusInput) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// Task descriptions
type TaskDescriptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskDescriptionArr []*TaskDescription `protobuf:"bytes,1,rep,name=task_description_arr,json=taskDescriptionArr,proto3" json:"task_description_arr,omitempty"`
}

func (x *TaskDescriptions) Reset() {
	*x = TaskDescriptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskDescriptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDescriptions) ProtoMessage() {}

func (x *TaskDescriptions) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDescriptions.ProtoReflect.Descriptor instead.
func (*TaskDescriptions) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{5}
}

func (x *TaskDescriptions) GetTaskDescriptionArr() []*TaskDescription {
	if x != nil {
		return x.TaskDescriptionArr
	}
	return nil
}

type FunctionalLocationIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdArr []string `protobuf:"bytes,1,rep,name=id_arr,json=idArr,proto3" json:"id_arr,omitempty"`
}

func (x *FunctionalLocationIds) Reset() {
	*x = FunctionalLocationIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionalLocationIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionalLocationIds) ProtoMessage() {}

func (x *FunctionalLocationIds) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionalLocationIds.ProtoReflect.Descriptor instead.
func (*FunctionalLocationIds) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{6}
}

func (x *FunctionalLocationIds) GetIdArr() []string {
	if x != nil {
		return x.IdArr
	}
	return nil
}

type NodeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt       int64               `protobuf:"varint,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ContentType     NodeDataContentType `protobuf:"varint,2,opt,name=content_type,json=contentType,proto3,enum=iot.NodeDataContentType" json:"content_type,omitempty"`
	DataPoint       *DataPoint          `protobuf:"bytes,3,opt,name=data_point,json=dataPoint,proto3" json:"data_point,omitempty"`
	Spectrum        *Spectrum           `protobuf:"bytes,4,opt,name=spectrum,proto3" json:"spectrum,omitempty"`
	TimeSeries      *TimeSeries         `protobuf:"bytes,5,opt,name=time_series,json=timeSeries,proto3" json:"time_series,omitempty"`
	Note            string              `protobuf:"bytes,6,opt,name=note,proto3" json:"note,omitempty"`
	MediaV2         *Media              `protobuf:"bytes,9,opt,name=media_v2,json=mediaV2,proto3" json:"media_v2,omitempty"`
	QuestionAnswers []string            `protobuf:"bytes,8,rep,name=question_answers,json=questionAnswers,proto3" json:"question_answers,omitempty"`
	Tags            string              `protobuf:"bytes,10,opt,name=tags,proto3" json:"tags,omitempty"`
	TenantId        string              `protobuf:"bytes,11,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *NodeData) Reset() {
	*x = NodeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeData) ProtoMessage() {}

func (x *NodeData) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeData.ProtoReflect.Descriptor instead.
func (*NodeData) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{7}
}

func (x *NodeData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *NodeData) GetContentType() NodeDataContentType {
	if x != nil {
		return x.ContentType
	}
	return NodeDataContentType_DEFAULT
}

func (x *NodeData) GetDataPoint() *DataPoint {
	if x != nil {
		return x.DataPoint
	}
	return nil
}

func (x *NodeData) GetSpectrum() *Spectrum {
	if x != nil {
		return x.Spectrum
	}
	return nil
}

func (x *NodeData) GetTimeSeries() *TimeSeries {
	if x != nil {
		return x.TimeSeries
	}
	return nil
}

func (x *NodeData) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *NodeData) GetMediaV2() *Media {
	if x != nil {
		return x.MediaV2
	}
	return nil
}

func (x *NodeData) GetQuestionAnswers() []string {
	if x != nil {
		return x.QuestionAnswers
	}
	return nil
}

func (x *NodeData) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *NodeData) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type Coordinate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Coordinate) Reset() {
	*x = Coordinate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coordinate) ProtoMessage() {}

func (x *Coordinate) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coordinate.ProtoReflect.Descriptor instead.
func (*Coordinate) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{8}
}

func (x *Coordinate) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Coordinate) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

type DataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coordinate *Coordinate `protobuf:"bytes,1,opt,name=coordinate,proto3" json:"coordinate,omitempty"`
	XUnit      string      `protobuf:"bytes,2,opt,name=x_unit,json=xUnit,proto3" json:"x_unit,omitempty"`
	YUnit      string      `protobuf:"bytes,3,opt,name=y_unit,json=yUnit,proto3" json:"y_unit,omitempty"`
}

func (x *DataPoint) Reset() {
	*x = DataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPoint) ProtoMessage() {}

func (x *DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPoint.ProtoReflect.Descriptor instead.
func (*DataPoint) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{9}
}

func (x *DataPoint) GetCoordinate() *Coordinate {
	if x != nil {
		return x.Coordinate
	}
	return nil
}

func (x *DataPoint) GetXUnit() string {
	if x != nil {
		return x.XUnit
	}
	return ""
}

func (x *DataPoint) GetYUnit() string {
	if x != nil {
		return x.YUnit
	}
	return ""
}

type Spectrum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coordinates    []*Coordinate `protobuf:"bytes,1,rep,name=coordinates,proto3" json:"coordinates,omitempty"`
	XUnit          string        `protobuf:"bytes,2,opt,name=x_unit,json=xUnit,proto3" json:"x_unit,omitempty"`
	YUnit          string        `protobuf:"bytes,3,opt,name=y_unit,json=yUnit,proto3" json:"y_unit,omitempty"`
	WindowFunction string        `protobuf:"bytes,4,opt,name=window_function,json=windowFunction,proto3" json:"window_function,omitempty"`
	SpeedRpm       float64       `protobuf:"fixed64,5,opt,name=speed_rpm,json=speedRpm,proto3" json:"speed_rpm,omitempty"`
}

func (x *Spectrum) Reset() {
	*x = Spectrum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spectrum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spectrum) ProtoMessage() {}

func (x *Spectrum) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spectrum.ProtoReflect.Descriptor instead.
func (*Spectrum) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{10}
}

func (x *Spectrum) GetCoordinates() []*Coordinate {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *Spectrum) GetXUnit() string {
	if x != nil {
		return x.XUnit
	}
	return ""
}

func (x *Spectrum) GetYUnit() string {
	if x != nil {
		return x.YUnit
	}
	return ""
}

func (x *Spectrum) GetWindowFunction() string {
	if x != nil {
		return x.WindowFunction
	}
	return ""
}

func (x *Spectrum) GetSpeedRpm() float64 {
	if x != nil {
		return x.SpeedRpm
	}
	return 0
}

type TimeSeries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coordinates []*Coordinate `protobuf:"bytes,1,rep,name=coordinates,proto3" json:"coordinates,omitempty"`
	XUnit       string        `protobuf:"bytes,2,opt,name=x_unit,json=xUnit,proto3" json:"x_unit,omitempty"`
	YUnit       string        `protobuf:"bytes,3,opt,name=y_unit,json=yUnit,proto3" json:"y_unit,omitempty"`
}

func (x *TimeSeries) Reset() {
	*x = TimeSeries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSeries) ProtoMessage() {}

func (x *TimeSeries) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSeries.ProtoReflect.Descriptor instead.
func (*TimeSeries) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{11}
}

func (x *TimeSeries) GetCoordinates() []*Coordinate {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *TimeSeries) GetXUnit() string {
	if x != nil {
		return x.XUnit
	}
	return ""
}

func (x *TimeSeries) GetYUnit() string {
	if x != nil {
		return x.YUnit
	}
	return ""
}

type Media struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type  MediaType `protobuf:"varint,2,opt,name=type,proto3,enum=iot.MediaType" json:"type,omitempty"`
	Media []byte    `protobuf:"bytes,3,opt,name=media,proto3" json:"media,omitempty"`
}

func (x *Media) Reset() {
	*x = Media{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{12}
}

func (x *Media) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Media) GetType() MediaType {
	if x != nil {
		return x.Type
	}
	return MediaType_UNKNOWN
}

func (x *Media) GetMedia() []byte {
	if x != nil {
		return x.Media
	}
	return nil
}

// IngestNodeData messages
type IngestNodeDataInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId   string         `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Origin   *common.Origin `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
	NodeData *NodeData      `protobuf:"bytes,2,opt,name=node_data,json=nodeData,proto3" json:"node_data,omitempty"`
}

func (x *IngestNodeDataInput) Reset() {
	*x = IngestNodeDataInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestNodeDataInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestNodeDataInput) ProtoMessage() {}

func (x *IngestNodeDataInput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestNodeDataInput.ProtoReflect.Descriptor instead.
func (*IngestNodeDataInput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{13}
}

func (x *IngestNodeDataInput) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *IngestNodeDataInput) GetOrigin() *common.Origin {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *IngestNodeDataInput) GetNodeData() *NodeData {
	if x != nil {
		return x.NodeData
	}
	return nil
}

// DeleteNodeData message
type DeleteNodeDataInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string         `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Origin *common.Origin `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *DeleteNodeDataInput) Reset() {
	*x = DeleteNodeDataInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNodeDataInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNodeDataInput) ProtoMessage() {}

func (x *DeleteNodeDataInput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNodeDataInput.ProtoReflect.Descriptor instead.
func (*DeleteNodeDataInput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteNodeDataInput) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *DeleteNodeDataInput) GetOrigin() *common.Origin {
	if x != nil {
		return x.Origin
	}
	return nil
}

// IngestNodesData messages
type IngestNodesDataInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*IngestNodeDataInput `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *IngestNodesDataInput) Reset() {
	*x = IngestNodesDataInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestNodesDataInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestNodesDataInput) ProtoMessage() {}

func (x *IngestNodesDataInput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestNodesDataInput.ProtoReflect.Descriptor instead.
func (*IngestNodesDataInput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{15}
}

func (x *IngestNodesDataInput) GetNodes() []*IngestNodeDataInput {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type IngestNodesDataOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *IngestNodesDataOutput) Reset() {
	*x = IngestNodesDataOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestNodesDataOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestNodesDataOutput) ProtoMessage() {}

func (x *IngestNodesDataOutput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestNodesDataOutput.ProtoReflect.Descriptor instead.
func (*IngestNodesDataOutput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{16}
}

func (x *IngestNodesDataOutput) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetNodeEventLogInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqId string `protobuf:"bytes,1,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
}

func (x *GetNodeEventLogInput) Reset() {
	*x = GetNodeEventLogInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeEventLogInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeEventLogInput) ProtoMessage() {}

func (x *GetNodeEventLogInput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeEventLogInput.ProtoReflect.Descriptor instead.
func (*GetNodeEventLogInput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{17}
}

func (x *GetNodeEventLogInput) GetSeqId() string {
	if x != nil {
		return x.SeqId
	}
	return ""
}

type NodeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AggregateId     string              `protobuf:"bytes,1,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	SeqId           string              `protobuf:"bytes,2,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	Timestamp       int64               `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	EventType       NodeEventType       `protobuf:"varint,4,opt,name=event_type,json=eventType,proto3,enum=iot.NodeEventType" json:"event_type,omitempty"`
	DataContentType NodeDataContentType `protobuf:"varint,5,opt,name=data_content_type,json=dataContentType,proto3,enum=iot.NodeDataContentType" json:"data_content_type,omitempty"`
}

func (x *NodeEvent) Reset() {
	*x = NodeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeEvent) ProtoMessage() {}

func (x *NodeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeEvent.ProtoReflect.Descriptor instead.
func (*NodeEvent) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{18}
}

func (x *NodeEvent) GetAggregateId() string {
	if x != nil {
		return x.AggregateId
	}
	return ""
}

func (x *NodeEvent) GetSeqId() string {
	if x != nil {
		return x.SeqId
	}
	return ""
}

func (x *NodeEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *NodeEvent) GetEventType() NodeEventType {
	if x != nil {
		return x.EventType
	}
	return NodeEventType_UNKNOWN_EVENT
}

func (x *NodeEvent) GetDataContentType() NodeDataContentType {
	if x != nil {
		return x.DataContentType
	}
	return NodeDataContentType_DEFAULT
}

type GetNodeEventLogOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events  []*NodeEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	HasNext bool         `protobuf:"varint,2,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
}

func (x *GetNodeEventLogOutput) Reset() {
	*x = GetNodeEventLogOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeEventLogOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeEventLogOutput) ProtoMessage() {}

func (x *GetNodeEventLogOutput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeEventLogOutput.ProtoReflect.Descriptor instead.
func (*GetNodeEventLogOutput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{19}
}

func (x *GetNodeEventLogOutput) GetEvents() []*NodeEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GetNodeEventLogOutput) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

type IngestNodeDataOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IngestNodeDataOutput) Reset() {
	*x = IngestNodeDataOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestNodeDataOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestNodeDataOutput) ProtoMessage() {}

func (x *IngestNodeDataOutput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestNodeDataOutput.ProtoReflect.Descriptor instead.
func (*IngestNodeDataOutput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{20}
}

// GetNodeData messages
type GetNodeDataInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId      string              `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Timestamp   int64               `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ContentType NodeDataContentType `protobuf:"varint,3,opt,name=content_type,json=contentType,proto3,enum=iot.NodeDataContentType" json:"content_type,omitempty"`
}

func (x *GetNodeDataInput) Reset() {
	*x = GetNodeDataInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeDataInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeDataInput) ProtoMessage() {}

func (x *GetNodeDataInput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeDataInput.ProtoReflect.Descriptor instead.
func (*GetNodeDataInput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{21}
}

func (x *GetNodeDataInput) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *GetNodeDataInput) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetNodeDataInput) GetContentType() NodeDataContentType {
	if x != nil {
		return x.ContentType
	}
	return NodeDataContentType_DEFAULT
}

type GetNodeDataOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeDataList []*NodeData `protobuf:"bytes,1,rep,name=node_data_list,json=nodeDataList,proto3" json:"node_data_list,omitempty"`
}

func (x *GetNodeDataOutput) Reset() {
	*x = GetNodeDataOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeDataOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeDataOutput) ProtoMessage() {}

func (x *GetNodeDataOutput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeDataOutput.ProtoReflect.Descriptor instead.
func (*GetNodeDataOutput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{22}
}

func (x *GetNodeDataOutput) GetNodeDataList() []*NodeData {
	if x != nil {
		return x.NodeDataList
	}
	return nil
}

// GetLatestNodeData messages
type GetLatestNodeDataInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId      string              `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ContentType NodeDataContentType `protobuf:"varint,2,opt,name=content_type,json=contentType,proto3,enum=iot.NodeDataContentType" json:"content_type,omitempty"`
}

func (x *GetLatestNodeDataInput) Reset() {
	*x = GetLatestNodeDataInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestNodeDataInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestNodeDataInput) ProtoMessage() {}

func (x *GetLatestNodeDataInput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestNodeDataInput.ProtoReflect.Descriptor instead.
func (*GetLatestNodeDataInput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{23}
}

func (x *GetLatestNodeDataInput) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *GetLatestNodeDataInput) GetContentType() NodeDataContentType {
	if x != nil {
		return x.ContentType
	}
	return NodeDataContentType_DEFAULT
}

type GetLatestNodeDataOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeData *NodeData `protobuf:"bytes,1,opt,name=node_data,json=nodeData,proto3" json:"node_data,omitempty"`
}

func (x *GetLatestNodeDataOutput) Reset() {
	*x = GetLatestNodeDataOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestNodeDataOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestNodeDataOutput) ProtoMessage() {}

func (x *GetLatestNodeDataOutput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestNodeDataOutput.ProtoReflect.Descriptor instead.
func (*GetLatestNodeDataOutput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{24}
}

func (x *GetLatestNodeDataOutput) GetNodeData() *NodeData {
	if x != nil {
		return x.NodeData
	}
	return nil
}

// GetMedia messages
type GetMediaInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId  string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	MediaId string `protobuf:"bytes,2,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
}

func (x *GetMediaInput) Reset() {
	*x = GetMediaInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMediaInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaInput) ProtoMessage() {}

func (x *GetMediaInput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaInput.ProtoReflect.Descriptor instead.
func (*GetMediaInput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{25}
}

func (x *GetMediaInput) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *GetMediaInput) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

type PutMediaSignedUrlInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaId    string    `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	Type       MediaType `protobuf:"varint,2,opt,name=type,proto3,enum=iot.MediaType" json:"type,omitempty"`
	ContentMD5 string    `protobuf:"bytes,3,opt,name=contentMD5,proto3" json:"contentMD5,omitempty"`
}

func (x *PutMediaSignedUrlInput) Reset() {
	*x = PutMediaSignedUrlInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutMediaSignedUrlInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutMediaSignedUrlInput) ProtoMessage() {}

func (x *PutMediaSignedUrlInput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutMediaSignedUrlInput.ProtoReflect.Descriptor instead.
func (*PutMediaSignedUrlInput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{26}
}

func (x *PutMediaSignedUrlInput) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *PutMediaSignedUrlInput) GetType() MediaType {
	if x != nil {
		return x.Type
	}
	return MediaType_UNKNOWN
}

func (x *PutMediaSignedUrlInput) GetContentMD5() string {
	if x != nil {
		return x.ContentMD5
	}
	return ""
}

type PutMediaSignedUrlOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *PutMediaSignedUrlOutput) Reset() {
	*x = PutMediaSignedUrlOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutMediaSignedUrlOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutMediaSignedUrlOutput) ProtoMessage() {}

func (x *PutMediaSignedUrlOutput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutMediaSignedUrlOutput.ProtoReflect.Descriptor instead.
func (*PutMediaSignedUrlOutput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{27}
}

func (x *PutMediaSignedUrlOutput) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetMediaSignedUrlInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaId string `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
}

func (x *GetMediaSignedUrlInput) Reset() {
	*x = GetMediaSignedUrlInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMediaSignedUrlInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaSignedUrlInput) ProtoMessage() {}

func (x *GetMediaSignedUrlInput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaSignedUrlInput.ProtoReflect.Descriptor instead.
func (*GetMediaSignedUrlInput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{28}
}

func (x *GetMediaSignedUrlInput) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

type GetMediaSignedUrlOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetMediaSignedUrlOutput) Reset() {
	*x = GetMediaSignedUrlOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMediaSignedUrlOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaSignedUrlOutput) ProtoMessage() {}

func (x *GetMediaSignedUrlOutput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaSignedUrlOutput.ProtoReflect.Descriptor instead.
func (*GetMediaSignedUrlOutput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{29}
}

func (x *GetMediaSignedUrlOutput) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetMediaOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media *Media `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
}

func (x *GetMediaOutput) Reset() {
	*x = GetMediaOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMediaOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaOutput) ProtoMessage() {}

func (x *GetMediaOutput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaOutput.ProtoReflect.Descriptor instead.
func (*GetMediaOutput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{30}
}

func (x *GetMediaOutput) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

type GetTasksByStatusInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HierarchyId string     `protobuf:"bytes,1,opt,name=hierarchy_id,json=hierarchyId,proto3" json:"hierarchy_id,omitempty"`
	Status      TaskStatus `protobuf:"varint,2,opt,name=status,proto3,enum=iot.TaskStatus" json:"status,omitempty"`
}

func (x *GetTasksByStatusInput) Reset() {
	*x = GetTasksByStatusInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksByStatusInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksByStatusInput) ProtoMessage() {}

func (x *GetTasksByStatusInput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksByStatusInput.ProtoReflect.Descriptor instead.
func (*GetTasksByStatusInput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{31}
}

func (x *GetTasksByStatusInput) GetHierarchyId() string {
	if x != nil {
		return x.HierarchyId
	}
	return ""
}

func (x *GetTasksByStatusInput) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_NOT_SENT
}

type GetTasksByStatusOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskList []*TaskDescription `protobuf:"bytes,1,rep,name=task_list,json=taskList,proto3" json:"task_list,omitempty"`
}

func (x *GetTasksByStatusOutput) Reset() {
	*x = GetTasksByStatusOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksByStatusOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksByStatusOutput) ProtoMessage() {}

func (x *GetTasksByStatusOutput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksByStatusOutput.ProtoReflect.Descriptor instead.
func (*GetTasksByStatusOutput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{32}
}

func (x *GetTasksByStatusOutput) GetTaskList() []*TaskDescription {
	if x != nil {
		return x.TaskList
	}
	return nil
}

type GetTaskByUUIDInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetTaskByUUIDInput) Reset() {
	*x = GetTaskByUUIDInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskByUUIDInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskByUUIDInput) ProtoMessage() {}

func (x *GetTaskByUUIDInput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskByUUIDInput.ProtoReflect.Descriptor instead.
func (*GetTaskByUUIDInput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{33}
}

func (x *GetTaskByUUIDInput) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type GetTaskByUUIDOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *TaskDescription `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *GetTaskByUUIDOutput) Reset() {
	*x = GetTaskByUUIDOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskByUUIDOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskByUUIDOutput) ProtoMessage() {}

func (x *GetTaskByUUIDOutput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskByUUIDOutput.ProtoReflect.Descriptor instead.
func (*GetTaskByUUIDOutput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{34}
}

func (x *GetTaskByUUIDOutput) GetTask() *TaskDescription {
	if x != nil {
		return x.Task
	}
	return nil
}

type GetTaskByLongIdInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetTaskByLongIdInput) Reset() {
	*x = GetTaskByLongIdInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskByLongIdInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskByLongIdInput) ProtoMessage() {}

func (x *GetTaskByLongIdInput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskByLongIdInput.ProtoReflect.Descriptor instead.
func (*GetTaskByLongIdInput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{35}
}

func (x *GetTaskByLongIdInput) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type GetTaskByLongIdOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *TaskDescription `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *GetTaskByLongIdOutput) Reset() {
	*x = GetTaskByLongIdOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskByLongIdOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskByLongIdOutput) ProtoMessage() {}

func (x *GetTaskByLongIdOutput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskByLongIdOutput.ProtoReflect.Descriptor instead.
func (*GetTaskByLongIdOutput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{36}
}

func (x *GetTaskByLongIdOutput) GetTask() *TaskDescription {
	if x != nil {
		return x.Task
	}
	return nil
}

type GetTasksModifiedSinceTimestampInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Limit     int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetTasksModifiedSinceTimestampInput) Reset() {
	*x = GetTasksModifiedSinceTimestampInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksModifiedSinceTimestampInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksModifiedSinceTimestampInput) ProtoMessage() {}

func (x *GetTasksModifiedSinceTimestampInput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksModifiedSinceTimestampInput.ProtoReflect.Descriptor instead.
func (*GetTasksModifiedSinceTimestampInput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{37}
}

func (x *GetTasksModifiedSinceTimestampInput) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetTasksModifiedSinceTimestampInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetTasksModifiedSinceTimestampInput) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetTasksModifiedSinceTimestampOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskList []*TaskDescription `protobuf:"bytes,1,rep,name=task_list,json=taskList,proto3" json:"task_list,omitempty"`
}

func (x *GetTasksModifiedSinceTimestampOutput) Reset() {
	*x = GetTasksModifiedSinceTimestampOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_grpcapi_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksModifiedSinceTimestampOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksModifiedSinceTimestampOutput) ProtoMessage() {}

func (x *GetTasksModifiedSinceTimestampOutput) ProtoReflect() protoreflect.Message {
	mi := &file_iot_grpcapi_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksModifiedSinceTimestampOutput.ProtoReflect.Descriptor instead.
func (*GetTasksModifiedSinceTimestampOutput) Descriptor() ([]byte, []int) {
	return file_iot_grpcapi_proto_rawDescGZIP(), []int{38}
}

func (x *GetTasksModifiedSinceTimestampOutput) GetTaskList() []*TaskDescription {
	if x != nil {
		return x.TaskList
	}
	return nil
}

var File_iot_grpcapi_proto protoreflect.FileDescriptor

var file_iot_grpcapi_proto_rawDesc = []byte{
	0x0a, 0x11, 0x69, 0x6f, 0x74, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x69, 0x6f, 0x74, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x03,
	0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68,
	0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x52, 0x0a, 0x17, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x73, 0x52, 0x15, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f, 0x6e, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x6f, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x22, 0xe7, 0x02, 0x0a, 0x16, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x61, 0x73,
	0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72,
	0x63, 0x68, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x52, 0x0a, 0x17, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73,
	0x52, 0x15, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x69, 0x6f, 0x74, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x04, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3c, 0x0a, 0x08, 0x54, 0x61, 0x73,
	0x6b, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5a, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x46, 0x0a, 0x14,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x72, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x12, 0x74, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x72, 0x72, 0x22, 0x2e, 0x0a, 0x15, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x15, 0x0a,
	0x06, 0x69, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x64, 0x41, 0x72, 0x72, 0x22, 0x89, 0x03, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a,
	0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x08,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x52, 0x08, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x12, 0x30, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69,
	0x6f, 0x74, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x25, 0x0a,
	0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x76, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x07, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x56, 0x32, 0x12, 0x29, 0x0a, 0x10, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x28, 0x0a, 0x0a, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x0c,
	0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x22, 0x6a, 0x0a, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x6f,
	0x74, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x78, 0x5f, 0x75, 0x6e,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x78, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x22, 0xb1, 0x01, 0x0a, 0x08, 0x53, 0x70, 0x65, 0x63, 0x74,
	0x72, 0x75, 0x6d, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x78, 0x5f, 0x75, 0x6e, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x78, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x79,
	0x55, 0x6e, 0x69, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x72, 0x70, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x73, 0x70, 0x65, 0x65, 0x64, 0x52, 0x70, 0x6d, 0x22, 0x6d, 0x0a, 0x0a, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x69, 0x6f, 0x74, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x0b,
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x78,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x78, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x22, 0x51, 0x0a, 0x05, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x22, 0x82, 0x01, 0x0a,
	0x13, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x56, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x46, 0x0a, 0x14, 0x49, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x2e, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x22, 0x31, 0x0a, 0x15, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x2d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x65,
	0x71, 0x49, 0x64, 0x22, 0xdc, 0x01, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x31, 0x0a, 0x0a, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x69, 0x6f, 0x74, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x11,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x5a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x69, 0x6f,
	0x74, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x22, 0x16,
	0x0a, 0x14, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x33, 0x0a, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69,
	0x6f, 0x74, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x6e, 0x6f, 0x64,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6e, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x45, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x43, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x16, 0x50, 0x75, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x44, 0x35, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x44, 0x35, 0x22, 0x2b,
	0x0a, 0x17, 0x50, 0x75, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x55, 0x72, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x33, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64,
	0x22, 0x2b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x55, 0x72, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x32, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x20, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x22, 0x63, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x69,
	0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x69, 0x6f, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x31, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79,
	0x55, 0x55, 0x49, 0x44, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x22, 0x3f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x55,
	0x55, 0x49, 0x44, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x61, 0x73,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x22, 0x2f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79,
	0x4c, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42,
	0x79, 0x4c, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x28, 0x0a,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f,
	0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x72, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x53, 0x69, 0x6e, 0x63, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x59, 0x0a, 0x24, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x53,
	0x69, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x74, 0x61,
	0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x2a, 0x87, 0x01, 0x0a, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x45, 0x54, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x15, 0x0a,
	0x11, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x50, 0x50, 0x45, 0x4e, 0x44, 0x5f, 0x4e,
	0x4f, 0x44, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x04,
	0x2a, 0x77, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c,
	0x0a, 0x08, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x53, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45,
	0x53, 0x53, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x49, 0x53, 0x53, 0x45, 0x44, 0x10, 0x05,
	0x12, 0x17, 0x0a, 0x13, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x4c, 0x59, 0x5f, 0x43, 0x4f,
	0x4c, 0x4c, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x06, 0x2a, 0x92, 0x01, 0x0a, 0x13, 0x4e, 0x6f,
	0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x53, 0x50, 0x45, 0x43, 0x54, 0x52, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b,
	0x54, 0x49, 0x4d, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x49, 0x45, 0x53, 0x10, 0x03, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x54, 0x45, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x45, 0x44, 0x49, 0x41,
	0x5f, 0x56, 0x32, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x41, 0x4e, 0x53, 0x57, 0x45, 0x52, 0x53, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x4d,
	0x49, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x10, 0x08, 0x2a, 0x55,
	0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x55, 0x44, 0x49,
	0x4f, 0x5f, 0x57, 0x41, 0x56, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4d, 0x41, 0x47, 0x45,
	0x5f, 0x4a, 0x50, 0x45, 0x47, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4d, 0x41, 0x47, 0x45,
	0x5f, 0x50, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f,
	0x4d, 0x50, 0x34, 0x10, 0x04, 0x32, 0xb7, 0x0b, 0x0a, 0x03, 0x49, 0x6f, 0x54, 0x12, 0x33, 0x0a,
	0x08, 0x44, 0x65, 0x65, 0x70, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x1b, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x61,
	0x73, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x17, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x1a, 0x15, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x55, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x12, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x15, 0x2e, 0x69, 0x6f, 0x74, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x00, 0x12, 0x2b, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x0d, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x1a,
	0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12,
	0x52, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68,
	0x79, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x15, 0x2e, 0x69, 0x6f, 0x74,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x4d, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1b, 0x2e,
	0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x55, 0x55, 0x49, 0x44, 0x12, 0x17, 0x2e,
	0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x55, 0x55, 0x49,
	0x44, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x18, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x55, 0x55, 0x49, 0x44, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x4c,
	0x6f, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x19, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x42, 0x79, 0x4c, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x1a, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79,
	0x4c, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x77,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x28, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x29, 0x2e, 0x69, 0x6f, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0f, 0x49, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x2e, 0x69, 0x6f, 0x74,
	0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1a, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x49, 0x6e, 0x67, 0x65,
	0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x49, 0x6e, 0x67, 0x65,
	0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x19, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1b, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1c,
	0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x3e,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x2e,
	0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x16, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x3a,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x18, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x19, 0x2e,
	0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1a, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x12, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x57, 0x0a,
	0x18, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x2e, 0x69, 0x6f, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72,
	0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1c, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x75, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55,
	0x72, 0x6c, 0x12, 0x1b, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x1c, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x42,
	0x30, 0x5a, 0x18, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x4b,
	0x46, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6f, 0x74, 0xaa, 0x02, 0x13, 0x53, 0x4b,
	0x46, 0x2e, 0x45, 0x6e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x49, 0x6f,
	0x54, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iot_grpcapi_proto_rawDescOnce sync.Once
	file_iot_grpcapi_proto_rawDescData = file_iot_grpcapi_proto_rawDesc
)

func file_iot_grpcapi_proto_rawDescGZIP() []byte {
	file_iot_grpcapi_proto_rawDescOnce.Do(func() {
		file_iot_grpcapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_iot_grpcapi_proto_rawDescData)
	})
	return file_iot_grpcapi_proto_rawDescData
}

var file_iot_grpcapi_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_iot_grpcapi_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_iot_grpcapi_proto_goTypes = []interface{}{
	(NodeEventType)(0),                           // 0: iot.NodeEventType
	(TaskStatus)(0),                              // 1: iot.TaskStatus
	(NodeDataContentType)(0),                     // 2: iot.NodeDataContentType
	(MediaType)(0),                               // 3: iot.MediaType
	(*TaskDescription)(nil),                      // 4: iot.TaskDescription
	(*InitialTaskDescription)(nil),               // 5: iot.InitialTaskDescription
	(*Node)(nil),                                 // 6: iot.Node
	(*TaskUser)(nil),                             // 7: iot.TaskUser
	(*SetTaskStatusInput)(nil),                   // 8: iot.SetTaskStatusInput
	(*TaskDescriptions)(nil),                     // 9: iot.TaskDescriptions
	(*FunctionalLocationIds)(nil),                // 10: iot.FunctionalLocationIds
	(*NodeData)(nil),                             // 11: iot.NodeData
	(*Coordinate)(nil),                           // 12: iot.Coordinate
	(*DataPoint)(nil),                            // 13: iot.DataPoint
	(*Spectrum)(nil),                             // 14: iot.Spectrum
	(*TimeSeries)(nil),                           // 15: iot.TimeSeries
	(*Media)(nil),                                // 16: iot.Media
	(*IngestNodeDataInput)(nil),                  // 17: iot.IngestNodeDataInput
	(*DeleteNodeDataInput)(nil),                  // 18: iot.DeleteNodeDataInput
	(*IngestNodesDataInput)(nil),                 // 19: iot.IngestNodesDataInput
	(*IngestNodesDataOutput)(nil),                // 20: iot.IngestNodesDataOutput
	(*GetNodeEventLogInput)(nil),                 // 21: iot.GetNodeEventLogInput
	(*NodeEvent)(nil),                            // 22: iot.NodeEvent
	(*GetNodeEventLogOutput)(nil),                // 23: iot.GetNodeEventLogOutput
	(*IngestNodeDataOutput)(nil),                 // 24: iot.IngestNodeDataOutput
	(*GetNodeDataInput)(nil),                     // 25: iot.GetNodeDataInput
	(*GetNodeDataOutput)(nil),                    // 26: iot.GetNodeDataOutput
	(*GetLatestNodeDataInput)(nil),               // 27: iot.GetLatestNodeDataInput
	(*GetLatestNodeDataOutput)(nil),              // 28: iot.GetLatestNodeDataOutput
	(*GetMediaInput)(nil),                        // 29: iot.GetMediaInput
	(*PutMediaSignedUrlInput)(nil),               // 30: iot.PutMediaSignedUrlInput
	(*PutMediaSignedUrlOutput)(nil),              // 31: iot.PutMediaSignedUrlOutput
	(*GetMediaSignedUrlInput)(nil),               // 32: iot.GetMediaSignedUrlInput
	(*GetMediaSignedUrlOutput)(nil),              // 33: iot.GetMediaSignedUrlOutput
	(*GetMediaOutput)(nil),                       // 34: iot.GetMediaOutput
	(*GetTasksByStatusInput)(nil),                // 35: iot.GetTasksByStatusInput
	(*GetTasksByStatusOutput)(nil),               // 36: iot.GetTasksByStatusOutput
	(*GetTaskByUUIDInput)(nil),                   // 37: iot.GetTaskByUUIDInput
	(*GetTaskByUUIDOutput)(nil),                  // 38: iot.GetTaskByUUIDOutput
	(*GetTaskByLongIdInput)(nil),                 // 39: iot.GetTaskByLongIdInput
	(*GetTaskByLongIdOutput)(nil),                // 40: iot.GetTaskByLongIdOutput
	(*GetTasksModifiedSinceTimestampInput)(nil),  // 41: iot.GetTasksModifiedSinceTimestampInput
	(*GetTasksModifiedSinceTimestampOutput)(nil), // 42: iot.GetTasksModifiedSinceTimestampOutput
	(*common.Origin)(nil),                        // 43: common.Origin
	(*common.Void)(nil),                          // 44: common.Void
	(*common.PrimitiveString)(nil),               // 45: common.PrimitiveString
}
var file_iot_grpcapi_proto_depIdxs = []int32{
	10, // 0: iot.TaskDescription.functional_location_ids:type_name -> iot.FunctionalLocationIds
	1,  // 1: iot.TaskDescription.status:type_name -> iot.TaskStatus
	6,  // 2: iot.TaskDescription.nodes:type_name -> iot.Node
	10, // 3: iot.InitialTaskDescription.functional_location_ids:type_name -> iot.FunctionalLocationIds
	1,  // 4: iot.InitialTaskDescription.status:type_name -> iot.TaskStatus
	6,  // 5: iot.InitialTaskDescription.nodes:type_name -> iot.Node
	1,  // 6: iot.SetTaskStatusInput.status:type_name -> iot.TaskStatus
	4,  // 7: iot.TaskDescriptions.task_description_arr:type_name -> iot.TaskDescription
	2,  // 8: iot.NodeData.content_type:type_name -> iot.NodeDataContentType
	13, // 9: iot.NodeData.data_point:type_name -> iot.DataPoint
	14, // 10: iot.NodeData.spectrum:type_name -> iot.Spectrum
	15, // 11: iot.NodeData.time_series:type_name -> iot.TimeSeries
	16, // 12: iot.NodeData.media_v2:type_name -> iot.Media
	12, // 13: iot.DataPoint.coordinate:type_name -> iot.Coordinate
	12, // 14: iot.Spectrum.coordinates:type_name -> iot.Coordinate
	12, // 15: iot.TimeSeries.coordinates:type_name -> iot.Coordinate
	3,  // 16: iot.Media.type:type_name -> iot.MediaType
	43, // 17: iot.IngestNodeDataInput.origin:type_name -> common.Origin
	11, // 18: iot.IngestNodeDataInput.node_data:type_name -> iot.NodeData
	43, // 19: iot.DeleteNodeDataInput.origin:type_name -> common.Origin
	17, // 20: iot.IngestNodesDataInput.nodes:type_name -> iot.IngestNodeDataInput
	0,  // 21: iot.NodeEvent.event_type:type_name -> iot.NodeEventType
	2,  // 22: iot.NodeEvent.data_content_type:type_name -> iot.NodeDataContentType
	22, // 23: iot.GetNodeEventLogOutput.events:type_name -> iot.NodeEvent
	2,  // 24: iot.GetNodeDataInput.content_type:type_name -> iot.NodeDataContentType
	11, // 25: iot.GetNodeDataOutput.node_data_list:type_name -> iot.NodeData
	2,  // 26: iot.GetLatestNodeDataInput.content_type:type_name -> iot.NodeDataContentType
	11, // 27: iot.GetLatestNodeDataOutput.node_data:type_name -> iot.NodeData
	3,  // 28: iot.PutMediaSignedUrlInput.type:type_name -> iot.MediaType
	16, // 29: iot.GetMediaOutput.media:type_name -> iot.Media
	1,  // 30: iot.GetTasksByStatusInput.status:type_name -> iot.TaskStatus
	4,  // 31: iot.GetTasksByStatusOutput.task_list:type_name -> iot.TaskDescription
	4,  // 32: iot.GetTaskByUUIDOutput.task:type_name -> iot.TaskDescription
	4,  // 33: iot.GetTaskByLongIdOutput.task:type_name -> iot.TaskDescription
	4,  // 34: iot.GetTasksModifiedSinceTimestampOutput.task_list:type_name -> iot.TaskDescription
	44, // 35: iot.IoT.DeepPing:input_type -> common.Void
	5,  // 36: iot.IoT.CreateTask:input_type -> iot.InitialTaskDescription
	45, // 37: iot.IoT.GetAllTasks:input_type -> common.PrimitiveString
	45, // 38: iot.IoT.GetUncompletedTasks:input_type -> common.PrimitiveString
	7,  // 39: iot.IoT.DeleteTask:input_type -> iot.TaskUser
	45, // 40: iot.IoT.GetUncompletedTasksByHierarchy:input_type -> common.PrimitiveString
	8,  // 41: iot.IoT.SetTaskStatus:input_type -> iot.SetTaskStatusInput
	35, // 42: iot.IoT.GetTasksByStatus:input_type -> iot.GetTasksByStatusInput
	37, // 43: iot.IoT.GetTaskByUUID:input_type -> iot.GetTaskByUUIDInput
	39, // 44: iot.IoT.GetTaskByLongId:input_type -> iot.GetTaskByLongIdInput
	41, // 45: iot.IoT.GetTasksModifiedSinceTimestamp:input_type -> iot.GetTasksModifiedSinceTimestampInput
	19, // 46: iot.IoT.IngestNodesData:input_type -> iot.IngestNodesDataInput
	17, // 47: iot.IoT.IngestNodeData:input_type -> iot.IngestNodeDataInput
	27, // 48: iot.IoT.GetLatestNodeData:input_type -> iot.GetLatestNodeDataInput
	25, // 49: iot.IoT.GetNodeData:input_type -> iot.GetNodeDataInput
	18, // 50: iot.IoT.DeleteNodeData:input_type -> iot.DeleteNodeDataInput
	21, // 51: iot.IoT.GetNodeEventLog:input_type -> iot.GetNodeEventLogInput
	29, // 52: iot.IoT.GetMedia:input_type -> iot.GetMediaInput
	32, // 53: iot.IoT.RequestGetMediaSignedUrl:input_type -> iot.GetMediaSignedUrlInput
	30, // 54: iot.IoT.RequestPutMediaSignedUrl:input_type -> iot.PutMediaSignedUrlInput
	45, // 55: iot.IoT.DeepPing:output_type -> common.PrimitiveString
	45, // 56: iot.IoT.CreateTask:output_type -> common.PrimitiveString
	9,  // 57: iot.IoT.GetAllTasks:output_type -> iot.TaskDescriptions
	9,  // 58: iot.IoT.GetUncompletedTasks:output_type -> iot.TaskDescriptions
	44, // 59: iot.IoT.DeleteTask:output_type -> common.Void
	9,  // 60: iot.IoT.GetUncompletedTasksByHierarchy:output_type -> iot.TaskDescriptions
	44, // 61: iot.IoT.SetTaskStatus:output_type -> common.Void
	36, // 62: iot.IoT.GetTasksByStatus:output_type -> iot.GetTasksByStatusOutput
	38, // 63: iot.IoT.GetTaskByUUID:output_type -> iot.GetTaskByUUIDOutput
	40, // 64: iot.IoT.GetTaskByLongId:output_type -> iot.GetTaskByLongIdOutput
	42, // 65: iot.IoT.GetTasksModifiedSinceTimestamp:output_type -> iot.GetTasksModifiedSinceTimestampOutput
	20, // 66: iot.IoT.IngestNodesData:output_type -> iot.IngestNodesDataOutput
	24, // 67: iot.IoT.IngestNodeData:output_type -> iot.IngestNodeDataOutput
	28, // 68: iot.IoT.GetLatestNodeData:output_type -> iot.GetLatestNodeDataOutput
	26, // 69: iot.IoT.GetNodeData:output_type -> iot.GetNodeDataOutput
	44, // 70: iot.IoT.DeleteNodeData:output_type -> common.Void
	23, // 71: iot.IoT.GetNodeEventLog:output_type -> iot.GetNodeEventLogOutput
	34, // 72: iot.IoT.GetMedia:output_type -> iot.GetMediaOutput
	33, // 73: iot.IoT.RequestGetMediaSignedUrl:output_type -> iot.GetMediaSignedUrlOutput
	31, // 74: iot.IoT.RequestPutMediaSignedUrl:output_type -> iot.PutMediaSignedUrlOutput
	55, // [55:75] is the sub-list for method output_type
	35, // [35:55] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_iot_grpcapi_proto_init() }
func file_iot_grpcapi_proto_init() {
	if File_iot_grpcapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_iot_grpcapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitialTaskDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTaskStatusInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskDescriptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionalLocationIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coordinate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spectrum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSeries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Media); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestNodeDataInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNodeDataInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestNodesDataInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestNodesDataOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeEventLogInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeEventLogOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestNodeDataOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeDataInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeDataOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestNodeDataInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestNodeDataOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMediaInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutMediaSignedUrlInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutMediaSignedUrlOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMediaSignedUrlInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMediaSignedUrlOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMediaOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksByStatusInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksByStatusOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskByUUIDInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskByUUIDOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskByLongIdInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskByLongIdOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksModifiedSinceTimestampInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_grpcapi_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksModifiedSinceTimestampOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iot_grpcapi_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_iot_grpcapi_proto_goTypes,
		DependencyIndexes: file_iot_grpcapi_proto_depIdxs,
		EnumInfos:         file_iot_grpcapi_proto_enumTypes,
		MessageInfos:      file_iot_grpcapi_proto_msgTypes,
	}.Build()
	File_iot_grpcapi_proto = out.File
	file_iot_grpcapi_proto_rawDesc = nil
	file_iot_grpcapi_proto_goTypes = nil
	file_iot_grpcapi_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IoTClient is the client API for IoT service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IoTClient interface {
	DeepPing(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*common.PrimitiveString, error)
	CreateTask(ctx context.Context, in *InitialTaskDescription, opts ...grpc.CallOption) (*common.PrimitiveString, error)
	GetAllTasks(ctx context.Context, in *common.PrimitiveString, opts ...grpc.CallOption) (*TaskDescriptions, error)
	GetUncompletedTasks(ctx context.Context, in *common.PrimitiveString, opts ...grpc.CallOption) (*TaskDescriptions, error)
	DeleteTask(ctx context.Context, in *TaskUser, opts ...grpc.CallOption) (*common.Void, error)
	GetUncompletedTasksByHierarchy(ctx context.Context, in *common.PrimitiveString, opts ...grpc.CallOption) (*TaskDescriptions, error)
	SetTaskStatus(ctx context.Context, in *SetTaskStatusInput, opts ...grpc.CallOption) (*common.Void, error)
	GetTasksByStatus(ctx context.Context, in *GetTasksByStatusInput, opts ...grpc.CallOption) (*GetTasksByStatusOutput, error)
	GetTaskByUUID(ctx context.Context, in *GetTaskByUUIDInput, opts ...grpc.CallOption) (*GetTaskByUUIDOutput, error)
	GetTaskByLongId(ctx context.Context, in *GetTaskByLongIdInput, opts ...grpc.CallOption) (*GetTaskByLongIdOutput, error)
	GetTasksModifiedSinceTimestamp(ctx context.Context, in *GetTasksModifiedSinceTimestampInput, opts ...grpc.CallOption) (*GetTasksModifiedSinceTimestampOutput, error)
	IngestNodesData(ctx context.Context, in *IngestNodesDataInput, opts ...grpc.CallOption) (*IngestNodesDataOutput, error)
	IngestNodeData(ctx context.Context, in *IngestNodeDataInput, opts ...grpc.CallOption) (*IngestNodeDataOutput, error)
	GetLatestNodeData(ctx context.Context, in *GetLatestNodeDataInput, opts ...grpc.CallOption) (*GetLatestNodeDataOutput, error)
	GetNodeData(ctx context.Context, in *GetNodeDataInput, opts ...grpc.CallOption) (*GetNodeDataOutput, error)
	DeleteNodeData(ctx context.Context, in *DeleteNodeDataInput, opts ...grpc.CallOption) (*common.Void, error)
	GetNodeEventLog(ctx context.Context, in *GetNodeEventLogInput, opts ...grpc.CallOption) (*GetNodeEventLogOutput, error)
	GetMedia(ctx context.Context, in *GetMediaInput, opts ...grpc.CallOption) (*GetMediaOutput, error)
	RequestGetMediaSignedUrl(ctx context.Context, in *GetMediaSignedUrlInput, opts ...grpc.CallOption) (*GetMediaSignedUrlOutput, error)
	RequestPutMediaSignedUrl(ctx context.Context, in *PutMediaSignedUrlInput, opts ...grpc.CallOption) (*PutMediaSignedUrlOutput, error)
}

type ioTClient struct {
	cc grpc.ClientConnInterface
}

func NewIoTClient(cc grpc.ClientConnInterface) IoTClient {
	return &ioTClient{cc}
}

func (c *ioTClient) DeepPing(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*common.PrimitiveString, error) {
	out := new(common.PrimitiveString)
	err := c.cc.Invoke(ctx, "/iot.IoT/DeepPing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) CreateTask(ctx context.Context, in *InitialTaskDescription, opts ...grpc.CallOption) (*common.PrimitiveString, error) {
	out := new(common.PrimitiveString)
	err := c.cc.Invoke(ctx, "/iot.IoT/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) GetAllTasks(ctx context.Context, in *common.PrimitiveString, opts ...grpc.CallOption) (*TaskDescriptions, error) {
	out := new(TaskDescriptions)
	err := c.cc.Invoke(ctx, "/iot.IoT/GetAllTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) GetUncompletedTasks(ctx context.Context, in *common.PrimitiveString, opts ...grpc.CallOption) (*TaskDescriptions, error) {
	out := new(TaskDescriptions)
	err := c.cc.Invoke(ctx, "/iot.IoT/GetUncompletedTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) DeleteTask(ctx context.Context, in *TaskUser, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/iot.IoT/DeleteTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) GetUncompletedTasksByHierarchy(ctx context.Context, in *common.PrimitiveString, opts ...grpc.CallOption) (*TaskDescriptions, error) {
	out := new(TaskDescriptions)
	err := c.cc.Invoke(ctx, "/iot.IoT/GetUncompletedTasksByHierarchy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) SetTaskStatus(ctx context.Context, in *SetTaskStatusInput, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/iot.IoT/SetTaskStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) GetTasksByStatus(ctx context.Context, in *GetTasksByStatusInput, opts ...grpc.CallOption) (*GetTasksByStatusOutput, error) {
	out := new(GetTasksByStatusOutput)
	err := c.cc.Invoke(ctx, "/iot.IoT/GetTasksByStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) GetTaskByUUID(ctx context.Context, in *GetTaskByUUIDInput, opts ...grpc.CallOption) (*GetTaskByUUIDOutput, error) {
	out := new(GetTaskByUUIDOutput)
	err := c.cc.Invoke(ctx, "/iot.IoT/GetTaskByUUID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) GetTaskByLongId(ctx context.Context, in *GetTaskByLongIdInput, opts ...grpc.CallOption) (*GetTaskByLongIdOutput, error) {
	out := new(GetTaskByLongIdOutput)
	err := c.cc.Invoke(ctx, "/iot.IoT/GetTaskByLongId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) GetTasksModifiedSinceTimestamp(ctx context.Context, in *GetTasksModifiedSinceTimestampInput, opts ...grpc.CallOption) (*GetTasksModifiedSinceTimestampOutput, error) {
	out := new(GetTasksModifiedSinceTimestampOutput)
	err := c.cc.Invoke(ctx, "/iot.IoT/GetTasksModifiedSinceTimestamp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) IngestNodesData(ctx context.Context, in *IngestNodesDataInput, opts ...grpc.CallOption) (*IngestNodesDataOutput, error) {
	out := new(IngestNodesDataOutput)
	err := c.cc.Invoke(ctx, "/iot.IoT/IngestNodesData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) IngestNodeData(ctx context.Context, in *IngestNodeDataInput, opts ...grpc.CallOption) (*IngestNodeDataOutput, error) {
	out := new(IngestNodeDataOutput)
	err := c.cc.Invoke(ctx, "/iot.IoT/IngestNodeData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) GetLatestNodeData(ctx context.Context, in *GetLatestNodeDataInput, opts ...grpc.CallOption) (*GetLatestNodeDataOutput, error) {
	out := new(GetLatestNodeDataOutput)
	err := c.cc.Invoke(ctx, "/iot.IoT/GetLatestNodeData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) GetNodeData(ctx context.Context, in *GetNodeDataInput, opts ...grpc.CallOption) (*GetNodeDataOutput, error) {
	out := new(GetNodeDataOutput)
	err := c.cc.Invoke(ctx, "/iot.IoT/GetNodeData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) DeleteNodeData(ctx context.Context, in *DeleteNodeDataInput, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := c.cc.Invoke(ctx, "/iot.IoT/DeleteNodeData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) GetNodeEventLog(ctx context.Context, in *GetNodeEventLogInput, opts ...grpc.CallOption) (*GetNodeEventLogOutput, error) {
	out := new(GetNodeEventLogOutput)
	err := c.cc.Invoke(ctx, "/iot.IoT/GetNodeEventLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) GetMedia(ctx context.Context, in *GetMediaInput, opts ...grpc.CallOption) (*GetMediaOutput, error) {
	out := new(GetMediaOutput)
	err := c.cc.Invoke(ctx, "/iot.IoT/GetMedia", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) RequestGetMediaSignedUrl(ctx context.Context, in *GetMediaSignedUrlInput, opts ...grpc.CallOption) (*GetMediaSignedUrlOutput, error) {
	out := new(GetMediaSignedUrlOutput)
	err := c.cc.Invoke(ctx, "/iot.IoT/RequestGetMediaSignedUrl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) RequestPutMediaSignedUrl(ctx context.Context, in *PutMediaSignedUrlInput, opts ...grpc.CallOption) (*PutMediaSignedUrlOutput, error) {
	out := new(PutMediaSignedUrlOutput)
	err := c.cc.Invoke(ctx, "/iot.IoT/RequestPutMediaSignedUrl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IoTServer is the server API for IoT service.
type IoTServer interface {
	DeepPing(context.Context, *common.Void) (*common.PrimitiveString, error)
	CreateTask(context.Context, *InitialTaskDescription) (*common.PrimitiveString, error)
	GetAllTasks(context.Context, *common.PrimitiveString) (*TaskDescriptions, error)
	GetUncompletedTasks(context.Context, *common.PrimitiveString) (*TaskDescriptions, error)
	DeleteTask(context.Context, *TaskUser) (*common.Void, error)
	GetUncompletedTasksByHierarchy(context.Context, *common.PrimitiveString) (*TaskDescriptions, error)
	SetTaskStatus(context.Context, *SetTaskStatusInput) (*common.Void, error)
	GetTasksByStatus(context.Context, *GetTasksByStatusInput) (*GetTasksByStatusOutput, error)
	GetTaskByUUID(context.Context, *GetTaskByUUIDInput) (*GetTaskByUUIDOutput, error)
	GetTaskByLongId(context.Context, *GetTaskByLongIdInput) (*GetTaskByLongIdOutput, error)
	GetTasksModifiedSinceTimestamp(context.Context, *GetTasksModifiedSinceTimestampInput) (*GetTasksModifiedSinceTimestampOutput, error)
	IngestNodesData(context.Context, *IngestNodesDataInput) (*IngestNodesDataOutput, error)
	IngestNodeData(context.Context, *IngestNodeDataInput) (*IngestNodeDataOutput, error)
	GetLatestNodeData(context.Context, *GetLatestNodeDataInput) (*GetLatestNodeDataOutput, error)
	GetNodeData(context.Context, *GetNodeDataInput) (*GetNodeDataOutput, error)
	DeleteNodeData(context.Context, *DeleteNodeDataInput) (*common.Void, error)
	GetNodeEventLog(context.Context, *GetNodeEventLogInput) (*GetNodeEventLogOutput, error)
	GetMedia(context.Context, *GetMediaInput) (*GetMediaOutput, error)
	RequestGetMediaSignedUrl(context.Context, *GetMediaSignedUrlInput) (*GetMediaSignedUrlOutput, error)
	RequestPutMediaSignedUrl(context.Context, *PutMediaSignedUrlInput) (*PutMediaSignedUrlOutput, error)
}

// UnimplementedIoTServer can be embedded to have forward compatible implementations.
type UnimplementedIoTServer struct {
}

func (*UnimplementedIoTServer) DeepPing(context.Context, *common.Void) (*common.PrimitiveString, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeepPing not implemented")
}
func (*UnimplementedIoTServer) CreateTask(context.Context, *InitialTaskDescription) (*common.PrimitiveString, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}
func (*UnimplementedIoTServer) GetAllTasks(context.Context, *common.PrimitiveString) (*TaskDescriptions, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllTasks not implemented")
}
func (*UnimplementedIoTServer) GetUncompletedTasks(context.Context, *common.PrimitiveString) (*TaskDescriptions, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUncompletedTasks not implemented")
}
func (*UnimplementedIoTServer) DeleteTask(context.Context, *TaskUser) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTask not implemented")
}
func (*UnimplementedIoTServer) GetUncompletedTasksByHierarchy(context.Context, *common.PrimitiveString) (*TaskDescriptions, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUncompletedTasksByHierarchy not implemented")
}
func (*UnimplementedIoTServer) SetTaskStatus(context.Context, *SetTaskStatusInput) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTaskStatus not implemented")
}
func (*UnimplementedIoTServer) GetTasksByStatus(context.Context, *GetTasksByStatusInput) (*GetTasksByStatusOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTasksByStatus not implemented")
}
func (*UnimplementedIoTServer) GetTaskByUUID(context.Context, *GetTaskByUUIDInput) (*GetTaskByUUIDOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskByUUID not implemented")
}
func (*UnimplementedIoTServer) GetTaskByLongId(context.Context, *GetTaskByLongIdInput) (*GetTaskByLongIdOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskByLongId not implemented")
}
func (*UnimplementedIoTServer) GetTasksModifiedSinceTimestamp(context.Context, *GetTasksModifiedSinceTimestampInput) (*GetTasksModifiedSinceTimestampOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTasksModifiedSinceTimestamp not implemented")
}
func (*UnimplementedIoTServer) IngestNodesData(context.Context, *IngestNodesDataInput) (*IngestNodesDataOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IngestNodesData not implemented")
}
func (*UnimplementedIoTServer) IngestNodeData(context.Context, *IngestNodeDataInput) (*IngestNodeDataOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IngestNodeData not implemented")
}
func (*UnimplementedIoTServer) GetLatestNodeData(context.Context, *GetLatestNodeDataInput) (*GetLatestNodeDataOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLatestNodeData not implemented")
}
func (*UnimplementedIoTServer) GetNodeData(context.Context, *GetNodeDataInput) (*GetNodeDataOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodeData not implemented")
}
func (*UnimplementedIoTServer) DeleteNodeData(context.Context, *DeleteNodeDataInput) (*common.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNodeData not implemented")
}
func (*UnimplementedIoTServer) GetNodeEventLog(context.Context, *GetNodeEventLogInput) (*GetNodeEventLogOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodeEventLog not implemented")
}
func (*UnimplementedIoTServer) GetMedia(context.Context, *GetMediaInput) (*GetMediaOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMedia not implemented")
}
func (*UnimplementedIoTServer) RequestGetMediaSignedUrl(context.Context, *GetMediaSignedUrlInput) (*GetMediaSignedUrlOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestGetMediaSignedUrl not implemented")
}
func (*UnimplementedIoTServer) RequestPutMediaSignedUrl(context.Context, *PutMediaSignedUrlInput) (*PutMediaSignedUrlOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestPutMediaSignedUrl not implemented")
}

func RegisterIoTServer(s *grpc.Server, srv IoTServer) {
	s.RegisterService(&_IoT_serviceDesc, srv)
}

func _IoT_DeepPing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).DeepPing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/DeepPing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).DeepPing(ctx, req.(*common.Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitialTaskDescription)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).CreateTask(ctx, req.(*InitialTaskDescription))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_GetAllTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.PrimitiveString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).GetAllTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/GetAllTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).GetAllTasks(ctx, req.(*common.PrimitiveString))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_GetUncompletedTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.PrimitiveString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).GetUncompletedTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/GetUncompletedTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).GetUncompletedTasks(ctx, req.(*common.PrimitiveString))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_DeleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).DeleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/DeleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).DeleteTask(ctx, req.(*TaskUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_GetUncompletedTasksByHierarchy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.PrimitiveString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).GetUncompletedTasksByHierarchy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/GetUncompletedTasksByHierarchy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).GetUncompletedTasksByHierarchy(ctx, req.(*common.PrimitiveString))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_SetTaskStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTaskStatusInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).SetTaskStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/SetTaskStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).SetTaskStatus(ctx, req.(*SetTaskStatusInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_GetTasksByStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTasksByStatusInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).GetTasksByStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/GetTasksByStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).GetTasksByStatus(ctx, req.(*GetTasksByStatusInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_GetTaskByUUID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskByUUIDInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).GetTaskByUUID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/GetTaskByUUID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).GetTaskByUUID(ctx, req.(*GetTaskByUUIDInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_GetTaskByLongId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskByLongIdInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).GetTaskByLongId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/GetTaskByLongId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).GetTaskByLongId(ctx, req.(*GetTaskByLongIdInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_GetTasksModifiedSinceTimestamp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTasksModifiedSinceTimestampInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).GetTasksModifiedSinceTimestamp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/GetTasksModifiedSinceTimestamp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).GetTasksModifiedSinceTimestamp(ctx, req.(*GetTasksModifiedSinceTimestampInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_IngestNodesData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IngestNodesDataInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).IngestNodesData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/IngestNodesData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).IngestNodesData(ctx, req.(*IngestNodesDataInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_IngestNodeData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IngestNodeDataInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).IngestNodeData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/IngestNodeData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).IngestNodeData(ctx, req.(*IngestNodeDataInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_GetLatestNodeData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLatestNodeDataInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).GetLatestNodeData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/GetLatestNodeData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).GetLatestNodeData(ctx, req.(*GetLatestNodeDataInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_GetNodeData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeDataInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).GetNodeData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/GetNodeData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).GetNodeData(ctx, req.(*GetNodeDataInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_DeleteNodeData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNodeDataInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).DeleteNodeData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/DeleteNodeData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).DeleteNodeData(ctx, req.(*DeleteNodeDataInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_GetNodeEventLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeEventLogInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).GetNodeEventLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/GetNodeEventLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).GetNodeEventLog(ctx, req.(*GetNodeEventLogInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_GetMedia_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMediaInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).GetMedia(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/GetMedia",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).GetMedia(ctx, req.(*GetMediaInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_RequestGetMediaSignedUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMediaSignedUrlInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).RequestGetMediaSignedUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/RequestGetMediaSignedUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).RequestGetMediaSignedUrl(ctx, req.(*GetMediaSignedUrlInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_RequestPutMediaSignedUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutMediaSignedUrlInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).RequestPutMediaSignedUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.IoT/RequestPutMediaSignedUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).RequestPutMediaSignedUrl(ctx, req.(*PutMediaSignedUrlInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _IoT_serviceDesc = grpc.ServiceDesc{
	ServiceName: "iot.IoT",
	HandlerType: (*IoTServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeepPing",
			Handler:    _IoT_DeepPing_Handler,
		},
		{
			MethodName: "CreateTask",
			Handler:    _IoT_CreateTask_Handler,
		},
		{
			MethodName: "GetAllTasks",
			Handler:    _IoT_GetAllTasks_Handler,
		},
		{
			MethodName: "GetUncompletedTasks",
			Handler:    _IoT_GetUncompletedTasks_Handler,
		},
		{
			MethodName: "DeleteTask",
			Handler:    _IoT_DeleteTask_Handler,
		},
		{
			MethodName: "GetUncompletedTasksByHierarchy",
			Handler:    _IoT_GetUncompletedTasksByHierarchy_Handler,
		},
		{
			MethodName: "SetTaskStatus",
			Handler:    _IoT_SetTaskStatus_Handler,
		},
		{
			MethodName: "GetTasksByStatus",
			Handler:    _IoT_GetTasksByStatus_Handler,
		},
		{
			MethodName: "GetTaskByUUID",
			Handler:    _IoT_GetTaskByUUID_Handler,
		},
		{
			MethodName: "GetTaskByLongId",
			Handler:    _IoT_GetTaskByLongId_Handler,
		},
		{
			MethodName: "GetTasksModifiedSinceTimestamp",
			Handler:    _IoT_GetTasksModifiedSinceTimestamp_Handler,
		},
		{
			MethodName: "IngestNodesData",
			Handler:    _IoT_IngestNodesData_Handler,
		},
		{
			MethodName: "IngestNodeData",
			Handler:    _IoT_IngestNodeData_Handler,
		},
		{
			MethodName: "GetLatestNodeData",
			Handler:    _IoT_GetLatestNodeData_Handler,
		},
		{
			MethodName: "GetNodeData",
			Handler:    _IoT_GetNodeData_Handler,
		},
		{
			MethodName: "DeleteNodeData",
			Handler:    _IoT_DeleteNodeData_Handler,
		},
		{
			MethodName: "GetNodeEventLog",
			Handler:    _IoT_GetNodeEventLog_Handler,
		},
		{
			MethodName: "GetMedia",
			Handler:    _IoT_GetMedia_Handler,
		},
		{
			MethodName: "RequestGetMediaSignedUrl",
			Handler:    _IoT_RequestGetMediaSignedUrl_Handler,
		},
		{
			MethodName: "RequestPutMediaSignedUrl",
			Handler:    _IoT_RequestPutMediaSignedUrl_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "iot/grpcapi.proto",
}
