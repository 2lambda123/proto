// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: iot/grpcapi.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SKF.Enlight.API.IoT {

  /// <summary>Holder for reflection information generated from iot/grpcapi.proto</summary>
  public static partial class GrpcapiReflection {

    #region Descriptor
    /// <summary>File descriptor for iot/grpcapi.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GrpcapiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFpb3QvZ3JwY2FwaS5wcm90bxIKaW90Z3JwY2FwaRoTY29tbW9uL2NvbW1v",
            "bi5wcm90byLAAgoPVGFza0Rlc2NyaXB0aW9uEg8KB3VzZXJfaWQYASABKAkS",
            "DwoHdGFza19pZBgCIAEoCRIRCgl0YXNrX25hbWUYAyABKAkSFAoMaGllcmFy",
            "Y2h5X2lkGAQgASgJEhoKEmR1ZV9kYXRlX3RpbWVzdGFtcBgFIAEoAxIUCgxp",
            "c19jb21wbGV0ZWQYBiABKAgSQgoXZnVuY3Rpb25hbF9sb2NhdGlvbl9pZHMY",
            "ByABKAsyIS5pb3RncnBjYXBpLkZ1bmN0aW9uYWxMb2NhdGlvbklkcxIYChBl",
            "eHRlcm5hbF90YXNrX2lkGAkgASgJEiYKBnN0YXR1cxgIIAEoDjIWLmlvdGdy",
            "cGNhcGkuVGFza1N0YXR1cxIZChFzdGF0dXNfdXBkYXRlZF9hdBgKIAEoAxIP",
            "Cgdsb25nX2lkGAsgASgDIvQBChZJbml0aWFsVGFza0Rlc2NyaXB0aW9uEg8K",
            "B3VzZXJfaWQYASABKAkSEQoJdGFza19uYW1lGAIgASgJEhQKDGhpZXJhcmNo",
            "eV9pZBgDIAEoCRIaChJkdWVfZGF0ZV90aW1lc3RhbXAYBCABKAMSQgoXZnVu",
            "Y3Rpb25hbF9sb2NhdGlvbl9pZHMYBSABKAsyIS5pb3RncnBjYXBpLkZ1bmN0",
            "aW9uYWxMb2NhdGlvbklkcxIYChBleHRlcm5hbF90YXNrX2lkGAYgASgJEiYK",
            "BnN0YXR1cxgHIAEoDjIWLmlvdGdycGNhcGkuVGFza1N0YXR1cyIsCghUYXNr",
            "VXNlchIPCgd1c2VyX2lkGAEgASgJEg8KB3Rhc2tfaWQYAiABKAkicgoSU2V0",
            "VGFza1N0YXR1c0lucHV0Eg8KB3Rhc2tfaWQYASABKAkSDwoHdXNlcl9pZBgD",
            "IAEoCRImCgZzdGF0dXMYAiABKA4yFi5pb3RncnBjYXBpLlRhc2tTdGF0dXMS",
            "EgoKdXBkYXRlZF9hdBgEIAEoAyJNChBUYXNrRGVzY3JpcHRpb25zEjkKFHRh",
            "c2tfZGVzY3JpcHRpb25fYXJyGAEgAygLMhsuaW90Z3JwY2FwaS5UYXNrRGVz",
            "Y3JpcHRpb24iJwoVRnVuY3Rpb25hbExvY2F0aW9uSWRzEg4KBmlkX2FychgB",
            "IAMoCSLDAgoITm9kZURhdGESEgoKY3JlYXRlZF9hdBgBIAEoAxI1Cgxjb250",
            "ZW50X3R5cGUYAiABKA4yHy5pb3RncnBjYXBpLk5vZGVEYXRhQ29udGVudFR5",
            "cGUSKQoKZGF0YV9wb2ludBgDIAEoCzIVLmlvdGdycGNhcGkuRGF0YVBvaW50",
            "EiYKCHNwZWN0cnVtGAQgASgLMhQuaW90Z3JwY2FwaS5TcGVjdHJ1bRIrCgt0",
            "aW1lX3NlcmllcxgFIAEoCzIWLmlvdGdycGNhcGkuVGltZVNlcmllcxIMCgRu",
            "b3RlGAYgASgJEhEKBW1lZGlhGAcgASgMQgIYARIjCghtZWRpYV92MhgJIAEo",
            "CzIRLmlvdGdycGNhcGkuTWVkaWESGAoQcXVlc3Rpb25fYW5zd2VycxgIIAMo",
            "CRIMCgR0YWdzGAogASgJIiIKCkNvb3JkaW5hdGUSCQoBeBgBIAEoARIJCgF5",
            "GAIgASgBIlcKCURhdGFQb2ludBIqCgpjb29yZGluYXRlGAEgASgLMhYuaW90",
            "Z3JwY2FwaS5Db29yZGluYXRlEg4KBnhfdW5pdBgCIAEoCRIOCgZ5X3VuaXQY",
            "AyABKAkigwEKCFNwZWN0cnVtEisKC2Nvb3JkaW5hdGVzGAEgAygLMhYuaW90",
            "Z3JwY2FwaS5Db29yZGluYXRlEg4KBnhfdW5pdBgCIAEoCRIOCgZ5X3VuaXQY",
            "AyABKAkSFwoPd2luZG93X2Z1bmN0aW9uGAQgASgJEhEKCXNwZWVkX3JwbRgF",
            "IAEoASJZCgpUaW1lU2VyaWVzEisKC2Nvb3JkaW5hdGVzGAEgAygLMhYuaW90",
            "Z3JwY2FwaS5Db29yZGluYXRlEg4KBnhfdW5pdBgCIAEoCRIOCgZ5X3VuaXQY",
            "AyABKAkiRwoFTWVkaWESCgoCaWQYASABKAkSIwoEdHlwZRgCIAEoDjIVLmlv",
            "dGdycGNhcGkuTWVkaWFUeXBlEg0KBW1lZGlhGAMgASgMIm8KE0luZ2VzdE5v",
            "ZGVEYXRhSW5wdXQSDwoHbm9kZV9pZBgBIAEoCRIeCgZvcmlnaW4YAyABKAsy",
            "Di5jb21tb24uT3JpZ2luEicKCW5vZGVfZGF0YRgCIAEoCzIULmlvdGdycGNh",
            "cGkuTm9kZURhdGEiRgoTRGVsZXRlTm9kZURhdGFJbnB1dBIPCgdub2RlX2lk",
            "GAEgASgJEh4KBm9yaWdpbhgCIAEoCzIOLmNvbW1vbi5PcmlnaW4iRgoUSW5n",
            "ZXN0Tm9kZXNEYXRhSW5wdXQSLgoFbm9kZXMYASADKAsyHy5pb3RncnBjYXBp",
            "LkluZ2VzdE5vZGVEYXRhSW5wdXQiKAoVSW5nZXN0Tm9kZXNEYXRhT3V0cHV0",
            "Eg8KB3N1Y2Nlc3MYASABKAgiJgoUR2V0Tm9kZUV2ZW50TG9nSW5wdXQSDgoG",
            "c2VxX2lkGAEgASgJIq8BCglOb2RlRXZlbnQSFAoMYWdncmVnYXRlX2lkGAEg",
            "ASgJEg4KBnNlcV9pZBgCIAEoCRIRCgl0aW1lc3RhbXAYAyABKAMSLQoKZXZl",
            "bnRfdHlwZRgEIAEoDjIZLmlvdGdycGNhcGkuTm9kZUV2ZW50VHlwZRI6ChFk",
            "YXRhX2NvbnRlbnRfdHlwZRgFIAEoDjIfLmlvdGdycGNhcGkuTm9kZURhdGFD",
            "b250ZW50VHlwZSJQChVHZXROb2RlRXZlbnRMb2dPdXRwdXQSJQoGZXZlbnRz",
            "GAEgAygLMhUuaW90Z3JwY2FwaS5Ob2RlRXZlbnQSEAoIaGFzX25leHQYAiAB",
            "KAgiFgoUSW5nZXN0Tm9kZURhdGFPdXRwdXQifgoZSW5nZXN0Tm9kZURhdGFT",
            "dHJlYW1JbnB1dBIPCgdub2RlX2lkGAEgASgJEh4KBm9yaWdpbhgDIAEoCzIO",
            "LmNvbW1vbi5PcmlnaW4SLAoObm9kZV9kYXRhX2xpc3QYAiADKAsyFC5pb3Rn",
            "cnBjYXBpLk5vZGVEYXRhOgIYASIgChpJbmdlc3ROb2RlRGF0YVN0cmVhbU91",
            "dHB1dDoCGAEibQoQR2V0Tm9kZURhdGFJbnB1dBIPCgdub2RlX2lkGAEgASgJ",
            "EhEKCXRpbWVzdGFtcBgCIAEoAxI1Cgxjb250ZW50X3R5cGUYAyABKA4yHy5p",
            "b3RncnBjYXBpLk5vZGVEYXRhQ29udGVudFR5cGUiQQoRR2V0Tm9kZURhdGFP",
            "dXRwdXQSLAoObm9kZV9kYXRhX2xpc3QYASADKAsyFC5pb3RncnBjYXBpLk5v",
            "ZGVEYXRhImAKFkdldExhdGVzdE5vZGVEYXRhSW5wdXQSDwoHbm9kZV9pZBgB",
            "IAEoCRI1Cgxjb250ZW50X3R5cGUYAiABKA4yHy5pb3RncnBjYXBpLk5vZGVE",
            "YXRhQ29udGVudFR5cGUiQgoXR2V0TGF0ZXN0Tm9kZURhdGFPdXRwdXQSJwoJ",
            "bm9kZV9kYXRhGAEgASgLMhQuaW90Z3JwY2FwaS5Ob2RlRGF0YSIcChZHZXRO",
            "b2RlRGF0YVN0cmVhbUlucHV0OgIYASJXChdHZXROb2RlRGF0YVN0cmVhbU91",
            "dHB1dBIPCgdub2RlX2lkGAEgASgJEicKCW5vZGVfZGF0YRgCIAEoCzIULmlv",
            "dGdycGNhcGkuTm9kZURhdGE6AhgBIjIKDUdldE1lZGlhSW5wdXQSDwoHbm9k",
            "ZV9pZBgBIAEoCRIQCghtZWRpYV9pZBgCIAEoCSJjChZQdXRNZWRpYVNpZ25l",
            "ZFVybElucHV0EhAKCG1lZGlhX2lkGAEgASgJEiMKBHR5cGUYAiABKA4yFS5p",
            "b3RncnBjYXBpLk1lZGlhVHlwZRISCgpjb250ZW50TUQ1GAMgASgJIiYKF1B1",
            "dE1lZGlhU2lnbmVkVXJsT3V0cHV0EgsKA3VybBgBIAEoCSIqChZHZXRNZWRp",
            "YVNpZ25lZFVybElucHV0EhAKCG1lZGlhX2lkGAEgASgJIiYKF0dldE1lZGlh",
            "U2lnbmVkVXJsT3V0cHV0EgsKA3VybBgBIAEoCSIyCg5HZXRNZWRpYU91dHB1",
            "dBIgCgVtZWRpYRgBIAEoCzIRLmlvdGdycGNhcGkuTWVkaWEiLgoSR2V0VGFz",
            "a1N0cmVhbUlucHV0EhQKDGhpZXJhcmNoeV9pZBgBIAEoCToCGAEiRAoTR2V0",
            "VGFza1N0cmVhbU91dHB1dBIpCgR0YXNrGAEgASgLMhsuaW90Z3JwY2FwaS5U",
            "YXNrRGVzY3JpcHRpb246AhgBIlUKFUdldFRhc2tzQnlTdGF0dXNJbnB1dBIU",
            "CgxoaWVyYXJjaHlfaWQYASABKAkSJgoGc3RhdHVzGAIgASgOMhYuaW90Z3Jw",
            "Y2FwaS5UYXNrU3RhdHVzIkgKFkdldFRhc2tzQnlTdGF0dXNPdXRwdXQSLgoJ",
            "dGFza19saXN0GAEgAygLMhsuaW90Z3JwY2FwaS5UYXNrRGVzY3JpcHRpb24i",
            "JQoSR2V0VGFza0J5VVVJRElucHV0Eg8KB3Rhc2tfaWQYASABKAkiQAoTR2V0",
            "VGFza0J5VVVJRE91dHB1dBIpCgR0YXNrGAEgASgLMhsuaW90Z3JwY2FwaS5U",
            "YXNrRGVzY3JpcHRpb24iJwoUR2V0VGFza0J5TG9uZ0lkSW5wdXQSDwoHdGFz",
            "a19pZBgBIAEoAyJCChVHZXRUYXNrQnlMb25nSWRPdXRwdXQSKQoEdGFzaxgB",
            "IAEoCzIbLmlvdGdycGNhcGkuVGFza0Rlc2NyaXB0aW9uIlgKI0dldFRhc2tz",
            "TW9kaWZpZWRTaW5jZVRpbWVzdGFtcElucHV0EhEKCXRpbWVzdGFtcBgBIAEo",
            "AxIPCgd1c2VyX2lkGAIgASgJEg0KBWxpbWl0GAMgASgFIlYKJEdldFRhc2tz",
            "TW9kaWZpZWRTaW5jZVRpbWVzdGFtcE91dHB1dBIuCgl0YXNrX2xpc3QYASAD",
            "KAsyGy5pb3RncnBjYXBpLlRhc2tEZXNjcmlwdGlvbiqHAQoNTm9kZUV2ZW50",
            "VHlwZRIRCg1VTktOT1dOX0VWRU5UEAASFQoRQ1JFQVRFX1RBU0tfRVZFTlQQ",
            "ARIZChVTRVRfVEFTS19TVEFUVVNfRVZFTlQQAhIVChFERUxFVEVfVEFTS19F",
            "VkVOVBADEhoKFkFQUEVORF9OT0RFX0RBVEFfRVZFTlQQBCp3CgpUYXNrU3Rh",
            "dHVzEgwKCE5PVF9TRU5UEAASCAoEU0VOVBABEgwKCFJFQ0VJVkVEEAISDQoJ",
            "Q09NUExFVEVEEAMSDwoLSU5fUFJPR1JFU1MQBBIKCgZNSVNTRUQQBRIXChNQ",
            "QVJUSUFMTFlfQ09MTEVDVEVEEAYqjgEKE05vZGVEYXRhQ29udGVudFR5cGUS",
            "CwoHREVGQVVMVBAAEg4KCkRBVEFfUE9JTlQQARIMCghTUEVDVFJVTRACEg8K",
            "C1RJTUVfU0VSSUVTEAMSCAoETk9URRAEEg0KBU1FRElBEAUaAggBEgwKCE1F",
            "RElBX1YyEAcSFAoQUVVFU1RJT05fQU5TV0VSUxAGKkYKCU1lZGlhVHlwZRIL",
            "CgdVTktOT1dOEAASDQoJQVVESU9fV0FWEAESDgoKSU1BR0VfSlBFRxACEg0K",
            "CUlNQUdFX1BORxADMqcOCgNJb1QSMwoIRGVlcFBpbmcSDC5jb21tb24uVm9p",
            "ZBoXLmNvbW1vbi5QcmltaXRpdmVTdHJpbmciABJLCgpDcmVhdGVUYXNrEiIu",
            "aW90Z3JwY2FwaS5Jbml0aWFsVGFza0Rlc2NyaXB0aW9uGhcuY29tbW9uLlBy",
            "aW1pdGl2ZVN0cmluZyIAEkYKC0dldEFsbFRhc2tzEhcuY29tbW9uLlByaW1p",
            "dGl2ZVN0cmluZxocLmlvdGdycGNhcGkuVGFza0Rlc2NyaXB0aW9ucyIAEk4K",
            "E0dldFVuY29tcGxldGVkVGFza3MSFy5jb21tb24uUHJpbWl0aXZlU3RyaW5n",
            "GhwuaW90Z3JwY2FwaS5UYXNrRGVzY3JpcHRpb25zIgASOwoQU2V0VGFza0Nv",
            "bXBsZXRlZBIULmlvdGdycGNhcGkuVGFza1VzZXIaDC5jb21tb24uVm9pZCID",
            "iAIBEjIKCkRlbGV0ZVRhc2sSFC5pb3RncnBjYXBpLlRhc2tVc2VyGgwuY29t",
            "bW9uLlZvaWQiABJZCh5HZXRVbmNvbXBsZXRlZFRhc2tzQnlIaWVyYXJjaHkS",
            "Fy5jb21tb24uUHJpbWl0aXZlU3RyaW5nGhwuaW90Z3JwY2FwaS5UYXNrRGVz",
            "Y3JpcHRpb25zIgASPwoNU2V0VGFza1N0YXR1cxIeLmlvdGdycGNhcGkuU2V0",
            "VGFza1N0YXR1c0lucHV0GgwuY29tbW9uLlZvaWQiABJXCg1HZXRUYXNrU3Ry",
            "ZWFtEh4uaW90Z3JwY2FwaS5HZXRUYXNrU3RyZWFtSW5wdXQaHy5pb3RncnBj",
            "YXBpLkdldFRhc2tTdHJlYW1PdXRwdXQiA4gCATABElsKEEdldFRhc2tzQnlT",
            "dGF0dXMSIS5pb3RncnBjYXBpLkdldFRhc2tzQnlTdGF0dXNJbnB1dBoiLmlv",
            "dGdycGNhcGkuR2V0VGFza3NCeVN0YXR1c091dHB1dCIAElIKDUdldFRhc2tC",
            "eVVVSUQSHi5pb3RncnBjYXBpLkdldFRhc2tCeVVVSURJbnB1dBofLmlvdGdy",
            "cGNhcGkuR2V0VGFza0J5VVVJRE91dHB1dCIAElgKD0dldFRhc2tCeUxvbmdJ",
            "ZBIgLmlvdGdycGNhcGkuR2V0VGFza0J5TG9uZ0lkSW5wdXQaIS5pb3RncnBj",
            "YXBpLkdldFRhc2tCeUxvbmdJZE91dHB1dCIAEoUBCh5HZXRUYXNrc01vZGlm",
            "aWVkU2luY2VUaW1lc3RhbXASLy5pb3RncnBjYXBpLkdldFRhc2tzTW9kaWZp",
            "ZWRTaW5jZVRpbWVzdGFtcElucHV0GjAuaW90Z3JwY2FwaS5HZXRUYXNrc01v",
            "ZGlmaWVkU2luY2VUaW1lc3RhbXBPdXRwdXQiABJYCg9Jbmdlc3ROb2Rlc0Rh",
            "dGESIC5pb3RncnBjYXBpLkluZ2VzdE5vZGVzRGF0YUlucHV0GiEuaW90Z3Jw",
            "Y2FwaS5Jbmdlc3ROb2Rlc0RhdGFPdXRwdXQiABJVCg5Jbmdlc3ROb2RlRGF0",
            "YRIfLmlvdGdycGNhcGkuSW5nZXN0Tm9kZURhdGFJbnB1dBogLmlvdGdycGNh",
            "cGkuSW5nZXN0Tm9kZURhdGFPdXRwdXQiABJeChFHZXRMYXRlc3ROb2RlRGF0",
            "YRIiLmlvdGdycGNhcGkuR2V0TGF0ZXN0Tm9kZURhdGFJbnB1dBojLmlvdGdy",
            "cGNhcGkuR2V0TGF0ZXN0Tm9kZURhdGFPdXRwdXQiABJMCgtHZXROb2RlRGF0",
            "YRIcLmlvdGdycGNhcGkuR2V0Tm9kZURhdGFJbnB1dBodLmlvdGdycGNhcGku",
            "R2V0Tm9kZURhdGFPdXRwdXQiABJBCg5EZWxldGVOb2RlRGF0YRIfLmlvdGdy",
            "cGNhcGkuRGVsZXRlTm9kZURhdGFJbnB1dBoMLmNvbW1vbi5Wb2lkIgASWAoP",
            "R2V0Tm9kZUV2ZW50TG9nEiAuaW90Z3JwY2FwaS5HZXROb2RlRXZlbnRMb2dJ",
            "bnB1dBohLmlvdGdycGNhcGkuR2V0Tm9kZUV2ZW50TG9nT3V0cHV0IgASQwoI",
            "R2V0TWVkaWESGS5pb3RncnBjYXBpLkdldE1lZGlhSW5wdXQaGi5pb3RncnBj",
            "YXBpLkdldE1lZGlhT3V0cHV0IgASZQoYUmVxdWVzdEdldE1lZGlhU2lnbmVk",
            "VXJsEiIuaW90Z3JwY2FwaS5HZXRNZWRpYVNpZ25lZFVybElucHV0GiMuaW90",
            "Z3JwY2FwaS5HZXRNZWRpYVNpZ25lZFVybE91dHB1dCIAEmUKGFJlcXVlc3RQ",
            "dXRNZWRpYVNpZ25lZFVybBIiLmlvdGdycGNhcGkuUHV0TWVkaWFTaWduZWRV",
            "cmxJbnB1dBojLmlvdGdycGNhcGkuUHV0TWVkaWFTaWduZWRVcmxPdXRwdXQi",
            "AEIWqgITU0tGLkVubGlnaHQuQVBJLklvVGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SKF.Enlight.API.Common.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SKF.Enlight.API.IoT.NodeEventType), typeof(global::SKF.Enlight.API.IoT.TaskStatus), typeof(global::SKF.Enlight.API.IoT.NodeDataContentType), typeof(global::SKF.Enlight.API.IoT.MediaType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.TaskDescription), global::SKF.Enlight.API.IoT.TaskDescription.Parser, new[]{ "UserId", "TaskId", "TaskName", "HierarchyId", "DueDateTimestamp", "IsCompleted", "FunctionalLocationIds", "ExternalTaskId", "Status", "StatusUpdatedAt", "LongId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.InitialTaskDescription), global::SKF.Enlight.API.IoT.InitialTaskDescription.Parser, new[]{ "UserId", "TaskName", "HierarchyId", "DueDateTimestamp", "FunctionalLocationIds", "ExternalTaskId", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.TaskUser), global::SKF.Enlight.API.IoT.TaskUser.Parser, new[]{ "UserId", "TaskId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.SetTaskStatusInput), global::SKF.Enlight.API.IoT.SetTaskStatusInput.Parser, new[]{ "TaskId", "UserId", "Status", "UpdatedAt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.TaskDescriptions), global::SKF.Enlight.API.IoT.TaskDescriptions.Parser, new[]{ "TaskDescriptionArr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.FunctionalLocationIds), global::SKF.Enlight.API.IoT.FunctionalLocationIds.Parser, new[]{ "IdArr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.NodeData), global::SKF.Enlight.API.IoT.NodeData.Parser, new[]{ "CreatedAt", "ContentType", "DataPoint", "Spectrum", "TimeSeries", "Note", "Media", "MediaV2", "QuestionAnswers", "Tags" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.Coordinate), global::SKF.Enlight.API.IoT.Coordinate.Parser, new[]{ "X", "Y" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.DataPoint), global::SKF.Enlight.API.IoT.DataPoint.Parser, new[]{ "Coordinate", "XUnit", "YUnit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.Spectrum), global::SKF.Enlight.API.IoT.Spectrum.Parser, new[]{ "Coordinates", "XUnit", "YUnit", "WindowFunction", "SpeedRpm" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.TimeSeries), global::SKF.Enlight.API.IoT.TimeSeries.Parser, new[]{ "Coordinates", "XUnit", "YUnit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.Media), global::SKF.Enlight.API.IoT.Media.Parser, new[]{ "Id", "Type", "Media_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.IngestNodeDataInput), global::SKF.Enlight.API.IoT.IngestNodeDataInput.Parser, new[]{ "NodeId", "Origin", "NodeData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.DeleteNodeDataInput), global::SKF.Enlight.API.IoT.DeleteNodeDataInput.Parser, new[]{ "NodeId", "Origin" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.IngestNodesDataInput), global::SKF.Enlight.API.IoT.IngestNodesDataInput.Parser, new[]{ "Nodes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.IngestNodesDataOutput), global::SKF.Enlight.API.IoT.IngestNodesDataOutput.Parser, new[]{ "Success" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetNodeEventLogInput), global::SKF.Enlight.API.IoT.GetNodeEventLogInput.Parser, new[]{ "SeqId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.NodeEvent), global::SKF.Enlight.API.IoT.NodeEvent.Parser, new[]{ "AggregateId", "SeqId", "Timestamp", "EventType", "DataContentType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetNodeEventLogOutput), global::SKF.Enlight.API.IoT.GetNodeEventLogOutput.Parser, new[]{ "Events", "HasNext" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.IngestNodeDataOutput), global::SKF.Enlight.API.IoT.IngestNodeDataOutput.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.IngestNodeDataStreamInput), global::SKF.Enlight.API.IoT.IngestNodeDataStreamInput.Parser, new[]{ "NodeId", "Origin", "NodeDataList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.IngestNodeDataStreamOutput), global::SKF.Enlight.API.IoT.IngestNodeDataStreamOutput.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetNodeDataInput), global::SKF.Enlight.API.IoT.GetNodeDataInput.Parser, new[]{ "NodeId", "Timestamp", "ContentType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetNodeDataOutput), global::SKF.Enlight.API.IoT.GetNodeDataOutput.Parser, new[]{ "NodeDataList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetLatestNodeDataInput), global::SKF.Enlight.API.IoT.GetLatestNodeDataInput.Parser, new[]{ "NodeId", "ContentType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetLatestNodeDataOutput), global::SKF.Enlight.API.IoT.GetLatestNodeDataOutput.Parser, new[]{ "NodeData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetNodeDataStreamInput), global::SKF.Enlight.API.IoT.GetNodeDataStreamInput.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetNodeDataStreamOutput), global::SKF.Enlight.API.IoT.GetNodeDataStreamOutput.Parser, new[]{ "NodeId", "NodeData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetMediaInput), global::SKF.Enlight.API.IoT.GetMediaInput.Parser, new[]{ "NodeId", "MediaId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.PutMediaSignedUrlInput), global::SKF.Enlight.API.IoT.PutMediaSignedUrlInput.Parser, new[]{ "MediaId", "Type", "ContentMD5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.PutMediaSignedUrlOutput), global::SKF.Enlight.API.IoT.PutMediaSignedUrlOutput.Parser, new[]{ "Url" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetMediaSignedUrlInput), global::SKF.Enlight.API.IoT.GetMediaSignedUrlInput.Parser, new[]{ "MediaId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetMediaSignedUrlOutput), global::SKF.Enlight.API.IoT.GetMediaSignedUrlOutput.Parser, new[]{ "Url" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetMediaOutput), global::SKF.Enlight.API.IoT.GetMediaOutput.Parser, new[]{ "Media" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetTaskStreamInput), global::SKF.Enlight.API.IoT.GetTaskStreamInput.Parser, new[]{ "HierarchyId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetTaskStreamOutput), global::SKF.Enlight.API.IoT.GetTaskStreamOutput.Parser, new[]{ "Task" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetTasksByStatusInput), global::SKF.Enlight.API.IoT.GetTasksByStatusInput.Parser, new[]{ "HierarchyId", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetTasksByStatusOutput), global::SKF.Enlight.API.IoT.GetTasksByStatusOutput.Parser, new[]{ "TaskList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetTaskByUUIDInput), global::SKF.Enlight.API.IoT.GetTaskByUUIDInput.Parser, new[]{ "TaskId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetTaskByUUIDOutput), global::SKF.Enlight.API.IoT.GetTaskByUUIDOutput.Parser, new[]{ "Task" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetTaskByLongIdInput), global::SKF.Enlight.API.IoT.GetTaskByLongIdInput.Parser, new[]{ "TaskId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetTaskByLongIdOutput), global::SKF.Enlight.API.IoT.GetTaskByLongIdOutput.Parser, new[]{ "Task" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetTasksModifiedSinceTimestampInput), global::SKF.Enlight.API.IoT.GetTasksModifiedSinceTimestampInput.Parser, new[]{ "Timestamp", "UserId", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.IoT.GetTasksModifiedSinceTimestampOutput), global::SKF.Enlight.API.IoT.GetTasksModifiedSinceTimestampOutput.Parser, new[]{ "TaskList" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum NodeEventType {
    [pbr::OriginalName("UNKNOWN_EVENT")] UnknownEvent = 0,
    [pbr::OriginalName("CREATE_TASK_EVENT")] CreateTaskEvent = 1,
    [pbr::OriginalName("SET_TASK_STATUS_EVENT")] SetTaskStatusEvent = 2,
    [pbr::OriginalName("DELETE_TASK_EVENT")] DeleteTaskEvent = 3,
    [pbr::OriginalName("APPEND_NODE_DATA_EVENT")] AppendNodeDataEvent = 4,
  }

  public enum TaskStatus {
    [pbr::OriginalName("NOT_SENT")] NotSent = 0,
    [pbr::OriginalName("SENT")] Sent = 1,
    [pbr::OriginalName("RECEIVED")] Received = 2,
    [pbr::OriginalName("COMPLETED")] Completed = 3,
    [pbr::OriginalName("IN_PROGRESS")] InProgress = 4,
    [pbr::OriginalName("MISSED")] Missed = 5,
    [pbr::OriginalName("PARTIALLY_COLLECTED")] PartiallyCollected = 6,
  }

  public enum NodeDataContentType {
    [pbr::OriginalName("DEFAULT")] Default = 0,
    [pbr::OriginalName("DATA_POINT")] DataPoint = 1,
    [pbr::OriginalName("SPECTRUM")] Spectrum = 2,
    [pbr::OriginalName("TIME_SERIES")] TimeSeries = 3,
    [pbr::OriginalName("NOTE")] Note = 4,
    [pbr::OriginalName("MEDIA")] Media = 5,
    [pbr::OriginalName("MEDIA_V2")] MediaV2 = 7,
    [pbr::OriginalName("QUESTION_ANSWERS")] QuestionAnswers = 6,
  }

  public enum MediaType {
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("AUDIO_WAV")] AudioWav = 1,
    [pbr::OriginalName("IMAGE_JPEG")] ImageJpeg = 2,
    [pbr::OriginalName("IMAGE_PNG")] ImagePng = 3,
  }

  #endregion

  #region Messages
  public sealed partial class TaskDescription : pb::IMessage<TaskDescription> {
    private static readonly pb::MessageParser<TaskDescription> _parser = new pb::MessageParser<TaskDescription>(() => new TaskDescription());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskDescription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskDescription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskDescription(TaskDescription other) : this() {
      userId_ = other.userId_;
      taskId_ = other.taskId_;
      taskName_ = other.taskName_;
      hierarchyId_ = other.hierarchyId_;
      dueDateTimestamp_ = other.dueDateTimestamp_;
      isCompleted_ = other.isCompleted_;
      functionalLocationIds_ = other.functionalLocationIds_ != null ? other.functionalLocationIds_.Clone() : null;
      externalTaskId_ = other.externalTaskId_;
      status_ = other.status_;
      statusUpdatedAt_ = other.statusUpdatedAt_;
      longId_ = other.longId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskDescription Clone() {
      return new TaskDescription(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 2;
    private string taskId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskId {
      get { return taskId_; }
      set {
        taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "task_name" field.</summary>
    public const int TaskNameFieldNumber = 3;
    private string taskName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskName {
      get { return taskName_; }
      set {
        taskName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hierarchy_id" field.</summary>
    public const int HierarchyIdFieldNumber = 4;
    private string hierarchyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HierarchyId {
      get { return hierarchyId_; }
      set {
        hierarchyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "due_date_timestamp" field.</summary>
    public const int DueDateTimestampFieldNumber = 5;
    private long dueDateTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DueDateTimestamp {
      get { return dueDateTimestamp_; }
      set {
        dueDateTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "is_completed" field.</summary>
    public const int IsCompletedFieldNumber = 6;
    private bool isCompleted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCompleted {
      get { return isCompleted_; }
      set {
        isCompleted_ = value;
      }
    }

    /// <summary>Field number for the "functional_location_ids" field.</summary>
    public const int FunctionalLocationIdsFieldNumber = 7;
    private global::SKF.Enlight.API.IoT.FunctionalLocationIds functionalLocationIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.FunctionalLocationIds FunctionalLocationIds {
      get { return functionalLocationIds_; }
      set {
        functionalLocationIds_ = value;
      }
    }

    /// <summary>Field number for the "external_task_id" field.</summary>
    public const int ExternalTaskIdFieldNumber = 9;
    private string externalTaskId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalTaskId {
      get { return externalTaskId_; }
      set {
        externalTaskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 8;
    private global::SKF.Enlight.API.IoT.TaskStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.TaskStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "status_updated_at" field.</summary>
    public const int StatusUpdatedAtFieldNumber = 10;
    private long statusUpdatedAt_;
    /// <summary>
    /// ms
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StatusUpdatedAt {
      get { return statusUpdatedAt_; }
      set {
        statusUpdatedAt_ = value;
      }
    }

    /// <summary>Field number for the "long_id" field.</summary>
    public const int LongIdFieldNumber = 11;
    private long longId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LongId {
      get { return longId_; }
      set {
        longId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskDescription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskDescription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (TaskId != other.TaskId) return false;
      if (TaskName != other.TaskName) return false;
      if (HierarchyId != other.HierarchyId) return false;
      if (DueDateTimestamp != other.DueDateTimestamp) return false;
      if (IsCompleted != other.IsCompleted) return false;
      if (!object.Equals(FunctionalLocationIds, other.FunctionalLocationIds)) return false;
      if (ExternalTaskId != other.ExternalTaskId) return false;
      if (Status != other.Status) return false;
      if (StatusUpdatedAt != other.StatusUpdatedAt) return false;
      if (LongId != other.LongId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
      if (TaskName.Length != 0) hash ^= TaskName.GetHashCode();
      if (HierarchyId.Length != 0) hash ^= HierarchyId.GetHashCode();
      if (DueDateTimestamp != 0L) hash ^= DueDateTimestamp.GetHashCode();
      if (IsCompleted != false) hash ^= IsCompleted.GetHashCode();
      if (functionalLocationIds_ != null) hash ^= FunctionalLocationIds.GetHashCode();
      if (ExternalTaskId.Length != 0) hash ^= ExternalTaskId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (StatusUpdatedAt != 0L) hash ^= StatusUpdatedAt.GetHashCode();
      if (LongId != 0L) hash ^= LongId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (TaskId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskId);
      }
      if (TaskName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TaskName);
      }
      if (HierarchyId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(HierarchyId);
      }
      if (DueDateTimestamp != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(DueDateTimestamp);
      }
      if (IsCompleted != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsCompleted);
      }
      if (functionalLocationIds_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(FunctionalLocationIds);
      }
      if (Status != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Status);
      }
      if (ExternalTaskId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ExternalTaskId);
      }
      if (StatusUpdatedAt != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(StatusUpdatedAt);
      }
      if (LongId != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(LongId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (TaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
      }
      if (TaskName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskName);
      }
      if (HierarchyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HierarchyId);
      }
      if (DueDateTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DueDateTimestamp);
      }
      if (IsCompleted != false) {
        size += 1 + 1;
      }
      if (functionalLocationIds_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FunctionalLocationIds);
      }
      if (ExternalTaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalTaskId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (StatusUpdatedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StatusUpdatedAt);
      }
      if (LongId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LongId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskDescription other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.TaskId.Length != 0) {
        TaskId = other.TaskId;
      }
      if (other.TaskName.Length != 0) {
        TaskName = other.TaskName;
      }
      if (other.HierarchyId.Length != 0) {
        HierarchyId = other.HierarchyId;
      }
      if (other.DueDateTimestamp != 0L) {
        DueDateTimestamp = other.DueDateTimestamp;
      }
      if (other.IsCompleted != false) {
        IsCompleted = other.IsCompleted;
      }
      if (other.functionalLocationIds_ != null) {
        if (functionalLocationIds_ == null) {
          functionalLocationIds_ = new global::SKF.Enlight.API.IoT.FunctionalLocationIds();
        }
        FunctionalLocationIds.MergeFrom(other.FunctionalLocationIds);
      }
      if (other.ExternalTaskId.Length != 0) {
        ExternalTaskId = other.ExternalTaskId;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.StatusUpdatedAt != 0L) {
        StatusUpdatedAt = other.StatusUpdatedAt;
      }
      if (other.LongId != 0L) {
        LongId = other.LongId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            TaskId = input.ReadString();
            break;
          }
          case 26: {
            TaskName = input.ReadString();
            break;
          }
          case 34: {
            HierarchyId = input.ReadString();
            break;
          }
          case 40: {
            DueDateTimestamp = input.ReadInt64();
            break;
          }
          case 48: {
            IsCompleted = input.ReadBool();
            break;
          }
          case 58: {
            if (functionalLocationIds_ == null) {
              functionalLocationIds_ = new global::SKF.Enlight.API.IoT.FunctionalLocationIds();
            }
            input.ReadMessage(functionalLocationIds_);
            break;
          }
          case 64: {
            status_ = (global::SKF.Enlight.API.IoT.TaskStatus) input.ReadEnum();
            break;
          }
          case 74: {
            ExternalTaskId = input.ReadString();
            break;
          }
          case 80: {
            StatusUpdatedAt = input.ReadInt64();
            break;
          }
          case 88: {
            LongId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InitialTaskDescription : pb::IMessage<InitialTaskDescription> {
    private static readonly pb::MessageParser<InitialTaskDescription> _parser = new pb::MessageParser<InitialTaskDescription>(() => new InitialTaskDescription());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitialTaskDescription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialTaskDescription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialTaskDescription(InitialTaskDescription other) : this() {
      userId_ = other.userId_;
      taskName_ = other.taskName_;
      hierarchyId_ = other.hierarchyId_;
      dueDateTimestamp_ = other.dueDateTimestamp_;
      functionalLocationIds_ = other.functionalLocationIds_ != null ? other.functionalLocationIds_.Clone() : null;
      externalTaskId_ = other.externalTaskId_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialTaskDescription Clone() {
      return new InitialTaskDescription(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "task_name" field.</summary>
    public const int TaskNameFieldNumber = 2;
    private string taskName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskName {
      get { return taskName_; }
      set {
        taskName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hierarchy_id" field.</summary>
    public const int HierarchyIdFieldNumber = 3;
    private string hierarchyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HierarchyId {
      get { return hierarchyId_; }
      set {
        hierarchyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "due_date_timestamp" field.</summary>
    public const int DueDateTimestampFieldNumber = 4;
    private long dueDateTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DueDateTimestamp {
      get { return dueDateTimestamp_; }
      set {
        dueDateTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "functional_location_ids" field.</summary>
    public const int FunctionalLocationIdsFieldNumber = 5;
    private global::SKF.Enlight.API.IoT.FunctionalLocationIds functionalLocationIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.FunctionalLocationIds FunctionalLocationIds {
      get { return functionalLocationIds_; }
      set {
        functionalLocationIds_ = value;
      }
    }

    /// <summary>Field number for the "external_task_id" field.</summary>
    public const int ExternalTaskIdFieldNumber = 6;
    private string externalTaskId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalTaskId {
      get { return externalTaskId_; }
      set {
        externalTaskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 7;
    private global::SKF.Enlight.API.IoT.TaskStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.TaskStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitialTaskDescription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitialTaskDescription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (TaskName != other.TaskName) return false;
      if (HierarchyId != other.HierarchyId) return false;
      if (DueDateTimestamp != other.DueDateTimestamp) return false;
      if (!object.Equals(FunctionalLocationIds, other.FunctionalLocationIds)) return false;
      if (ExternalTaskId != other.ExternalTaskId) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (TaskName.Length != 0) hash ^= TaskName.GetHashCode();
      if (HierarchyId.Length != 0) hash ^= HierarchyId.GetHashCode();
      if (DueDateTimestamp != 0L) hash ^= DueDateTimestamp.GetHashCode();
      if (functionalLocationIds_ != null) hash ^= FunctionalLocationIds.GetHashCode();
      if (ExternalTaskId.Length != 0) hash ^= ExternalTaskId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (TaskName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskName);
      }
      if (HierarchyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HierarchyId);
      }
      if (DueDateTimestamp != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(DueDateTimestamp);
      }
      if (functionalLocationIds_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(FunctionalLocationIds);
      }
      if (ExternalTaskId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ExternalTaskId);
      }
      if (Status != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (TaskName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskName);
      }
      if (HierarchyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HierarchyId);
      }
      if (DueDateTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DueDateTimestamp);
      }
      if (functionalLocationIds_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FunctionalLocationIds);
      }
      if (ExternalTaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalTaskId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitialTaskDescription other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.TaskName.Length != 0) {
        TaskName = other.TaskName;
      }
      if (other.HierarchyId.Length != 0) {
        HierarchyId = other.HierarchyId;
      }
      if (other.DueDateTimestamp != 0L) {
        DueDateTimestamp = other.DueDateTimestamp;
      }
      if (other.functionalLocationIds_ != null) {
        if (functionalLocationIds_ == null) {
          functionalLocationIds_ = new global::SKF.Enlight.API.IoT.FunctionalLocationIds();
        }
        FunctionalLocationIds.MergeFrom(other.FunctionalLocationIds);
      }
      if (other.ExternalTaskId.Length != 0) {
        ExternalTaskId = other.ExternalTaskId;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            TaskName = input.ReadString();
            break;
          }
          case 26: {
            HierarchyId = input.ReadString();
            break;
          }
          case 32: {
            DueDateTimestamp = input.ReadInt64();
            break;
          }
          case 42: {
            if (functionalLocationIds_ == null) {
              functionalLocationIds_ = new global::SKF.Enlight.API.IoT.FunctionalLocationIds();
            }
            input.ReadMessage(functionalLocationIds_);
            break;
          }
          case 50: {
            ExternalTaskId = input.ReadString();
            break;
          }
          case 56: {
            status_ = (global::SKF.Enlight.API.IoT.TaskStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TaskUser : pb::IMessage<TaskUser> {
    private static readonly pb::MessageParser<TaskUser> _parser = new pb::MessageParser<TaskUser>(() => new TaskUser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskUser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskUser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskUser(TaskUser other) : this() {
      userId_ = other.userId_;
      taskId_ = other.taskId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskUser Clone() {
      return new TaskUser(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 2;
    private string taskId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskId {
      get { return taskId_; }
      set {
        taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskUser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskUser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (TaskId != other.TaskId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (TaskId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (TaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskUser other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.TaskId.Length != 0) {
        TaskId = other.TaskId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            TaskId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetTaskStatusInput : pb::IMessage<SetTaskStatusInput> {
    private static readonly pb::MessageParser<SetTaskStatusInput> _parser = new pb::MessageParser<SetTaskStatusInput>(() => new SetTaskStatusInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetTaskStatusInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetTaskStatusInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetTaskStatusInput(SetTaskStatusInput other) : this() {
      taskId_ = other.taskId_;
      userId_ = other.userId_;
      status_ = other.status_;
      updatedAt_ = other.updatedAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetTaskStatusInput Clone() {
      return new SetTaskStatusInput(this);
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 1;
    private string taskId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskId {
      get { return taskId_; }
      set {
        taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::SKF.Enlight.API.IoT.TaskStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.TaskStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 4;
    private long updatedAt_;
    /// <summary>
    /// ms
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetTaskStatusInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetTaskStatusInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskId != other.TaskId) return false;
      if (UserId != other.UserId) return false;
      if (Status != other.Status) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (UpdatedAt != 0L) hash ^= UpdatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TaskId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaskId);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (UpdatedAt != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(UpdatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (UpdatedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UpdatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetTaskStatusInput other) {
      if (other == null) {
        return;
      }
      if (other.TaskId.Length != 0) {
        TaskId = other.TaskId;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.UpdatedAt != 0L) {
        UpdatedAt = other.UpdatedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TaskId = input.ReadString();
            break;
          }
          case 16: {
            status_ = (global::SKF.Enlight.API.IoT.TaskStatus) input.ReadEnum();
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
          case 32: {
            UpdatedAt = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Task descriptions
  /// </summary>
  public sealed partial class TaskDescriptions : pb::IMessage<TaskDescriptions> {
    private static readonly pb::MessageParser<TaskDescriptions> _parser = new pb::MessageParser<TaskDescriptions>(() => new TaskDescriptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskDescriptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskDescriptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskDescriptions(TaskDescriptions other) : this() {
      taskDescriptionArr_ = other.taskDescriptionArr_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskDescriptions Clone() {
      return new TaskDescriptions(this);
    }

    /// <summary>Field number for the "task_description_arr" field.</summary>
    public const int TaskDescriptionArrFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SKF.Enlight.API.IoT.TaskDescription> _repeated_taskDescriptionArr_codec
        = pb::FieldCodec.ForMessage(10, global::SKF.Enlight.API.IoT.TaskDescription.Parser);
    private readonly pbc::RepeatedField<global::SKF.Enlight.API.IoT.TaskDescription> taskDescriptionArr_ = new pbc::RepeatedField<global::SKF.Enlight.API.IoT.TaskDescription>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SKF.Enlight.API.IoT.TaskDescription> TaskDescriptionArr {
      get { return taskDescriptionArr_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskDescriptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskDescriptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!taskDescriptionArr_.Equals(other.taskDescriptionArr_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= taskDescriptionArr_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      taskDescriptionArr_.WriteTo(output, _repeated_taskDescriptionArr_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += taskDescriptionArr_.CalculateSize(_repeated_taskDescriptionArr_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskDescriptions other) {
      if (other == null) {
        return;
      }
      taskDescriptionArr_.Add(other.taskDescriptionArr_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            taskDescriptionArr_.AddEntriesFrom(input, _repeated_taskDescriptionArr_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FunctionalLocationIds : pb::IMessage<FunctionalLocationIds> {
    private static readonly pb::MessageParser<FunctionalLocationIds> _parser = new pb::MessageParser<FunctionalLocationIds>(() => new FunctionalLocationIds());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FunctionalLocationIds> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionalLocationIds() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionalLocationIds(FunctionalLocationIds other) : this() {
      idArr_ = other.idArr_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionalLocationIds Clone() {
      return new FunctionalLocationIds(this);
    }

    /// <summary>Field number for the "id_arr" field.</summary>
    public const int IdArrFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_idArr_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> idArr_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> IdArr {
      get { return idArr_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FunctionalLocationIds);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FunctionalLocationIds other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!idArr_.Equals(other.idArr_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= idArr_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      idArr_.WriteTo(output, _repeated_idArr_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += idArr_.CalculateSize(_repeated_idArr_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FunctionalLocationIds other) {
      if (other == null) {
        return;
      }
      idArr_.Add(other.idArr_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            idArr_.AddEntriesFrom(input, _repeated_idArr_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NodeData : pb::IMessage<NodeData> {
    private static readonly pb::MessageParser<NodeData> _parser = new pb::MessageParser<NodeData>(() => new NodeData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeData(NodeData other) : this() {
      createdAt_ = other.createdAt_;
      contentType_ = other.contentType_;
      dataPoint_ = other.dataPoint_ != null ? other.dataPoint_.Clone() : null;
      spectrum_ = other.spectrum_ != null ? other.spectrum_.Clone() : null;
      timeSeries_ = other.timeSeries_ != null ? other.timeSeries_.Clone() : null;
      note_ = other.note_;
      media_ = other.media_;
      mediaV2_ = other.mediaV2_ != null ? other.mediaV2_.Clone() : null;
      questionAnswers_ = other.questionAnswers_.Clone();
      tags_ = other.tags_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeData Clone() {
      return new NodeData(this);
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 1;
    private long createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 2;
    private global::SKF.Enlight.API.IoT.NodeDataContentType contentType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.NodeDataContentType ContentType {
      get { return contentType_; }
      set {
        contentType_ = value;
      }
    }

    /// <summary>Field number for the "data_point" field.</summary>
    public const int DataPointFieldNumber = 3;
    private global::SKF.Enlight.API.IoT.DataPoint dataPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.DataPoint DataPoint {
      get { return dataPoint_; }
      set {
        dataPoint_ = value;
      }
    }

    /// <summary>Field number for the "spectrum" field.</summary>
    public const int SpectrumFieldNumber = 4;
    private global::SKF.Enlight.API.IoT.Spectrum spectrum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.Spectrum Spectrum {
      get { return spectrum_; }
      set {
        spectrum_ = value;
      }
    }

    /// <summary>Field number for the "time_series" field.</summary>
    public const int TimeSeriesFieldNumber = 5;
    private global::SKF.Enlight.API.IoT.TimeSeries timeSeries_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.TimeSeries TimeSeries {
      get { return timeSeries_; }
      set {
        timeSeries_ = value;
      }
    }

    /// <summary>Field number for the "note" field.</summary>
    public const int NoteFieldNumber = 6;
    private string note_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Note {
      get { return note_; }
      set {
        note_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "media" field.</summary>
    public const int MediaFieldNumber = 7;
    private pb::ByteString media_ = pb::ByteString.Empty;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Media {
      get { return media_; }
      set {
        media_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "media_v2" field.</summary>
    public const int MediaV2FieldNumber = 9;
    private global::SKF.Enlight.API.IoT.Media mediaV2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.Media MediaV2 {
      get { return mediaV2_; }
      set {
        mediaV2_ = value;
      }
    }

    /// <summary>Field number for the "question_answers" field.</summary>
    public const int QuestionAnswersFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_questionAnswers_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> questionAnswers_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> QuestionAnswers {
      get { return questionAnswers_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 10;
    private string tags_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tags {
      get { return tags_; }
      set {
        tags_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodeData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CreatedAt != other.CreatedAt) return false;
      if (ContentType != other.ContentType) return false;
      if (!object.Equals(DataPoint, other.DataPoint)) return false;
      if (!object.Equals(Spectrum, other.Spectrum)) return false;
      if (!object.Equals(TimeSeries, other.TimeSeries)) return false;
      if (Note != other.Note) return false;
      if (Media != other.Media) return false;
      if (!object.Equals(MediaV2, other.MediaV2)) return false;
      if(!questionAnswers_.Equals(other.questionAnswers_)) return false;
      if (Tags != other.Tags) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CreatedAt != 0L) hash ^= CreatedAt.GetHashCode();
      if (ContentType != 0) hash ^= ContentType.GetHashCode();
      if (dataPoint_ != null) hash ^= DataPoint.GetHashCode();
      if (spectrum_ != null) hash ^= Spectrum.GetHashCode();
      if (timeSeries_ != null) hash ^= TimeSeries.GetHashCode();
      if (Note.Length != 0) hash ^= Note.GetHashCode();
      if (Media.Length != 0) hash ^= Media.GetHashCode();
      if (mediaV2_ != null) hash ^= MediaV2.GetHashCode();
      hash ^= questionAnswers_.GetHashCode();
      if (Tags.Length != 0) hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CreatedAt != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CreatedAt);
      }
      if (ContentType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ContentType);
      }
      if (dataPoint_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DataPoint);
      }
      if (spectrum_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Spectrum);
      }
      if (timeSeries_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TimeSeries);
      }
      if (Note.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Note);
      }
      if (Media.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(Media);
      }
      questionAnswers_.WriteTo(output, _repeated_questionAnswers_codec);
      if (mediaV2_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(MediaV2);
      }
      if (Tags.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Tags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CreatedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatedAt);
      }
      if (ContentType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContentType);
      }
      if (dataPoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataPoint);
      }
      if (spectrum_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spectrum);
      }
      if (timeSeries_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeSeries);
      }
      if (Note.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Note);
      }
      if (Media.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Media);
      }
      if (mediaV2_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MediaV2);
      }
      size += questionAnswers_.CalculateSize(_repeated_questionAnswers_codec);
      if (Tags.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeData other) {
      if (other == null) {
        return;
      }
      if (other.CreatedAt != 0L) {
        CreatedAt = other.CreatedAt;
      }
      if (other.ContentType != 0) {
        ContentType = other.ContentType;
      }
      if (other.dataPoint_ != null) {
        if (dataPoint_ == null) {
          dataPoint_ = new global::SKF.Enlight.API.IoT.DataPoint();
        }
        DataPoint.MergeFrom(other.DataPoint);
      }
      if (other.spectrum_ != null) {
        if (spectrum_ == null) {
          spectrum_ = new global::SKF.Enlight.API.IoT.Spectrum();
        }
        Spectrum.MergeFrom(other.Spectrum);
      }
      if (other.timeSeries_ != null) {
        if (timeSeries_ == null) {
          timeSeries_ = new global::SKF.Enlight.API.IoT.TimeSeries();
        }
        TimeSeries.MergeFrom(other.TimeSeries);
      }
      if (other.Note.Length != 0) {
        Note = other.Note;
      }
      if (other.Media.Length != 0) {
        Media = other.Media;
      }
      if (other.mediaV2_ != null) {
        if (mediaV2_ == null) {
          mediaV2_ = new global::SKF.Enlight.API.IoT.Media();
        }
        MediaV2.MergeFrom(other.MediaV2);
      }
      questionAnswers_.Add(other.questionAnswers_);
      if (other.Tags.Length != 0) {
        Tags = other.Tags;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CreatedAt = input.ReadInt64();
            break;
          }
          case 16: {
            contentType_ = (global::SKF.Enlight.API.IoT.NodeDataContentType) input.ReadEnum();
            break;
          }
          case 26: {
            if (dataPoint_ == null) {
              dataPoint_ = new global::SKF.Enlight.API.IoT.DataPoint();
            }
            input.ReadMessage(dataPoint_);
            break;
          }
          case 34: {
            if (spectrum_ == null) {
              spectrum_ = new global::SKF.Enlight.API.IoT.Spectrum();
            }
            input.ReadMessage(spectrum_);
            break;
          }
          case 42: {
            if (timeSeries_ == null) {
              timeSeries_ = new global::SKF.Enlight.API.IoT.TimeSeries();
            }
            input.ReadMessage(timeSeries_);
            break;
          }
          case 50: {
            Note = input.ReadString();
            break;
          }
          case 58: {
            Media = input.ReadBytes();
            break;
          }
          case 66: {
            questionAnswers_.AddEntriesFrom(input, _repeated_questionAnswers_codec);
            break;
          }
          case 74: {
            if (mediaV2_ == null) {
              mediaV2_ = new global::SKF.Enlight.API.IoT.Media();
            }
            input.ReadMessage(mediaV2_);
            break;
          }
          case 82: {
            Tags = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Coordinate : pb::IMessage<Coordinate> {
    private static readonly pb::MessageParser<Coordinate> _parser = new pb::MessageParser<Coordinate>(() => new Coordinate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Coordinate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Coordinate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Coordinate(Coordinate other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Coordinate Clone() {
      return new Coordinate(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Coordinate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Coordinate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0D) {
        size += 1 + 8;
      }
      if (Y != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Coordinate other) {
      if (other == null) {
        return;
      }
      if (other.X != 0D) {
        X = other.X;
      }
      if (other.Y != 0D) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataPoint : pb::IMessage<DataPoint> {
    private static readonly pb::MessageParser<DataPoint> _parser = new pb::MessageParser<DataPoint>(() => new DataPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPoint(DataPoint other) : this() {
      coordinate_ = other.coordinate_ != null ? other.coordinate_.Clone() : null;
      xUnit_ = other.xUnit_;
      yUnit_ = other.yUnit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPoint Clone() {
      return new DataPoint(this);
    }

    /// <summary>Field number for the "coordinate" field.</summary>
    public const int CoordinateFieldNumber = 1;
    private global::SKF.Enlight.API.IoT.Coordinate coordinate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.Coordinate Coordinate {
      get { return coordinate_; }
      set {
        coordinate_ = value;
      }
    }

    /// <summary>Field number for the "x_unit" field.</summary>
    public const int XUnitFieldNumber = 2;
    private string xUnit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string XUnit {
      get { return xUnit_; }
      set {
        xUnit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "y_unit" field.</summary>
    public const int YUnitFieldNumber = 3;
    private string yUnit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string YUnit {
      get { return yUnit_; }
      set {
        yUnit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Coordinate, other.Coordinate)) return false;
      if (XUnit != other.XUnit) return false;
      if (YUnit != other.YUnit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (coordinate_ != null) hash ^= Coordinate.GetHashCode();
      if (XUnit.Length != 0) hash ^= XUnit.GetHashCode();
      if (YUnit.Length != 0) hash ^= YUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (coordinate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Coordinate);
      }
      if (XUnit.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(XUnit);
      }
      if (YUnit.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(YUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (coordinate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Coordinate);
      }
      if (XUnit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(XUnit);
      }
      if (YUnit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(YUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataPoint other) {
      if (other == null) {
        return;
      }
      if (other.coordinate_ != null) {
        if (coordinate_ == null) {
          coordinate_ = new global::SKF.Enlight.API.IoT.Coordinate();
        }
        Coordinate.MergeFrom(other.Coordinate);
      }
      if (other.XUnit.Length != 0) {
        XUnit = other.XUnit;
      }
      if (other.YUnit.Length != 0) {
        YUnit = other.YUnit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (coordinate_ == null) {
              coordinate_ = new global::SKF.Enlight.API.IoT.Coordinate();
            }
            input.ReadMessage(coordinate_);
            break;
          }
          case 18: {
            XUnit = input.ReadString();
            break;
          }
          case 26: {
            YUnit = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Spectrum : pb::IMessage<Spectrum> {
    private static readonly pb::MessageParser<Spectrum> _parser = new pb::MessageParser<Spectrum>(() => new Spectrum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Spectrum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Spectrum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Spectrum(Spectrum other) : this() {
      coordinates_ = other.coordinates_.Clone();
      xUnit_ = other.xUnit_;
      yUnit_ = other.yUnit_;
      windowFunction_ = other.windowFunction_;
      speedRpm_ = other.speedRpm_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Spectrum Clone() {
      return new Spectrum(this);
    }

    /// <summary>Field number for the "coordinates" field.</summary>
    public const int CoordinatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SKF.Enlight.API.IoT.Coordinate> _repeated_coordinates_codec
        = pb::FieldCodec.ForMessage(10, global::SKF.Enlight.API.IoT.Coordinate.Parser);
    private readonly pbc::RepeatedField<global::SKF.Enlight.API.IoT.Coordinate> coordinates_ = new pbc::RepeatedField<global::SKF.Enlight.API.IoT.Coordinate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SKF.Enlight.API.IoT.Coordinate> Coordinates {
      get { return coordinates_; }
    }

    /// <summary>Field number for the "x_unit" field.</summary>
    public const int XUnitFieldNumber = 2;
    private string xUnit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string XUnit {
      get { return xUnit_; }
      set {
        xUnit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "y_unit" field.</summary>
    public const int YUnitFieldNumber = 3;
    private string yUnit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string YUnit {
      get { return yUnit_; }
      set {
        yUnit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "window_function" field.</summary>
    public const int WindowFunctionFieldNumber = 4;
    private string windowFunction_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WindowFunction {
      get { return windowFunction_; }
      set {
        windowFunction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "speed_rpm" field.</summary>
    public const int SpeedRpmFieldNumber = 5;
    private double speedRpm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double SpeedRpm {
      get { return speedRpm_; }
      set {
        speedRpm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Spectrum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Spectrum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!coordinates_.Equals(other.coordinates_)) return false;
      if (XUnit != other.XUnit) return false;
      if (YUnit != other.YUnit) return false;
      if (WindowFunction != other.WindowFunction) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SpeedRpm, other.SpeedRpm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= coordinates_.GetHashCode();
      if (XUnit.Length != 0) hash ^= XUnit.GetHashCode();
      if (YUnit.Length != 0) hash ^= YUnit.GetHashCode();
      if (WindowFunction.Length != 0) hash ^= WindowFunction.GetHashCode();
      if (SpeedRpm != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SpeedRpm);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      coordinates_.WriteTo(output, _repeated_coordinates_codec);
      if (XUnit.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(XUnit);
      }
      if (YUnit.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(YUnit);
      }
      if (WindowFunction.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(WindowFunction);
      }
      if (SpeedRpm != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(SpeedRpm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += coordinates_.CalculateSize(_repeated_coordinates_codec);
      if (XUnit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(XUnit);
      }
      if (YUnit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(YUnit);
      }
      if (WindowFunction.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WindowFunction);
      }
      if (SpeedRpm != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Spectrum other) {
      if (other == null) {
        return;
      }
      coordinates_.Add(other.coordinates_);
      if (other.XUnit.Length != 0) {
        XUnit = other.XUnit;
      }
      if (other.YUnit.Length != 0) {
        YUnit = other.YUnit;
      }
      if (other.WindowFunction.Length != 0) {
        WindowFunction = other.WindowFunction;
      }
      if (other.SpeedRpm != 0D) {
        SpeedRpm = other.SpeedRpm;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            coordinates_.AddEntriesFrom(input, _repeated_coordinates_codec);
            break;
          }
          case 18: {
            XUnit = input.ReadString();
            break;
          }
          case 26: {
            YUnit = input.ReadString();
            break;
          }
          case 34: {
            WindowFunction = input.ReadString();
            break;
          }
          case 41: {
            SpeedRpm = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TimeSeries : pb::IMessage<TimeSeries> {
    private static readonly pb::MessageParser<TimeSeries> _parser = new pb::MessageParser<TimeSeries>(() => new TimeSeries());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeSeries> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSeries() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSeries(TimeSeries other) : this() {
      coordinates_ = other.coordinates_.Clone();
      xUnit_ = other.xUnit_;
      yUnit_ = other.yUnit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSeries Clone() {
      return new TimeSeries(this);
    }

    /// <summary>Field number for the "coordinates" field.</summary>
    public const int CoordinatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SKF.Enlight.API.IoT.Coordinate> _repeated_coordinates_codec
        = pb::FieldCodec.ForMessage(10, global::SKF.Enlight.API.IoT.Coordinate.Parser);
    private readonly pbc::RepeatedField<global::SKF.Enlight.API.IoT.Coordinate> coordinates_ = new pbc::RepeatedField<global::SKF.Enlight.API.IoT.Coordinate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SKF.Enlight.API.IoT.Coordinate> Coordinates {
      get { return coordinates_; }
    }

    /// <summary>Field number for the "x_unit" field.</summary>
    public const int XUnitFieldNumber = 2;
    private string xUnit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string XUnit {
      get { return xUnit_; }
      set {
        xUnit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "y_unit" field.</summary>
    public const int YUnitFieldNumber = 3;
    private string yUnit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string YUnit {
      get { return yUnit_; }
      set {
        yUnit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeSeries);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeSeries other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!coordinates_.Equals(other.coordinates_)) return false;
      if (XUnit != other.XUnit) return false;
      if (YUnit != other.YUnit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= coordinates_.GetHashCode();
      if (XUnit.Length != 0) hash ^= XUnit.GetHashCode();
      if (YUnit.Length != 0) hash ^= YUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      coordinates_.WriteTo(output, _repeated_coordinates_codec);
      if (XUnit.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(XUnit);
      }
      if (YUnit.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(YUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += coordinates_.CalculateSize(_repeated_coordinates_codec);
      if (XUnit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(XUnit);
      }
      if (YUnit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(YUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeSeries other) {
      if (other == null) {
        return;
      }
      coordinates_.Add(other.coordinates_);
      if (other.XUnit.Length != 0) {
        XUnit = other.XUnit;
      }
      if (other.YUnit.Length != 0) {
        YUnit = other.YUnit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            coordinates_.AddEntriesFrom(input, _repeated_coordinates_codec);
            break;
          }
          case 18: {
            XUnit = input.ReadString();
            break;
          }
          case 26: {
            YUnit = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Media : pb::IMessage<Media> {
    private static readonly pb::MessageParser<Media> _parser = new pb::MessageParser<Media>(() => new Media());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Media> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Media() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Media(Media other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      media_ = other.media_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Media Clone() {
      return new Media(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::SKF.Enlight.API.IoT.MediaType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.MediaType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "media" field.</summary>
    public const int Media_FieldNumber = 3;
    private pb::ByteString media_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Media_ {
      get { return media_; }
      set {
        media_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Media);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Media other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (Media_ != other.Media_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Media_.Length != 0) hash ^= Media_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (Media_.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Media_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Media_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Media_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Media other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Media_.Length != 0) {
        Media_ = other.Media_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            type_ = (global::SKF.Enlight.API.IoT.MediaType) input.ReadEnum();
            break;
          }
          case 26: {
            Media_ = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// IngestNodeData messages
  /// </summary>
  public sealed partial class IngestNodeDataInput : pb::IMessage<IngestNodeDataInput> {
    private static readonly pb::MessageParser<IngestNodeDataInput> _parser = new pb::MessageParser<IngestNodeDataInput>(() => new IngestNodeDataInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IngestNodeDataInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngestNodeDataInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngestNodeDataInput(IngestNodeDataInput other) : this() {
      nodeId_ = other.nodeId_;
      origin_ = other.origin_ != null ? other.origin_.Clone() : null;
      nodeData_ = other.nodeData_ != null ? other.nodeData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngestNodeDataInput Clone() {
      return new IngestNodeDataInput(this);
    }

    /// <summary>Field number for the "node_id" field.</summary>
    public const int NodeIdFieldNumber = 1;
    private string nodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeId {
      get { return nodeId_; }
      set {
        nodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 3;
    private global::SKF.Enlight.API.Common.Origin origin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Common.Origin Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    /// <summary>Field number for the "node_data" field.</summary>
    public const int NodeDataFieldNumber = 2;
    private global::SKF.Enlight.API.IoT.NodeData nodeData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.NodeData NodeData {
      get { return nodeData_; }
      set {
        nodeData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IngestNodeDataInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IngestNodeDataInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeId != other.NodeId) return false;
      if (!object.Equals(Origin, other.Origin)) return false;
      if (!object.Equals(NodeData, other.NodeData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeId.Length != 0) hash ^= NodeId.GetHashCode();
      if (origin_ != null) hash ^= Origin.GetHashCode();
      if (nodeData_ != null) hash ^= NodeData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeId);
      }
      if (nodeData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NodeData);
      }
      if (origin_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Origin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeId);
      }
      if (origin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
      }
      if (nodeData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodeData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IngestNodeDataInput other) {
      if (other == null) {
        return;
      }
      if (other.NodeId.Length != 0) {
        NodeId = other.NodeId;
      }
      if (other.origin_ != null) {
        if (origin_ == null) {
          origin_ = new global::SKF.Enlight.API.Common.Origin();
        }
        Origin.MergeFrom(other.Origin);
      }
      if (other.nodeData_ != null) {
        if (nodeData_ == null) {
          nodeData_ = new global::SKF.Enlight.API.IoT.NodeData();
        }
        NodeData.MergeFrom(other.NodeData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeId = input.ReadString();
            break;
          }
          case 18: {
            if (nodeData_ == null) {
              nodeData_ = new global::SKF.Enlight.API.IoT.NodeData();
            }
            input.ReadMessage(nodeData_);
            break;
          }
          case 26: {
            if (origin_ == null) {
              origin_ = new global::SKF.Enlight.API.Common.Origin();
            }
            input.ReadMessage(origin_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DeleteNodeData message
  /// </summary>
  public sealed partial class DeleteNodeDataInput : pb::IMessage<DeleteNodeDataInput> {
    private static readonly pb::MessageParser<DeleteNodeDataInput> _parser = new pb::MessageParser<DeleteNodeDataInput>(() => new DeleteNodeDataInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteNodeDataInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNodeDataInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNodeDataInput(DeleteNodeDataInput other) : this() {
      nodeId_ = other.nodeId_;
      origin_ = other.origin_ != null ? other.origin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNodeDataInput Clone() {
      return new DeleteNodeDataInput(this);
    }

    /// <summary>Field number for the "node_id" field.</summary>
    public const int NodeIdFieldNumber = 1;
    private string nodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeId {
      get { return nodeId_; }
      set {
        nodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 2;
    private global::SKF.Enlight.API.Common.Origin origin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Common.Origin Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteNodeDataInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteNodeDataInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeId != other.NodeId) return false;
      if (!object.Equals(Origin, other.Origin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeId.Length != 0) hash ^= NodeId.GetHashCode();
      if (origin_ != null) hash ^= Origin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeId);
      }
      if (origin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Origin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeId);
      }
      if (origin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteNodeDataInput other) {
      if (other == null) {
        return;
      }
      if (other.NodeId.Length != 0) {
        NodeId = other.NodeId;
      }
      if (other.origin_ != null) {
        if (origin_ == null) {
          origin_ = new global::SKF.Enlight.API.Common.Origin();
        }
        Origin.MergeFrom(other.Origin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeId = input.ReadString();
            break;
          }
          case 18: {
            if (origin_ == null) {
              origin_ = new global::SKF.Enlight.API.Common.Origin();
            }
            input.ReadMessage(origin_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// IngestNodesData messages
  /// </summary>
  public sealed partial class IngestNodesDataInput : pb::IMessage<IngestNodesDataInput> {
    private static readonly pb::MessageParser<IngestNodesDataInput> _parser = new pb::MessageParser<IngestNodesDataInput>(() => new IngestNodesDataInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IngestNodesDataInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngestNodesDataInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngestNodesDataInput(IngestNodesDataInput other) : this() {
      nodes_ = other.nodes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngestNodesDataInput Clone() {
      return new IngestNodesDataInput(this);
    }

    /// <summary>Field number for the "nodes" field.</summary>
    public const int NodesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SKF.Enlight.API.IoT.IngestNodeDataInput> _repeated_nodes_codec
        = pb::FieldCodec.ForMessage(10, global::SKF.Enlight.API.IoT.IngestNodeDataInput.Parser);
    private readonly pbc::RepeatedField<global::SKF.Enlight.API.IoT.IngestNodeDataInput> nodes_ = new pbc::RepeatedField<global::SKF.Enlight.API.IoT.IngestNodeDataInput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SKF.Enlight.API.IoT.IngestNodeDataInput> Nodes {
      get { return nodes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IngestNodesDataInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IngestNodesDataInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nodes_.Equals(other.nodes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nodes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      nodes_.WriteTo(output, _repeated_nodes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += nodes_.CalculateSize(_repeated_nodes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IngestNodesDataInput other) {
      if (other == null) {
        return;
      }
      nodes_.Add(other.nodes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IngestNodesDataOutput : pb::IMessage<IngestNodesDataOutput> {
    private static readonly pb::MessageParser<IngestNodesDataOutput> _parser = new pb::MessageParser<IngestNodesDataOutput>(() => new IngestNodesDataOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IngestNodesDataOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngestNodesDataOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngestNodesDataOutput(IngestNodesDataOutput other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngestNodesDataOutput Clone() {
      return new IngestNodesDataOutput(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IngestNodesDataOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IngestNodesDataOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IngestNodesDataOutput other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetNodeEventLogInput : pb::IMessage<GetNodeEventLogInput> {
    private static readonly pb::MessageParser<GetNodeEventLogInput> _parser = new pb::MessageParser<GetNodeEventLogInput>(() => new GetNodeEventLogInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNodeEventLogInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodeEventLogInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodeEventLogInput(GetNodeEventLogInput other) : this() {
      seqId_ = other.seqId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodeEventLogInput Clone() {
      return new GetNodeEventLogInput(this);
    }

    /// <summary>Field number for the "seq_id" field.</summary>
    public const int SeqIdFieldNumber = 1;
    private string seqId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SeqId {
      get { return seqId_; }
      set {
        seqId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNodeEventLogInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNodeEventLogInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SeqId != other.SeqId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SeqId.Length != 0) hash ^= SeqId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SeqId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SeqId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SeqId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeqId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNodeEventLogInput other) {
      if (other == null) {
        return;
      }
      if (other.SeqId.Length != 0) {
        SeqId = other.SeqId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SeqId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NodeEvent : pb::IMessage<NodeEvent> {
    private static readonly pb::MessageParser<NodeEvent> _parser = new pb::MessageParser<NodeEvent>(() => new NodeEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeEvent(NodeEvent other) : this() {
      aggregateId_ = other.aggregateId_;
      seqId_ = other.seqId_;
      timestamp_ = other.timestamp_;
      eventType_ = other.eventType_;
      dataContentType_ = other.dataContentType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeEvent Clone() {
      return new NodeEvent(this);
    }

    /// <summary>Field number for the "aggregate_id" field.</summary>
    public const int AggregateIdFieldNumber = 1;
    private string aggregateId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AggregateId {
      get { return aggregateId_; }
      set {
        aggregateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seq_id" field.</summary>
    public const int SeqIdFieldNumber = 2;
    private string seqId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SeqId {
      get { return seqId_; }
      set {
        seqId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "event_type" field.</summary>
    public const int EventTypeFieldNumber = 4;
    private global::SKF.Enlight.API.IoT.NodeEventType eventType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.NodeEventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "data_content_type" field.</summary>
    public const int DataContentTypeFieldNumber = 5;
    private global::SKF.Enlight.API.IoT.NodeDataContentType dataContentType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.NodeDataContentType DataContentType {
      get { return dataContentType_; }
      set {
        dataContentType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodeEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AggregateId != other.AggregateId) return false;
      if (SeqId != other.SeqId) return false;
      if (Timestamp != other.Timestamp) return false;
      if (EventType != other.EventType) return false;
      if (DataContentType != other.DataContentType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AggregateId.Length != 0) hash ^= AggregateId.GetHashCode();
      if (SeqId.Length != 0) hash ^= SeqId.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (EventType != 0) hash ^= EventType.GetHashCode();
      if (DataContentType != 0) hash ^= DataContentType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AggregateId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AggregateId);
      }
      if (SeqId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SeqId);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (EventType != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) EventType);
      }
      if (DataContentType != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) DataContentType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AggregateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AggregateId);
      }
      if (SeqId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeqId);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (EventType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (DataContentType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DataContentType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeEvent other) {
      if (other == null) {
        return;
      }
      if (other.AggregateId.Length != 0) {
        AggregateId = other.AggregateId;
      }
      if (other.SeqId.Length != 0) {
        SeqId = other.SeqId;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.EventType != 0) {
        EventType = other.EventType;
      }
      if (other.DataContentType != 0) {
        DataContentType = other.DataContentType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AggregateId = input.ReadString();
            break;
          }
          case 18: {
            SeqId = input.ReadString();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 32: {
            eventType_ = (global::SKF.Enlight.API.IoT.NodeEventType) input.ReadEnum();
            break;
          }
          case 40: {
            dataContentType_ = (global::SKF.Enlight.API.IoT.NodeDataContentType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetNodeEventLogOutput : pb::IMessage<GetNodeEventLogOutput> {
    private static readonly pb::MessageParser<GetNodeEventLogOutput> _parser = new pb::MessageParser<GetNodeEventLogOutput>(() => new GetNodeEventLogOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNodeEventLogOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodeEventLogOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodeEventLogOutput(GetNodeEventLogOutput other) : this() {
      events_ = other.events_.Clone();
      hasNext_ = other.hasNext_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodeEventLogOutput Clone() {
      return new GetNodeEventLogOutput(this);
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SKF.Enlight.API.IoT.NodeEvent> _repeated_events_codec
        = pb::FieldCodec.ForMessage(10, global::SKF.Enlight.API.IoT.NodeEvent.Parser);
    private readonly pbc::RepeatedField<global::SKF.Enlight.API.IoT.NodeEvent> events_ = new pbc::RepeatedField<global::SKF.Enlight.API.IoT.NodeEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SKF.Enlight.API.IoT.NodeEvent> Events {
      get { return events_; }
    }

    /// <summary>Field number for the "has_next" field.</summary>
    public const int HasNextFieldNumber = 2;
    private bool hasNext_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNext {
      get { return hasNext_; }
      set {
        hasNext_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNodeEventLogOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNodeEventLogOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!events_.Equals(other.events_)) return false;
      if (HasNext != other.HasNext) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= events_.GetHashCode();
      if (HasNext != false) hash ^= HasNext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      events_.WriteTo(output, _repeated_events_codec);
      if (HasNext != false) {
        output.WriteRawTag(16);
        output.WriteBool(HasNext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += events_.CalculateSize(_repeated_events_codec);
      if (HasNext != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNodeEventLogOutput other) {
      if (other == null) {
        return;
      }
      events_.Add(other.events_);
      if (other.HasNext != false) {
        HasNext = other.HasNext;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
          case 16: {
            HasNext = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IngestNodeDataOutput : pb::IMessage<IngestNodeDataOutput> {
    private static readonly pb::MessageParser<IngestNodeDataOutput> _parser = new pb::MessageParser<IngestNodeDataOutput>(() => new IngestNodeDataOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IngestNodeDataOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngestNodeDataOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngestNodeDataOutput(IngestNodeDataOutput other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngestNodeDataOutput Clone() {
      return new IngestNodeDataOutput(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IngestNodeDataOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IngestNodeDataOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IngestNodeDataOutput other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// IngestNodeDataStream messages
  /// </summary>
  [global::System.ObsoleteAttribute]
  public sealed partial class IngestNodeDataStreamInput : pb::IMessage<IngestNodeDataStreamInput> {
    private static readonly pb::MessageParser<IngestNodeDataStreamInput> _parser = new pb::MessageParser<IngestNodeDataStreamInput>(() => new IngestNodeDataStreamInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IngestNodeDataStreamInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngestNodeDataStreamInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngestNodeDataStreamInput(IngestNodeDataStreamInput other) : this() {
      nodeId_ = other.nodeId_;
      origin_ = other.origin_ != null ? other.origin_.Clone() : null;
      nodeDataList_ = other.nodeDataList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngestNodeDataStreamInput Clone() {
      return new IngestNodeDataStreamInput(this);
    }

    /// <summary>Field number for the "node_id" field.</summary>
    public const int NodeIdFieldNumber = 1;
    private string nodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeId {
      get { return nodeId_; }
      set {
        nodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 3;
    private global::SKF.Enlight.API.Common.Origin origin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Common.Origin Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    /// <summary>Field number for the "node_data_list" field.</summary>
    public const int NodeDataListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SKF.Enlight.API.IoT.NodeData> _repeated_nodeDataList_codec
        = pb::FieldCodec.ForMessage(18, global::SKF.Enlight.API.IoT.NodeData.Parser);
    private readonly pbc::RepeatedField<global::SKF.Enlight.API.IoT.NodeData> nodeDataList_ = new pbc::RepeatedField<global::SKF.Enlight.API.IoT.NodeData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SKF.Enlight.API.IoT.NodeData> NodeDataList {
      get { return nodeDataList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IngestNodeDataStreamInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IngestNodeDataStreamInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeId != other.NodeId) return false;
      if (!object.Equals(Origin, other.Origin)) return false;
      if(!nodeDataList_.Equals(other.nodeDataList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeId.Length != 0) hash ^= NodeId.GetHashCode();
      if (origin_ != null) hash ^= Origin.GetHashCode();
      hash ^= nodeDataList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeId);
      }
      nodeDataList_.WriteTo(output, _repeated_nodeDataList_codec);
      if (origin_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Origin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeId);
      }
      if (origin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
      }
      size += nodeDataList_.CalculateSize(_repeated_nodeDataList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IngestNodeDataStreamInput other) {
      if (other == null) {
        return;
      }
      if (other.NodeId.Length != 0) {
        NodeId = other.NodeId;
      }
      if (other.origin_ != null) {
        if (origin_ == null) {
          origin_ = new global::SKF.Enlight.API.Common.Origin();
        }
        Origin.MergeFrom(other.Origin);
      }
      nodeDataList_.Add(other.nodeDataList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeId = input.ReadString();
            break;
          }
          case 18: {
            nodeDataList_.AddEntriesFrom(input, _repeated_nodeDataList_codec);
            break;
          }
          case 26: {
            if (origin_ == null) {
              origin_ = new global::SKF.Enlight.API.Common.Origin();
            }
            input.ReadMessage(origin_);
            break;
          }
        }
      }
    }

  }

  [global::System.ObsoleteAttribute]
  public sealed partial class IngestNodeDataStreamOutput : pb::IMessage<IngestNodeDataStreamOutput> {
    private static readonly pb::MessageParser<IngestNodeDataStreamOutput> _parser = new pb::MessageParser<IngestNodeDataStreamOutput>(() => new IngestNodeDataStreamOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IngestNodeDataStreamOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngestNodeDataStreamOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngestNodeDataStreamOutput(IngestNodeDataStreamOutput other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngestNodeDataStreamOutput Clone() {
      return new IngestNodeDataStreamOutput(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IngestNodeDataStreamOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IngestNodeDataStreamOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IngestNodeDataStreamOutput other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// GetNodeData messages
  /// </summary>
  public sealed partial class GetNodeDataInput : pb::IMessage<GetNodeDataInput> {
    private static readonly pb::MessageParser<GetNodeDataInput> _parser = new pb::MessageParser<GetNodeDataInput>(() => new GetNodeDataInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNodeDataInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodeDataInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodeDataInput(GetNodeDataInput other) : this() {
      nodeId_ = other.nodeId_;
      timestamp_ = other.timestamp_;
      contentType_ = other.contentType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodeDataInput Clone() {
      return new GetNodeDataInput(this);
    }

    /// <summary>Field number for the "node_id" field.</summary>
    public const int NodeIdFieldNumber = 1;
    private string nodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeId {
      get { return nodeId_; }
      set {
        nodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 3;
    private global::SKF.Enlight.API.IoT.NodeDataContentType contentType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.NodeDataContentType ContentType {
      get { return contentType_; }
      set {
        contentType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNodeDataInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNodeDataInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeId != other.NodeId) return false;
      if (Timestamp != other.Timestamp) return false;
      if (ContentType != other.ContentType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeId.Length != 0) hash ^= NodeId.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (ContentType != 0) hash ^= ContentType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeId);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      if (ContentType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ContentType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeId);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (ContentType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContentType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNodeDataInput other) {
      if (other == null) {
        return;
      }
      if (other.NodeId.Length != 0) {
        NodeId = other.NodeId;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.ContentType != 0) {
        ContentType = other.ContentType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeId = input.ReadString();
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 24: {
            contentType_ = (global::SKF.Enlight.API.IoT.NodeDataContentType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetNodeDataOutput : pb::IMessage<GetNodeDataOutput> {
    private static readonly pb::MessageParser<GetNodeDataOutput> _parser = new pb::MessageParser<GetNodeDataOutput>(() => new GetNodeDataOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNodeDataOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodeDataOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodeDataOutput(GetNodeDataOutput other) : this() {
      nodeDataList_ = other.nodeDataList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodeDataOutput Clone() {
      return new GetNodeDataOutput(this);
    }

    /// <summary>Field number for the "node_data_list" field.</summary>
    public const int NodeDataListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SKF.Enlight.API.IoT.NodeData> _repeated_nodeDataList_codec
        = pb::FieldCodec.ForMessage(10, global::SKF.Enlight.API.IoT.NodeData.Parser);
    private readonly pbc::RepeatedField<global::SKF.Enlight.API.IoT.NodeData> nodeDataList_ = new pbc::RepeatedField<global::SKF.Enlight.API.IoT.NodeData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SKF.Enlight.API.IoT.NodeData> NodeDataList {
      get { return nodeDataList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNodeDataOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNodeDataOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nodeDataList_.Equals(other.nodeDataList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nodeDataList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      nodeDataList_.WriteTo(output, _repeated_nodeDataList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += nodeDataList_.CalculateSize(_repeated_nodeDataList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNodeDataOutput other) {
      if (other == null) {
        return;
      }
      nodeDataList_.Add(other.nodeDataList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodeDataList_.AddEntriesFrom(input, _repeated_nodeDataList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetLatestNodeData messages
  /// </summary>
  public sealed partial class GetLatestNodeDataInput : pb::IMessage<GetLatestNodeDataInput> {
    private static readonly pb::MessageParser<GetLatestNodeDataInput> _parser = new pb::MessageParser<GetLatestNodeDataInput>(() => new GetLatestNodeDataInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLatestNodeDataInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLatestNodeDataInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLatestNodeDataInput(GetLatestNodeDataInput other) : this() {
      nodeId_ = other.nodeId_;
      contentType_ = other.contentType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLatestNodeDataInput Clone() {
      return new GetLatestNodeDataInput(this);
    }

    /// <summary>Field number for the "node_id" field.</summary>
    public const int NodeIdFieldNumber = 1;
    private string nodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeId {
      get { return nodeId_; }
      set {
        nodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 2;
    private global::SKF.Enlight.API.IoT.NodeDataContentType contentType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.NodeDataContentType ContentType {
      get { return contentType_; }
      set {
        contentType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLatestNodeDataInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLatestNodeDataInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeId != other.NodeId) return false;
      if (ContentType != other.ContentType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeId.Length != 0) hash ^= NodeId.GetHashCode();
      if (ContentType != 0) hash ^= ContentType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeId);
      }
      if (ContentType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ContentType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeId);
      }
      if (ContentType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContentType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLatestNodeDataInput other) {
      if (other == null) {
        return;
      }
      if (other.NodeId.Length != 0) {
        NodeId = other.NodeId;
      }
      if (other.ContentType != 0) {
        ContentType = other.ContentType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeId = input.ReadString();
            break;
          }
          case 16: {
            contentType_ = (global::SKF.Enlight.API.IoT.NodeDataContentType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetLatestNodeDataOutput : pb::IMessage<GetLatestNodeDataOutput> {
    private static readonly pb::MessageParser<GetLatestNodeDataOutput> _parser = new pb::MessageParser<GetLatestNodeDataOutput>(() => new GetLatestNodeDataOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLatestNodeDataOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLatestNodeDataOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLatestNodeDataOutput(GetLatestNodeDataOutput other) : this() {
      nodeData_ = other.nodeData_ != null ? other.nodeData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLatestNodeDataOutput Clone() {
      return new GetLatestNodeDataOutput(this);
    }

    /// <summary>Field number for the "node_data" field.</summary>
    public const int NodeDataFieldNumber = 1;
    private global::SKF.Enlight.API.IoT.NodeData nodeData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.NodeData NodeData {
      get { return nodeData_; }
      set {
        nodeData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLatestNodeDataOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLatestNodeDataOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NodeData, other.NodeData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (nodeData_ != null) hash ^= NodeData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (nodeData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NodeData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (nodeData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodeData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLatestNodeDataOutput other) {
      if (other == null) {
        return;
      }
      if (other.nodeData_ != null) {
        if (nodeData_ == null) {
          nodeData_ = new global::SKF.Enlight.API.IoT.NodeData();
        }
        NodeData.MergeFrom(other.NodeData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nodeData_ == null) {
              nodeData_ = new global::SKF.Enlight.API.IoT.NodeData();
            }
            input.ReadMessage(nodeData_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetNodeDataStream messages
  /// </summary>
  [global::System.ObsoleteAttribute]
  public sealed partial class GetNodeDataStreamInput : pb::IMessage<GetNodeDataStreamInput> {
    private static readonly pb::MessageParser<GetNodeDataStreamInput> _parser = new pb::MessageParser<GetNodeDataStreamInput>(() => new GetNodeDataStreamInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNodeDataStreamInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodeDataStreamInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodeDataStreamInput(GetNodeDataStreamInput other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodeDataStreamInput Clone() {
      return new GetNodeDataStreamInput(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNodeDataStreamInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNodeDataStreamInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNodeDataStreamInput other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  [global::System.ObsoleteAttribute]
  public sealed partial class GetNodeDataStreamOutput : pb::IMessage<GetNodeDataStreamOutput> {
    private static readonly pb::MessageParser<GetNodeDataStreamOutput> _parser = new pb::MessageParser<GetNodeDataStreamOutput>(() => new GetNodeDataStreamOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNodeDataStreamOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodeDataStreamOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodeDataStreamOutput(GetNodeDataStreamOutput other) : this() {
      nodeId_ = other.nodeId_;
      nodeData_ = other.nodeData_ != null ? other.nodeData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodeDataStreamOutput Clone() {
      return new GetNodeDataStreamOutput(this);
    }

    /// <summary>Field number for the "node_id" field.</summary>
    public const int NodeIdFieldNumber = 1;
    private string nodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeId {
      get { return nodeId_; }
      set {
        nodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_data" field.</summary>
    public const int NodeDataFieldNumber = 2;
    private global::SKF.Enlight.API.IoT.NodeData nodeData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.NodeData NodeData {
      get { return nodeData_; }
      set {
        nodeData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNodeDataStreamOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNodeDataStreamOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeId != other.NodeId) return false;
      if (!object.Equals(NodeData, other.NodeData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeId.Length != 0) hash ^= NodeId.GetHashCode();
      if (nodeData_ != null) hash ^= NodeData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeId);
      }
      if (nodeData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NodeData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeId);
      }
      if (nodeData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodeData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNodeDataStreamOutput other) {
      if (other == null) {
        return;
      }
      if (other.NodeId.Length != 0) {
        NodeId = other.NodeId;
      }
      if (other.nodeData_ != null) {
        if (nodeData_ == null) {
          nodeData_ = new global::SKF.Enlight.API.IoT.NodeData();
        }
        NodeData.MergeFrom(other.NodeData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeId = input.ReadString();
            break;
          }
          case 18: {
            if (nodeData_ == null) {
              nodeData_ = new global::SKF.Enlight.API.IoT.NodeData();
            }
            input.ReadMessage(nodeData_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetMedia messages
  /// </summary>
  public sealed partial class GetMediaInput : pb::IMessage<GetMediaInput> {
    private static readonly pb::MessageParser<GetMediaInput> _parser = new pb::MessageParser<GetMediaInput>(() => new GetMediaInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMediaInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMediaInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMediaInput(GetMediaInput other) : this() {
      nodeId_ = other.nodeId_;
      mediaId_ = other.mediaId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMediaInput Clone() {
      return new GetMediaInput(this);
    }

    /// <summary>Field number for the "node_id" field.</summary>
    public const int NodeIdFieldNumber = 1;
    private string nodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeId {
      get { return nodeId_; }
      set {
        nodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "media_id" field.</summary>
    public const int MediaIdFieldNumber = 2;
    private string mediaId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MediaId {
      get { return mediaId_; }
      set {
        mediaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMediaInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMediaInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeId != other.NodeId) return false;
      if (MediaId != other.MediaId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeId.Length != 0) hash ^= NodeId.GetHashCode();
      if (MediaId.Length != 0) hash ^= MediaId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeId);
      }
      if (MediaId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MediaId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeId);
      }
      if (MediaId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MediaId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMediaInput other) {
      if (other == null) {
        return;
      }
      if (other.NodeId.Length != 0) {
        NodeId = other.NodeId;
      }
      if (other.MediaId.Length != 0) {
        MediaId = other.MediaId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeId = input.ReadString();
            break;
          }
          case 18: {
            MediaId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutMediaSignedUrlInput : pb::IMessage<PutMediaSignedUrlInput> {
    private static readonly pb::MessageParser<PutMediaSignedUrlInput> _parser = new pb::MessageParser<PutMediaSignedUrlInput>(() => new PutMediaSignedUrlInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutMediaSignedUrlInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutMediaSignedUrlInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutMediaSignedUrlInput(PutMediaSignedUrlInput other) : this() {
      mediaId_ = other.mediaId_;
      type_ = other.type_;
      contentMD5_ = other.contentMD5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutMediaSignedUrlInput Clone() {
      return new PutMediaSignedUrlInput(this);
    }

    /// <summary>Field number for the "media_id" field.</summary>
    public const int MediaIdFieldNumber = 1;
    private string mediaId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MediaId {
      get { return mediaId_; }
      set {
        mediaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::SKF.Enlight.API.IoT.MediaType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.MediaType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "contentMD5" field.</summary>
    public const int ContentMD5FieldNumber = 3;
    private string contentMD5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentMD5 {
      get { return contentMD5_; }
      set {
        contentMD5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutMediaSignedUrlInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutMediaSignedUrlInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MediaId != other.MediaId) return false;
      if (Type != other.Type) return false;
      if (ContentMD5 != other.ContentMD5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MediaId.Length != 0) hash ^= MediaId.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (ContentMD5.Length != 0) hash ^= ContentMD5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MediaId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MediaId);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (ContentMD5.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContentMD5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MediaId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MediaId);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (ContentMD5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentMD5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutMediaSignedUrlInput other) {
      if (other == null) {
        return;
      }
      if (other.MediaId.Length != 0) {
        MediaId = other.MediaId;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.ContentMD5.Length != 0) {
        ContentMD5 = other.ContentMD5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MediaId = input.ReadString();
            break;
          }
          case 16: {
            type_ = (global::SKF.Enlight.API.IoT.MediaType) input.ReadEnum();
            break;
          }
          case 26: {
            ContentMD5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutMediaSignedUrlOutput : pb::IMessage<PutMediaSignedUrlOutput> {
    private static readonly pb::MessageParser<PutMediaSignedUrlOutput> _parser = new pb::MessageParser<PutMediaSignedUrlOutput>(() => new PutMediaSignedUrlOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutMediaSignedUrlOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutMediaSignedUrlOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutMediaSignedUrlOutput(PutMediaSignedUrlOutput other) : this() {
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutMediaSignedUrlOutput Clone() {
      return new PutMediaSignedUrlOutput(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutMediaSignedUrlOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutMediaSignedUrlOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutMediaSignedUrlOutput other) {
      if (other == null) {
        return;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMediaSignedUrlInput : pb::IMessage<GetMediaSignedUrlInput> {
    private static readonly pb::MessageParser<GetMediaSignedUrlInput> _parser = new pb::MessageParser<GetMediaSignedUrlInput>(() => new GetMediaSignedUrlInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMediaSignedUrlInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMediaSignedUrlInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMediaSignedUrlInput(GetMediaSignedUrlInput other) : this() {
      mediaId_ = other.mediaId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMediaSignedUrlInput Clone() {
      return new GetMediaSignedUrlInput(this);
    }

    /// <summary>Field number for the "media_id" field.</summary>
    public const int MediaIdFieldNumber = 1;
    private string mediaId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MediaId {
      get { return mediaId_; }
      set {
        mediaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMediaSignedUrlInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMediaSignedUrlInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MediaId != other.MediaId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MediaId.Length != 0) hash ^= MediaId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MediaId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MediaId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MediaId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MediaId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMediaSignedUrlInput other) {
      if (other == null) {
        return;
      }
      if (other.MediaId.Length != 0) {
        MediaId = other.MediaId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MediaId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMediaSignedUrlOutput : pb::IMessage<GetMediaSignedUrlOutput> {
    private static readonly pb::MessageParser<GetMediaSignedUrlOutput> _parser = new pb::MessageParser<GetMediaSignedUrlOutput>(() => new GetMediaSignedUrlOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMediaSignedUrlOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMediaSignedUrlOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMediaSignedUrlOutput(GetMediaSignedUrlOutput other) : this() {
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMediaSignedUrlOutput Clone() {
      return new GetMediaSignedUrlOutput(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMediaSignedUrlOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMediaSignedUrlOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMediaSignedUrlOutput other) {
      if (other == null) {
        return;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMediaOutput : pb::IMessage<GetMediaOutput> {
    private static readonly pb::MessageParser<GetMediaOutput> _parser = new pb::MessageParser<GetMediaOutput>(() => new GetMediaOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMediaOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMediaOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMediaOutput(GetMediaOutput other) : this() {
      media_ = other.media_ != null ? other.media_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMediaOutput Clone() {
      return new GetMediaOutput(this);
    }

    /// <summary>Field number for the "media" field.</summary>
    public const int MediaFieldNumber = 1;
    private global::SKF.Enlight.API.IoT.Media media_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.Media Media {
      get { return media_; }
      set {
        media_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMediaOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMediaOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Media, other.Media)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (media_ != null) hash ^= Media.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (media_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Media);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (media_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Media);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMediaOutput other) {
      if (other == null) {
        return;
      }
      if (other.media_ != null) {
        if (media_ == null) {
          media_ = new global::SKF.Enlight.API.IoT.Media();
        }
        Media.MergeFrom(other.Media);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (media_ == null) {
              media_ = new global::SKF.Enlight.API.IoT.Media();
            }
            input.ReadMessage(media_);
            break;
          }
        }
      }
    }

  }

  [global::System.ObsoleteAttribute]
  public sealed partial class GetTaskStreamInput : pb::IMessage<GetTaskStreamInput> {
    private static readonly pb::MessageParser<GetTaskStreamInput> _parser = new pb::MessageParser<GetTaskStreamInput>(() => new GetTaskStreamInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTaskStreamInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskStreamInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskStreamInput(GetTaskStreamInput other) : this() {
      hierarchyId_ = other.hierarchyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskStreamInput Clone() {
      return new GetTaskStreamInput(this);
    }

    /// <summary>Field number for the "hierarchy_id" field.</summary>
    public const int HierarchyIdFieldNumber = 1;
    private string hierarchyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HierarchyId {
      get { return hierarchyId_; }
      set {
        hierarchyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTaskStreamInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTaskStreamInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HierarchyId != other.HierarchyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HierarchyId.Length != 0) hash ^= HierarchyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HierarchyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HierarchyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HierarchyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HierarchyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTaskStreamInput other) {
      if (other == null) {
        return;
      }
      if (other.HierarchyId.Length != 0) {
        HierarchyId = other.HierarchyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HierarchyId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.ObsoleteAttribute]
  public sealed partial class GetTaskStreamOutput : pb::IMessage<GetTaskStreamOutput> {
    private static readonly pb::MessageParser<GetTaskStreamOutput> _parser = new pb::MessageParser<GetTaskStreamOutput>(() => new GetTaskStreamOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTaskStreamOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskStreamOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskStreamOutput(GetTaskStreamOutput other) : this() {
      task_ = other.task_ != null ? other.task_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskStreamOutput Clone() {
      return new GetTaskStreamOutput(this);
    }

    /// <summary>Field number for the "task" field.</summary>
    public const int TaskFieldNumber = 1;
    private global::SKF.Enlight.API.IoT.TaskDescription task_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.TaskDescription Task {
      get { return task_; }
      set {
        task_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTaskStreamOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTaskStreamOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Task, other.Task)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (task_ != null) hash ^= Task.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (task_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Task);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (task_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Task);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTaskStreamOutput other) {
      if (other == null) {
        return;
      }
      if (other.task_ != null) {
        if (task_ == null) {
          task_ = new global::SKF.Enlight.API.IoT.TaskDescription();
        }
        Task.MergeFrom(other.Task);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (task_ == null) {
              task_ = new global::SKF.Enlight.API.IoT.TaskDescription();
            }
            input.ReadMessage(task_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTasksByStatusInput : pb::IMessage<GetTasksByStatusInput> {
    private static readonly pb::MessageParser<GetTasksByStatusInput> _parser = new pb::MessageParser<GetTasksByStatusInput>(() => new GetTasksByStatusInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTasksByStatusInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTasksByStatusInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTasksByStatusInput(GetTasksByStatusInput other) : this() {
      hierarchyId_ = other.hierarchyId_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTasksByStatusInput Clone() {
      return new GetTasksByStatusInput(this);
    }

    /// <summary>Field number for the "hierarchy_id" field.</summary>
    public const int HierarchyIdFieldNumber = 1;
    private string hierarchyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HierarchyId {
      get { return hierarchyId_; }
      set {
        hierarchyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::SKF.Enlight.API.IoT.TaskStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.TaskStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTasksByStatusInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTasksByStatusInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HierarchyId != other.HierarchyId) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HierarchyId.Length != 0) hash ^= HierarchyId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HierarchyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HierarchyId);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HierarchyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HierarchyId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTasksByStatusInput other) {
      if (other == null) {
        return;
      }
      if (other.HierarchyId.Length != 0) {
        HierarchyId = other.HierarchyId;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HierarchyId = input.ReadString();
            break;
          }
          case 16: {
            status_ = (global::SKF.Enlight.API.IoT.TaskStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTasksByStatusOutput : pb::IMessage<GetTasksByStatusOutput> {
    private static readonly pb::MessageParser<GetTasksByStatusOutput> _parser = new pb::MessageParser<GetTasksByStatusOutput>(() => new GetTasksByStatusOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTasksByStatusOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTasksByStatusOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTasksByStatusOutput(GetTasksByStatusOutput other) : this() {
      taskList_ = other.taskList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTasksByStatusOutput Clone() {
      return new GetTasksByStatusOutput(this);
    }

    /// <summary>Field number for the "task_list" field.</summary>
    public const int TaskListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SKF.Enlight.API.IoT.TaskDescription> _repeated_taskList_codec
        = pb::FieldCodec.ForMessage(10, global::SKF.Enlight.API.IoT.TaskDescription.Parser);
    private readonly pbc::RepeatedField<global::SKF.Enlight.API.IoT.TaskDescription> taskList_ = new pbc::RepeatedField<global::SKF.Enlight.API.IoT.TaskDescription>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SKF.Enlight.API.IoT.TaskDescription> TaskList {
      get { return taskList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTasksByStatusOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTasksByStatusOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!taskList_.Equals(other.taskList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= taskList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      taskList_.WriteTo(output, _repeated_taskList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += taskList_.CalculateSize(_repeated_taskList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTasksByStatusOutput other) {
      if (other == null) {
        return;
      }
      taskList_.Add(other.taskList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            taskList_.AddEntriesFrom(input, _repeated_taskList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTaskByUUIDInput : pb::IMessage<GetTaskByUUIDInput> {
    private static readonly pb::MessageParser<GetTaskByUUIDInput> _parser = new pb::MessageParser<GetTaskByUUIDInput>(() => new GetTaskByUUIDInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTaskByUUIDInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskByUUIDInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskByUUIDInput(GetTaskByUUIDInput other) : this() {
      taskId_ = other.taskId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskByUUIDInput Clone() {
      return new GetTaskByUUIDInput(this);
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 1;
    private string taskId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskId {
      get { return taskId_; }
      set {
        taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTaskByUUIDInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTaskByUUIDInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskId != other.TaskId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TaskId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTaskByUUIDInput other) {
      if (other == null) {
        return;
      }
      if (other.TaskId.Length != 0) {
        TaskId = other.TaskId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TaskId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTaskByUUIDOutput : pb::IMessage<GetTaskByUUIDOutput> {
    private static readonly pb::MessageParser<GetTaskByUUIDOutput> _parser = new pb::MessageParser<GetTaskByUUIDOutput>(() => new GetTaskByUUIDOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTaskByUUIDOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskByUUIDOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskByUUIDOutput(GetTaskByUUIDOutput other) : this() {
      task_ = other.task_ != null ? other.task_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskByUUIDOutput Clone() {
      return new GetTaskByUUIDOutput(this);
    }

    /// <summary>Field number for the "task" field.</summary>
    public const int TaskFieldNumber = 1;
    private global::SKF.Enlight.API.IoT.TaskDescription task_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.TaskDescription Task {
      get { return task_; }
      set {
        task_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTaskByUUIDOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTaskByUUIDOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Task, other.Task)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (task_ != null) hash ^= Task.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (task_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Task);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (task_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Task);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTaskByUUIDOutput other) {
      if (other == null) {
        return;
      }
      if (other.task_ != null) {
        if (task_ == null) {
          task_ = new global::SKF.Enlight.API.IoT.TaskDescription();
        }
        Task.MergeFrom(other.Task);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (task_ == null) {
              task_ = new global::SKF.Enlight.API.IoT.TaskDescription();
            }
            input.ReadMessage(task_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTaskByLongIdInput : pb::IMessage<GetTaskByLongIdInput> {
    private static readonly pb::MessageParser<GetTaskByLongIdInput> _parser = new pb::MessageParser<GetTaskByLongIdInput>(() => new GetTaskByLongIdInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTaskByLongIdInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskByLongIdInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskByLongIdInput(GetTaskByLongIdInput other) : this() {
      taskId_ = other.taskId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskByLongIdInput Clone() {
      return new GetTaskByLongIdInput(this);
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 1;
    private long taskId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TaskId {
      get { return taskId_; }
      set {
        taskId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTaskByLongIdInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTaskByLongIdInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskId != other.TaskId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskId != 0L) hash ^= TaskId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TaskId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TaskId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTaskByLongIdInput other) {
      if (other == null) {
        return;
      }
      if (other.TaskId != 0L) {
        TaskId = other.TaskId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TaskId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTaskByLongIdOutput : pb::IMessage<GetTaskByLongIdOutput> {
    private static readonly pb::MessageParser<GetTaskByLongIdOutput> _parser = new pb::MessageParser<GetTaskByLongIdOutput>(() => new GetTaskByLongIdOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTaskByLongIdOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskByLongIdOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskByLongIdOutput(GetTaskByLongIdOutput other) : this() {
      task_ = other.task_ != null ? other.task_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskByLongIdOutput Clone() {
      return new GetTaskByLongIdOutput(this);
    }

    /// <summary>Field number for the "task" field.</summary>
    public const int TaskFieldNumber = 1;
    private global::SKF.Enlight.API.IoT.TaskDescription task_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.IoT.TaskDescription Task {
      get { return task_; }
      set {
        task_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTaskByLongIdOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTaskByLongIdOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Task, other.Task)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (task_ != null) hash ^= Task.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (task_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Task);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (task_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Task);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTaskByLongIdOutput other) {
      if (other == null) {
        return;
      }
      if (other.task_ != null) {
        if (task_ == null) {
          task_ = new global::SKF.Enlight.API.IoT.TaskDescription();
        }
        Task.MergeFrom(other.Task);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (task_ == null) {
              task_ = new global::SKF.Enlight.API.IoT.TaskDescription();
            }
            input.ReadMessage(task_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTasksModifiedSinceTimestampInput : pb::IMessage<GetTasksModifiedSinceTimestampInput> {
    private static readonly pb::MessageParser<GetTasksModifiedSinceTimestampInput> _parser = new pb::MessageParser<GetTasksModifiedSinceTimestampInput>(() => new GetTasksModifiedSinceTimestampInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTasksModifiedSinceTimestampInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTasksModifiedSinceTimestampInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTasksModifiedSinceTimestampInput(GetTasksModifiedSinceTimestampInput other) : this() {
      timestamp_ = other.timestamp_;
      userId_ = other.userId_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTasksModifiedSinceTimestampInput Clone() {
      return new GetTasksModifiedSinceTimestampInput(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTasksModifiedSinceTimestampInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTasksModifiedSinceTimestampInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (UserId != other.UserId) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Timestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (Limit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTasksModifiedSinceTimestampInput other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 24: {
            Limit = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTasksModifiedSinceTimestampOutput : pb::IMessage<GetTasksModifiedSinceTimestampOutput> {
    private static readonly pb::MessageParser<GetTasksModifiedSinceTimestampOutput> _parser = new pb::MessageParser<GetTasksModifiedSinceTimestampOutput>(() => new GetTasksModifiedSinceTimestampOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTasksModifiedSinceTimestampOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.IoT.GrpcapiReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTasksModifiedSinceTimestampOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTasksModifiedSinceTimestampOutput(GetTasksModifiedSinceTimestampOutput other) : this() {
      taskList_ = other.taskList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTasksModifiedSinceTimestampOutput Clone() {
      return new GetTasksModifiedSinceTimestampOutput(this);
    }

    /// <summary>Field number for the "task_list" field.</summary>
    public const int TaskListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SKF.Enlight.API.IoT.TaskDescription> _repeated_taskList_codec
        = pb::FieldCodec.ForMessage(10, global::SKF.Enlight.API.IoT.TaskDescription.Parser);
    private readonly pbc::RepeatedField<global::SKF.Enlight.API.IoT.TaskDescription> taskList_ = new pbc::RepeatedField<global::SKF.Enlight.API.IoT.TaskDescription>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SKF.Enlight.API.IoT.TaskDescription> TaskList {
      get { return taskList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTasksModifiedSinceTimestampOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTasksModifiedSinceTimestampOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!taskList_.Equals(other.taskList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= taskList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      taskList_.WriteTo(output, _repeated_taskList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += taskList_.CalculateSize(_repeated_taskList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTasksModifiedSinceTimestampOutput other) {
      if (other == null) {
        return;
      }
      taskList_.Add(other.taskList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            taskList_.AddEntriesFrom(input, _repeated_taskList_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
