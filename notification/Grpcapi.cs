// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: notification/grpcapi.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SKF.Enlight.API.Notification {

  /// <summary>Holder for reflection information generated from notification/grpcapi.proto</summary>
  public static partial class GrpcapiReflection {

    #region Descriptor
    /// <summary>File descriptor for notification/grpcapi.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GrpcapiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chpub3RpZmljYXRpb24vZ3JwY2FwaS5wcm90bxIHZ3JwY2FwaRoTY29tbW9u",
            "L2NvbW1vbi5wcm90byLAAQoQRGVsaXZlcnlTY2hlZHVsZRJAChlkZWZhdWx0",
            "X2RlbGl2ZXJ5X3NjaGVkdWxlGAEgASgOMh0uZ3JwY2FwaS5EZWxpdmVyeVNj",
            "aGVkdWxlVHlwZRIqCiJNaW5pbXVtU2Vjb25kc0JldHdlZW5Ob3RpZmljYXRp",
            "b25zGAIgASgFEh0KFURhaWx5RGVsaXZlcnlUaW1lSG91chgDIAEoBRIfChdE",
            "YWlseURlbGl2ZXJ5VGltZU1pbnV0ZRgEIAEoBSK1AQoQTm90aWZpY2F0aW9u",
            "VHlwZRIMCgRuYW1lGAEgASgJEhkKEXF1YWxpZnlpbmdfYWN0aW9uGAIgASgJ",
            "EjoKGGRlZmF1bHRfZGVsaXZlcnlfY2hhbm5lbBgDIAEoDjIYLmdycGNhcGku",
            "RGVsaXZlcnlDaGFubmVsEjwKGWRlZmF1bHRfZGVsaXZlcnlfc2NoZWR1bGUY",
            "BCABKAsyGS5ncnBjYXBpLkRlbGl2ZXJ5U2NoZWR1bGUiqQEKFUluaXRpYXRl",
            "ZE5vdGlmaWNhdGlvbhITCgtleHRlcm5hbF9pZBgBIAEoCRInCgR0eXBlGAIg",
            "ASgLMhkuZ3JwY2FwaS5Ob3RpZmljYXRpb25UeXBlEiAKCHJlc291cmNlGAMg",
            "ASgLMg4uY29tbW9uLk9yaWdpbhIOCgZoZWFkZXIYBCABKAkSDAoEYm9keRgF",
            "IAEoCRISCgpjcmVhdGVkX2J5GAYgASgJIlAKGFNldE5vdGlmaWNhdGlvblR5",
            "cGVJbnB1dBI0ChFub3RpZmljYXRpb25fdHlwZRgBIAEoCzIZLmdycGNhcGku",
            "Tm90aWZpY2F0aW9uVHlwZSIoChhHZXROb3RpZmljYXRpb25UeXBlSW5wdXQS",
            "DAoEbmFtZRgBIAEoCSJRChlHZXROb3RpZmljYXRpb25UeXBlT3V0cHV0EjQK",
            "EW5vdGlmaWNhdGlvbl90eXBlGAEgASgLMhkuZ3JwY2FwaS5Ob3RpZmljYXRp",
            "b25UeXBlIisKG1JlbW92ZU5vdGlmaWNhdGlvblR5cGVJbnB1dBIMCgRuYW1l",
            "GAEgASgJIpgBChlJbml0aWF0ZU5vdGlmaWNhdGlvbklucHV0EicKBHR5cGUY",
            "ASABKAsyGS5ncnBjYXBpLk5vdGlmaWNhdGlvblR5cGUSIAoIcmVzb3VyY2UY",
            "AiABKAsyDi5jb21tb24uT3JpZ2luEg4KBmhlYWRlchgDIAEoCRIMCgRib2R5",
            "GAQgASgJEhIKCmNyZWF0ZWRfYnkYBSABKAkiMQoaSW5pdGlhdGVOb3RpZmlj",
            "YXRpb25PdXRwdXQSEwoLZXh0ZXJuYWxfaWQYASABKAkiNAodR2V0SW5pdGlh",
            "dGVkTm90aWZpY2F0aW9uSW5wdXQSEwoLZXh0ZXJuYWxfaWQYASABKAkiYAoe",
            "R2V0SW5pdGlhdGVkTm90aWZpY2F0aW9uT3V0cHV0Ej4KFmluaXRpYXRlZF9u",
            "b3RpZmljYXRpb24YASABKAsyHi5ncnBjYXBpLkluaXRpYXRlZE5vdGlmaWNh",
            "dGlvbiI3CiBSZW1vdmVJbml0aWF0ZWROb3RpZmljYXRpb25JbnB1dBITCgtl",
            "eHRlcm5hbF9pZBgBIAEoCSLZAQoQVXNlck5vdGlmaWNhdGlvbhITCgtleHRl",
            "cm5hbF9pZBgBIAEoCRI+ChZpbml0aWF0ZWRfbm90aWZpY2F0aW9uGAIgASgL",
            "Mh4uZ3JwY2FwaS5Jbml0aWF0ZWROb3RpZmljYXRpb24SMAoPdXNlcl9wcmVm",
            "ZXJlbmNlGAMgASgLMhcuZ3JwY2FwaS5Vc2VyUHJlZmVyZW5jZRImCgpzZW5k",
            "X3N0YXRlGAQgASgOMhIuZ3JwY2FwaS5TZW5kU3RhdGUSFgoOc2NoZWR1bGVk",
            "X3RpbWUYBSABKAMiOwoZR2V0VXNlck5vdGlmaWNhdGlvbnNJbnB1dBIPCgd1",
            "c2VyX2lkGAEgASgJEg0KBWxpbWl0GAIgASgFIk4KGkdldFVzZXJOb3RpZmlj",
            "YXRpb25zT3V0cHV0EjAKDW5vdGlmaWNhdGlvbnMYASADKAsyGS5ncnBjYXBp",
            "LlVzZXJOb3RpZmljYXRpb24iWwocUmVtb3ZlVXNlck5vdGlmaWNhdGlvbnNJ",
            "bnB1dBIPCgd1c2VyX2lkGAEgASgJEioKImluaXRpYXRlZF9ub3RpZmljYXRp",
            "b25fZXh0ZXJuYWxfaWQYAiABKAkidAoWVXNlclByZWZlcmVuY2VTY2hlZHVs",
            "ZRImCgR0eXBlGAEgASgOMhguZ3JwY2FwaS5EZWxpdmVyeUNoYW5uZWwSEwoL",
            "dGltZV9vZl9kYXkYAiABKAkSHQoVbm90aWZpY2F0aW9uX2ludGVydmFsGAMg",
            "ASgJIq0BCg5Vc2VyUHJlZmVyZW5jZRIPCgd1c2VyX2lkGAEgASgJEiAKGG5v",
            "dGlmaWNhdGlvbl90eXBlX2V4dF9pZBgCIAEoCRIyChBkZWxpdmVyeV9jaGFu",
            "bmVsGAMgASgOMhguZ3JwY2FwaS5EZWxpdmVyeUNoYW5uZWwSNAoRZGVsaXZl",
            "cnlfc2NoZWR1bGUYBCABKAsyGS5ncnBjYXBpLkRlbGl2ZXJ5U2NoZWR1bGUi",
            "RwoXU2V0VXNlclByZWZlcmVuY2VzSW5wdXQSLAoLcHJlZmVyZW5jZXMYASAD",
            "KAsyFy5ncnBjYXBpLlVzZXJQcmVmZXJlbmNlIioKF0dldFVzZXJQcmVmZXJl",
            "bmNlc0lucHV0Eg8KB3VzZXJfaWQYASABKAkiSAoYR2V0VXNlclByZWZlcmVu",
            "Y2VzT3V0cHV0EiwKC3ByZWZlcmVuY2VzGAEgAygLMhcuZ3JwY2FwaS5Vc2Vy",
            "UHJlZmVyZW5jZSJPChpSZW1vdmVVc2VyUHJlZmVyZW5jZXNJbnB1dBIPCgd1",
            "c2VyX2lkGAEgASgJEiAKGG5vdGlmaWNhdGlvbl90eXBlX2V4dF9pZBgCIAEo",
            "CSJkCiFVcGRhdGVVc2VyTm90aWZpY2F0aW9uU3RhdHVzSW5wdXQSFwoPbm90",
            "aWZpY2F0aW9uX2lkGAEgASgJEiYKCnNlbmRfc3RhdGUYAiABKA4yEi5ncnBj",
            "YXBpLlNlbmRTdGF0ZSomCg9EZWxpdmVyeUNoYW5uZWwSCAoETUFJTBAAEgkK",
            "BVBPUFVQEAEqMAoURGVsaXZlcnlTY2hlZHVsZVR5cGUSDQoJSU1NRURJQVRF",
            "EAASCQoFREFJTFkQASosCglTZW5kU3RhdGUSBwoDTkVXEAASCwoHU0VOVF9P",
            "SxABEgkKBUVSUk9SEAIy7QgKDE5vdGlmaWNhdGlvbhIzCghEZWVwUGluZxIM",
            "LmNvbW1vbi5Wb2lkGhcuY29tbW9uLlByaW1pdGl2ZVN0cmluZyIAEkgKE1Nl",
            "dE5vdGlmaWNhdGlvblR5cGUSIS5ncnBjYXBpLlNldE5vdGlmaWNhdGlvblR5",
            "cGVJbnB1dBoMLmNvbW1vbi5Wb2lkIgASXgoTR2V0Tm90aWZpY2F0aW9uVHlw",
            "ZRIhLmdycGNhcGkuR2V0Tm90aWZpY2F0aW9uVHlwZUlucHV0GiIuZ3JwY2Fw",
            "aS5HZXROb3RpZmljYXRpb25UeXBlT3V0cHV0IgASTgoWUmVtb3ZlTm90aWZp",
            "Y2F0aW9uVHlwZRIkLmdycGNhcGkuUmVtb3ZlTm90aWZpY2F0aW9uVHlwZUlu",
            "cHV0GgwuY29tbW9uLlZvaWQiABJhChRJbml0aWF0ZU5vdGlmaWNhdGlvbhIi",
            "LmdycGNhcGkuSW5pdGlhdGVOb3RpZmljYXRpb25JbnB1dBojLmdycGNhcGku",
            "SW5pdGlhdGVOb3RpZmljYXRpb25PdXRwdXQiABJtChhHZXRJbml0aWF0ZWRO",
            "b3RpZmljYXRpb24SJi5ncnBjYXBpLkdldEluaXRpYXRlZE5vdGlmaWNhdGlv",
            "bklucHV0GicuZ3JwY2FwaS5HZXRJbml0aWF0ZWROb3RpZmljYXRpb25PdXRw",
            "dXQiABJYChtSZW1vdmVJbml0aWF0ZWROb3RpZmljYXRpb24SKS5ncnBjYXBp",
            "LlJlbW92ZUluaXRpYXRlZE5vdGlmaWNhdGlvbklucHV0GgwuY29tbW9uLlZv",
            "aWQiABJGChJTZXRVc2VyUHJlZmVyZW5jZXMSIC5ncnBjYXBpLlNldFVzZXJQ",
            "cmVmZXJlbmNlc0lucHV0GgwuY29tbW9uLlZvaWQiABJbChJHZXRVc2VyUHJl",
            "ZmVyZW5jZXMSIC5ncnBjYXBpLkdldFVzZXJQcmVmZXJlbmNlc0lucHV0GiEu",
            "Z3JwY2FwaS5HZXRVc2VyUHJlZmVyZW5jZXNPdXRwdXQiABJMChVSZW1vdmVV",
            "c2VyUHJlZmVyZW5jZXMSIy5ncnBjYXBpLlJlbW92ZVVzZXJQcmVmZXJlbmNl",
            "c0lucHV0GgwuY29tbW9uLlZvaWQiABJhChRHZXRVc2VyTm90aWZpY2F0aW9u",
            "cxIiLmdycGNhcGkuR2V0VXNlck5vdGlmaWNhdGlvbnNJbnB1dBojLmdycGNh",
            "cGkuR2V0VXNlck5vdGlmaWNhdGlvbnNPdXRwdXQiABJQChdSZW1vdmVVc2Vy",
            "Tm90aWZpY2F0aW9ucxIlLmdycGNhcGkuUmVtb3ZlVXNlck5vdGlmaWNhdGlv",
            "bnNJbnB1dBoMLmNvbW1vbi5Wb2lkIgASWgocVXBkYXRlVXNlck5vdGlmaWNh",
            "dGlvblN0YXR1cxIqLmdycGNhcGkuVXBkYXRlVXNlck5vdGlmaWNhdGlvblN0",
            "YXR1c0lucHV0GgwuY29tbW9uLlZvaWQiAEIfqgIcU0tGLkVubGlnaHQuQVBJ",
            "Lk5vdGlmaWNhdGlvbmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SKF.Enlight.API.Common.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SKF.Enlight.API.Notification.DeliveryChannel), typeof(global::SKF.Enlight.API.Notification.DeliveryScheduleType), typeof(global::SKF.Enlight.API.Notification.SendState), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.DeliverySchedule), global::SKF.Enlight.API.Notification.DeliverySchedule.Parser, new[]{ "DefaultDeliverySchedule", "MinimumSecondsBetweenNotifications", "DailyDeliveryTimeHour", "DailyDeliveryTimeMinute" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.NotificationType), global::SKF.Enlight.API.Notification.NotificationType.Parser, new[]{ "Name", "QualifyingAction", "DefaultDeliveryChannel", "DefaultDeliverySchedule" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.InitiatedNotification), global::SKF.Enlight.API.Notification.InitiatedNotification.Parser, new[]{ "ExternalId", "Type", "Resource", "Header", "Body", "CreatedBy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.SetNotificationTypeInput), global::SKF.Enlight.API.Notification.SetNotificationTypeInput.Parser, new[]{ "NotificationType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.GetNotificationTypeInput), global::SKF.Enlight.API.Notification.GetNotificationTypeInput.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.GetNotificationTypeOutput), global::SKF.Enlight.API.Notification.GetNotificationTypeOutput.Parser, new[]{ "NotificationType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.RemoveNotificationTypeInput), global::SKF.Enlight.API.Notification.RemoveNotificationTypeInput.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.InitiateNotificationInput), global::SKF.Enlight.API.Notification.InitiateNotificationInput.Parser, new[]{ "Type", "Resource", "Header", "Body", "CreatedBy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.InitiateNotificationOutput), global::SKF.Enlight.API.Notification.InitiateNotificationOutput.Parser, new[]{ "ExternalId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.GetInitiatedNotificationInput), global::SKF.Enlight.API.Notification.GetInitiatedNotificationInput.Parser, new[]{ "ExternalId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.GetInitiatedNotificationOutput), global::SKF.Enlight.API.Notification.GetInitiatedNotificationOutput.Parser, new[]{ "InitiatedNotification" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.RemoveInitiatedNotificationInput), global::SKF.Enlight.API.Notification.RemoveInitiatedNotificationInput.Parser, new[]{ "ExternalId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.UserNotification), global::SKF.Enlight.API.Notification.UserNotification.Parser, new[]{ "ExternalId", "InitiatedNotification", "UserPreference", "SendState", "ScheduledTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.GetUserNotificationsInput), global::SKF.Enlight.API.Notification.GetUserNotificationsInput.Parser, new[]{ "UserId", "Limit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.GetUserNotificationsOutput), global::SKF.Enlight.API.Notification.GetUserNotificationsOutput.Parser, new[]{ "Notifications" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.RemoveUserNotificationsInput), global::SKF.Enlight.API.Notification.RemoveUserNotificationsInput.Parser, new[]{ "UserId", "InitiatedNotificationExternalId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.UserPreferenceSchedule), global::SKF.Enlight.API.Notification.UserPreferenceSchedule.Parser, new[]{ "Type", "TimeOfDay", "NotificationInterval" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.UserPreference), global::SKF.Enlight.API.Notification.UserPreference.Parser, new[]{ "UserId", "NotificationTypeExtId", "DeliveryChannel", "DeliverySchedule" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.SetUserPreferencesInput), global::SKF.Enlight.API.Notification.SetUserPreferencesInput.Parser, new[]{ "Preferences" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.GetUserPreferencesInput), global::SKF.Enlight.API.Notification.GetUserPreferencesInput.Parser, new[]{ "UserId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.GetUserPreferencesOutput), global::SKF.Enlight.API.Notification.GetUserPreferencesOutput.Parser, new[]{ "Preferences" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.RemoveUserPreferencesInput), global::SKF.Enlight.API.Notification.RemoveUserPreferencesInput.Parser, new[]{ "UserId", "NotificationTypeExtId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SKF.Enlight.API.Notification.UpdateUserNotificationStatusInput), global::SKF.Enlight.API.Notification.UpdateUserNotificationStatusInput.Parser, new[]{ "NotificationId", "SendState" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum DeliveryChannel {
    [pbr::OriginalName("MAIL")] Mail = 0,
    [pbr::OriginalName("POPUP")] Popup = 1,
  }

  public enum DeliveryScheduleType {
    [pbr::OriginalName("IMMEDIATE")] Immediate = 0,
    [pbr::OriginalName("DAILY")] Daily = 1,
  }

  public enum SendState {
    [pbr::OriginalName("NEW")] New = 0,
    [pbr::OriginalName("SENT_OK")] SentOk = 1,
    [pbr::OriginalName("ERROR")] Error = 2,
  }

  #endregion

  #region Messages
  public sealed partial class DeliverySchedule : pb::IMessage<DeliverySchedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeliverySchedule> _parser = new pb::MessageParser<DeliverySchedule>(() => new DeliverySchedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeliverySchedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeliverySchedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeliverySchedule(DeliverySchedule other) : this() {
      defaultDeliverySchedule_ = other.defaultDeliverySchedule_;
      minimumSecondsBetweenNotifications_ = other.minimumSecondsBetweenNotifications_;
      dailyDeliveryTimeHour_ = other.dailyDeliveryTimeHour_;
      dailyDeliveryTimeMinute_ = other.dailyDeliveryTimeMinute_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeliverySchedule Clone() {
      return new DeliverySchedule(this);
    }

    /// <summary>Field number for the "default_delivery_schedule" field.</summary>
    public const int DefaultDeliveryScheduleFieldNumber = 1;
    private global::SKF.Enlight.API.Notification.DeliveryScheduleType defaultDeliverySchedule_ = global::SKF.Enlight.API.Notification.DeliveryScheduleType.Immediate;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Notification.DeliveryScheduleType DefaultDeliverySchedule {
      get { return defaultDeliverySchedule_; }
      set {
        defaultDeliverySchedule_ = value;
      }
    }

    /// <summary>Field number for the "MinimumSecondsBetweenNotifications" field.</summary>
    public const int MinimumSecondsBetweenNotificationsFieldNumber = 2;
    private int minimumSecondsBetweenNotifications_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinimumSecondsBetweenNotifications {
      get { return minimumSecondsBetweenNotifications_; }
      set {
        minimumSecondsBetweenNotifications_ = value;
      }
    }

    /// <summary>Field number for the "DailyDeliveryTimeHour" field.</summary>
    public const int DailyDeliveryTimeHourFieldNumber = 3;
    private int dailyDeliveryTimeHour_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DailyDeliveryTimeHour {
      get { return dailyDeliveryTimeHour_; }
      set {
        dailyDeliveryTimeHour_ = value;
      }
    }

    /// <summary>Field number for the "DailyDeliveryTimeMinute" field.</summary>
    public const int DailyDeliveryTimeMinuteFieldNumber = 4;
    private int dailyDeliveryTimeMinute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DailyDeliveryTimeMinute {
      get { return dailyDeliveryTimeMinute_; }
      set {
        dailyDeliveryTimeMinute_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeliverySchedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeliverySchedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DefaultDeliverySchedule != other.DefaultDeliverySchedule) return false;
      if (MinimumSecondsBetweenNotifications != other.MinimumSecondsBetweenNotifications) return false;
      if (DailyDeliveryTimeHour != other.DailyDeliveryTimeHour) return false;
      if (DailyDeliveryTimeMinute != other.DailyDeliveryTimeMinute) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DefaultDeliverySchedule != global::SKF.Enlight.API.Notification.DeliveryScheduleType.Immediate) hash ^= DefaultDeliverySchedule.GetHashCode();
      if (MinimumSecondsBetweenNotifications != 0) hash ^= MinimumSecondsBetweenNotifications.GetHashCode();
      if (DailyDeliveryTimeHour != 0) hash ^= DailyDeliveryTimeHour.GetHashCode();
      if (DailyDeliveryTimeMinute != 0) hash ^= DailyDeliveryTimeMinute.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DefaultDeliverySchedule != global::SKF.Enlight.API.Notification.DeliveryScheduleType.Immediate) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DefaultDeliverySchedule);
      }
      if (MinimumSecondsBetweenNotifications != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MinimumSecondsBetweenNotifications);
      }
      if (DailyDeliveryTimeHour != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DailyDeliveryTimeHour);
      }
      if (DailyDeliveryTimeMinute != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DailyDeliveryTimeMinute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DefaultDeliverySchedule != global::SKF.Enlight.API.Notification.DeliveryScheduleType.Immediate) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DefaultDeliverySchedule);
      }
      if (MinimumSecondsBetweenNotifications != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MinimumSecondsBetweenNotifications);
      }
      if (DailyDeliveryTimeHour != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DailyDeliveryTimeHour);
      }
      if (DailyDeliveryTimeMinute != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DailyDeliveryTimeMinute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DefaultDeliverySchedule != global::SKF.Enlight.API.Notification.DeliveryScheduleType.Immediate) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DefaultDeliverySchedule);
      }
      if (MinimumSecondsBetweenNotifications != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinimumSecondsBetweenNotifications);
      }
      if (DailyDeliveryTimeHour != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DailyDeliveryTimeHour);
      }
      if (DailyDeliveryTimeMinute != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DailyDeliveryTimeMinute);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeliverySchedule other) {
      if (other == null) {
        return;
      }
      if (other.DefaultDeliverySchedule != global::SKF.Enlight.API.Notification.DeliveryScheduleType.Immediate) {
        DefaultDeliverySchedule = other.DefaultDeliverySchedule;
      }
      if (other.MinimumSecondsBetweenNotifications != 0) {
        MinimumSecondsBetweenNotifications = other.MinimumSecondsBetweenNotifications;
      }
      if (other.DailyDeliveryTimeHour != 0) {
        DailyDeliveryTimeHour = other.DailyDeliveryTimeHour;
      }
      if (other.DailyDeliveryTimeMinute != 0) {
        DailyDeliveryTimeMinute = other.DailyDeliveryTimeMinute;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DefaultDeliverySchedule = (global::SKF.Enlight.API.Notification.DeliveryScheduleType) input.ReadEnum();
            break;
          }
          case 16: {
            MinimumSecondsBetweenNotifications = input.ReadInt32();
            break;
          }
          case 24: {
            DailyDeliveryTimeHour = input.ReadInt32();
            break;
          }
          case 32: {
            DailyDeliveryTimeMinute = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DefaultDeliverySchedule = (global::SKF.Enlight.API.Notification.DeliveryScheduleType) input.ReadEnum();
            break;
          }
          case 16: {
            MinimumSecondsBetweenNotifications = input.ReadInt32();
            break;
          }
          case 24: {
            DailyDeliveryTimeHour = input.ReadInt32();
            break;
          }
          case 32: {
            DailyDeliveryTimeMinute = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NotificationType : pb::IMessage<NotificationType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NotificationType> _parser = new pb::MessageParser<NotificationType>(() => new NotificationType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotificationType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationType(NotificationType other) : this() {
      name_ = other.name_;
      qualifyingAction_ = other.qualifyingAction_;
      defaultDeliveryChannel_ = other.defaultDeliveryChannel_;
      defaultDeliverySchedule_ = other.defaultDeliverySchedule_ != null ? other.defaultDeliverySchedule_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationType Clone() {
      return new NotificationType(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qualifying_action" field.</summary>
    public const int QualifyingActionFieldNumber = 2;
    private string qualifyingAction_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QualifyingAction {
      get { return qualifyingAction_; }
      set {
        qualifyingAction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "default_delivery_channel" field.</summary>
    public const int DefaultDeliveryChannelFieldNumber = 3;
    private global::SKF.Enlight.API.Notification.DeliveryChannel defaultDeliveryChannel_ = global::SKF.Enlight.API.Notification.DeliveryChannel.Mail;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Notification.DeliveryChannel DefaultDeliveryChannel {
      get { return defaultDeliveryChannel_; }
      set {
        defaultDeliveryChannel_ = value;
      }
    }

    /// <summary>Field number for the "default_delivery_schedule" field.</summary>
    public const int DefaultDeliveryScheduleFieldNumber = 4;
    private global::SKF.Enlight.API.Notification.DeliverySchedule defaultDeliverySchedule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Notification.DeliverySchedule DefaultDeliverySchedule {
      get { return defaultDeliverySchedule_; }
      set {
        defaultDeliverySchedule_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotificationType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotificationType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (QualifyingAction != other.QualifyingAction) return false;
      if (DefaultDeliveryChannel != other.DefaultDeliveryChannel) return false;
      if (!object.Equals(DefaultDeliverySchedule, other.DefaultDeliverySchedule)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (QualifyingAction.Length != 0) hash ^= QualifyingAction.GetHashCode();
      if (DefaultDeliveryChannel != global::SKF.Enlight.API.Notification.DeliveryChannel.Mail) hash ^= DefaultDeliveryChannel.GetHashCode();
      if (defaultDeliverySchedule_ != null) hash ^= DefaultDeliverySchedule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (QualifyingAction.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(QualifyingAction);
      }
      if (DefaultDeliveryChannel != global::SKF.Enlight.API.Notification.DeliveryChannel.Mail) {
        output.WriteRawTag(24);
        output.WriteEnum((int) DefaultDeliveryChannel);
      }
      if (defaultDeliverySchedule_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DefaultDeliverySchedule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (QualifyingAction.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(QualifyingAction);
      }
      if (DefaultDeliveryChannel != global::SKF.Enlight.API.Notification.DeliveryChannel.Mail) {
        output.WriteRawTag(24);
        output.WriteEnum((int) DefaultDeliveryChannel);
      }
      if (defaultDeliverySchedule_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DefaultDeliverySchedule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (QualifyingAction.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QualifyingAction);
      }
      if (DefaultDeliveryChannel != global::SKF.Enlight.API.Notification.DeliveryChannel.Mail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DefaultDeliveryChannel);
      }
      if (defaultDeliverySchedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefaultDeliverySchedule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotificationType other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.QualifyingAction.Length != 0) {
        QualifyingAction = other.QualifyingAction;
      }
      if (other.DefaultDeliveryChannel != global::SKF.Enlight.API.Notification.DeliveryChannel.Mail) {
        DefaultDeliveryChannel = other.DefaultDeliveryChannel;
      }
      if (other.defaultDeliverySchedule_ != null) {
        if (defaultDeliverySchedule_ == null) {
          DefaultDeliverySchedule = new global::SKF.Enlight.API.Notification.DeliverySchedule();
        }
        DefaultDeliverySchedule.MergeFrom(other.DefaultDeliverySchedule);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            QualifyingAction = input.ReadString();
            break;
          }
          case 24: {
            DefaultDeliveryChannel = (global::SKF.Enlight.API.Notification.DeliveryChannel) input.ReadEnum();
            break;
          }
          case 34: {
            if (defaultDeliverySchedule_ == null) {
              DefaultDeliverySchedule = new global::SKF.Enlight.API.Notification.DeliverySchedule();
            }
            input.ReadMessage(DefaultDeliverySchedule);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            QualifyingAction = input.ReadString();
            break;
          }
          case 24: {
            DefaultDeliveryChannel = (global::SKF.Enlight.API.Notification.DeliveryChannel) input.ReadEnum();
            break;
          }
          case 34: {
            if (defaultDeliverySchedule_ == null) {
              DefaultDeliverySchedule = new global::SKF.Enlight.API.Notification.DeliverySchedule();
            }
            input.ReadMessage(DefaultDeliverySchedule);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InitiatedNotification : pb::IMessage<InitiatedNotification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitiatedNotification> _parser = new pb::MessageParser<InitiatedNotification>(() => new InitiatedNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitiatedNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitiatedNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitiatedNotification(InitiatedNotification other) : this() {
      externalId_ = other.externalId_;
      type_ = other.type_ != null ? other.type_.Clone() : null;
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      header_ = other.header_;
      body_ = other.body_;
      createdBy_ = other.createdBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitiatedNotification Clone() {
      return new InitiatedNotification(this);
    }

    /// <summary>Field number for the "external_id" field.</summary>
    public const int ExternalIdFieldNumber = 1;
    private string externalId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalId {
      get { return externalId_; }
      set {
        externalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::SKF.Enlight.API.Notification.NotificationType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Notification.NotificationType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 3;
    private global::SKF.Enlight.API.Common.Origin resource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Common.Origin Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 4;
    private string header_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Header {
      get { return header_; }
      set {
        header_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 5;
    private string body_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_by" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitiatedNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitiatedNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExternalId != other.ExternalId) return false;
      if (!object.Equals(Type, other.Type)) return false;
      if (!object.Equals(Resource, other.Resource)) return false;
      if (Header != other.Header) return false;
      if (Body != other.Body) return false;
      if (CreatedBy != other.CreatedBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExternalId.Length != 0) hash ^= ExternalId.GetHashCode();
      if (type_ != null) hash ^= Type.GetHashCode();
      if (resource_ != null) hash ^= Resource.GetHashCode();
      if (Header.Length != 0) hash ^= Header.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ExternalId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExternalId);
      }
      if (type_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Type);
      }
      if (resource_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Resource);
      }
      if (Header.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Header);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Body);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ExternalId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExternalId);
      }
      if (type_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Type);
      }
      if (resource_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Resource);
      }
      if (Header.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Header);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Body);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExternalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalId);
      }
      if (type_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      if (Header.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Header);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Body);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitiatedNotification other) {
      if (other == null) {
        return;
      }
      if (other.ExternalId.Length != 0) {
        ExternalId = other.ExternalId;
      }
      if (other.type_ != null) {
        if (type_ == null) {
          Type = new global::SKF.Enlight.API.Notification.NotificationType();
        }
        Type.MergeFrom(other.Type);
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          Resource = new global::SKF.Enlight.API.Common.Origin();
        }
        Resource.MergeFrom(other.Resource);
      }
      if (other.Header.Length != 0) {
        Header = other.Header;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExternalId = input.ReadString();
            break;
          }
          case 18: {
            if (type_ == null) {
              Type = new global::SKF.Enlight.API.Notification.NotificationType();
            }
            input.ReadMessage(Type);
            break;
          }
          case 26: {
            if (resource_ == null) {
              Resource = new global::SKF.Enlight.API.Common.Origin();
            }
            input.ReadMessage(Resource);
            break;
          }
          case 34: {
            Header = input.ReadString();
            break;
          }
          case 42: {
            Body = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ExternalId = input.ReadString();
            break;
          }
          case 18: {
            if (type_ == null) {
              Type = new global::SKF.Enlight.API.Notification.NotificationType();
            }
            input.ReadMessage(Type);
            break;
          }
          case 26: {
            if (resource_ == null) {
              Resource = new global::SKF.Enlight.API.Common.Origin();
            }
            input.ReadMessage(Resource);
            break;
          }
          case 34: {
            Header = input.ReadString();
            break;
          }
          case 42: {
            Body = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetNotificationTypeInput : pb::IMessage<SetNotificationTypeInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetNotificationTypeInput> _parser = new pb::MessageParser<SetNotificationTypeInput>(() => new SetNotificationTypeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetNotificationTypeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNotificationTypeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNotificationTypeInput(SetNotificationTypeInput other) : this() {
      notificationType_ = other.notificationType_ != null ? other.notificationType_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNotificationTypeInput Clone() {
      return new SetNotificationTypeInput(this);
    }

    /// <summary>Field number for the "notification_type" field.</summary>
    public const int NotificationTypeFieldNumber = 1;
    private global::SKF.Enlight.API.Notification.NotificationType notificationType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Notification.NotificationType NotificationType {
      get { return notificationType_; }
      set {
        notificationType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetNotificationTypeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetNotificationTypeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NotificationType, other.NotificationType)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (notificationType_ != null) hash ^= NotificationType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (notificationType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NotificationType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (notificationType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NotificationType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (notificationType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotificationType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetNotificationTypeInput other) {
      if (other == null) {
        return;
      }
      if (other.notificationType_ != null) {
        if (notificationType_ == null) {
          NotificationType = new global::SKF.Enlight.API.Notification.NotificationType();
        }
        NotificationType.MergeFrom(other.NotificationType);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (notificationType_ == null) {
              NotificationType = new global::SKF.Enlight.API.Notification.NotificationType();
            }
            input.ReadMessage(NotificationType);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (notificationType_ == null) {
              NotificationType = new global::SKF.Enlight.API.Notification.NotificationType();
            }
            input.ReadMessage(NotificationType);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetNotificationTypeInput : pb::IMessage<GetNotificationTypeInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetNotificationTypeInput> _parser = new pb::MessageParser<GetNotificationTypeInput>(() => new GetNotificationTypeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNotificationTypeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationTypeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationTypeInput(GetNotificationTypeInput other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationTypeInput Clone() {
      return new GetNotificationTypeInput(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNotificationTypeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNotificationTypeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNotificationTypeInput other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetNotificationTypeOutput : pb::IMessage<GetNotificationTypeOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetNotificationTypeOutput> _parser = new pb::MessageParser<GetNotificationTypeOutput>(() => new GetNotificationTypeOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNotificationTypeOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationTypeOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationTypeOutput(GetNotificationTypeOutput other) : this() {
      notificationType_ = other.notificationType_ != null ? other.notificationType_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationTypeOutput Clone() {
      return new GetNotificationTypeOutput(this);
    }

    /// <summary>Field number for the "notification_type" field.</summary>
    public const int NotificationTypeFieldNumber = 1;
    private global::SKF.Enlight.API.Notification.NotificationType notificationType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Notification.NotificationType NotificationType {
      get { return notificationType_; }
      set {
        notificationType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNotificationTypeOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNotificationTypeOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NotificationType, other.NotificationType)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (notificationType_ != null) hash ^= NotificationType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (notificationType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NotificationType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (notificationType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NotificationType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (notificationType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotificationType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNotificationTypeOutput other) {
      if (other == null) {
        return;
      }
      if (other.notificationType_ != null) {
        if (notificationType_ == null) {
          NotificationType = new global::SKF.Enlight.API.Notification.NotificationType();
        }
        NotificationType.MergeFrom(other.NotificationType);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (notificationType_ == null) {
              NotificationType = new global::SKF.Enlight.API.Notification.NotificationType();
            }
            input.ReadMessage(NotificationType);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (notificationType_ == null) {
              NotificationType = new global::SKF.Enlight.API.Notification.NotificationType();
            }
            input.ReadMessage(NotificationType);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RemoveNotificationTypeInput : pb::IMessage<RemoveNotificationTypeInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RemoveNotificationTypeInput> _parser = new pb::MessageParser<RemoveNotificationTypeInput>(() => new RemoveNotificationTypeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveNotificationTypeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveNotificationTypeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveNotificationTypeInput(RemoveNotificationTypeInput other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveNotificationTypeInput Clone() {
      return new RemoveNotificationTypeInput(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveNotificationTypeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveNotificationTypeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveNotificationTypeInput other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InitiateNotificationInput : pb::IMessage<InitiateNotificationInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitiateNotificationInput> _parser = new pb::MessageParser<InitiateNotificationInput>(() => new InitiateNotificationInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitiateNotificationInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitiateNotificationInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitiateNotificationInput(InitiateNotificationInput other) : this() {
      type_ = other.type_ != null ? other.type_.Clone() : null;
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      header_ = other.header_;
      body_ = other.body_;
      createdBy_ = other.createdBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitiateNotificationInput Clone() {
      return new InitiateNotificationInput(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::SKF.Enlight.API.Notification.NotificationType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Notification.NotificationType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 2;
    private global::SKF.Enlight.API.Common.Origin resource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Common.Origin Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 3;
    private string header_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Header {
      get { return header_; }
      set {
        header_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 4;
    private string body_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_by" field.</summary>
    public const int CreatedByFieldNumber = 5;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitiateNotificationInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitiateNotificationInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Type, other.Type)) return false;
      if (!object.Equals(Resource, other.Resource)) return false;
      if (Header != other.Header) return false;
      if (Body != other.Body) return false;
      if (CreatedBy != other.CreatedBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (type_ != null) hash ^= Type.GetHashCode();
      if (resource_ != null) hash ^= Resource.GetHashCode();
      if (Header.Length != 0) hash ^= Header.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (type_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Type);
      }
      if (resource_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Resource);
      }
      if (Header.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Header);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Body);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (type_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Type);
      }
      if (resource_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Resource);
      }
      if (Header.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Header);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Body);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (type_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      if (Header.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Header);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Body);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitiateNotificationInput other) {
      if (other == null) {
        return;
      }
      if (other.type_ != null) {
        if (type_ == null) {
          Type = new global::SKF.Enlight.API.Notification.NotificationType();
        }
        Type.MergeFrom(other.Type);
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          Resource = new global::SKF.Enlight.API.Common.Origin();
        }
        Resource.MergeFrom(other.Resource);
      }
      if (other.Header.Length != 0) {
        Header = other.Header;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (type_ == null) {
              Type = new global::SKF.Enlight.API.Notification.NotificationType();
            }
            input.ReadMessage(Type);
            break;
          }
          case 18: {
            if (resource_ == null) {
              Resource = new global::SKF.Enlight.API.Common.Origin();
            }
            input.ReadMessage(Resource);
            break;
          }
          case 26: {
            Header = input.ReadString();
            break;
          }
          case 34: {
            Body = input.ReadString();
            break;
          }
          case 42: {
            CreatedBy = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (type_ == null) {
              Type = new global::SKF.Enlight.API.Notification.NotificationType();
            }
            input.ReadMessage(Type);
            break;
          }
          case 18: {
            if (resource_ == null) {
              Resource = new global::SKF.Enlight.API.Common.Origin();
            }
            input.ReadMessage(Resource);
            break;
          }
          case 26: {
            Header = input.ReadString();
            break;
          }
          case 34: {
            Body = input.ReadString();
            break;
          }
          case 42: {
            CreatedBy = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InitiateNotificationOutput : pb::IMessage<InitiateNotificationOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitiateNotificationOutput> _parser = new pb::MessageParser<InitiateNotificationOutput>(() => new InitiateNotificationOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitiateNotificationOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitiateNotificationOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitiateNotificationOutput(InitiateNotificationOutput other) : this() {
      externalId_ = other.externalId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitiateNotificationOutput Clone() {
      return new InitiateNotificationOutput(this);
    }

    /// <summary>Field number for the "external_id" field.</summary>
    public const int ExternalIdFieldNumber = 1;
    private string externalId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalId {
      get { return externalId_; }
      set {
        externalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitiateNotificationOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitiateNotificationOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExternalId != other.ExternalId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExternalId.Length != 0) hash ^= ExternalId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ExternalId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExternalId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ExternalId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExternalId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExternalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitiateNotificationOutput other) {
      if (other == null) {
        return;
      }
      if (other.ExternalId.Length != 0) {
        ExternalId = other.ExternalId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExternalId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ExternalId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetInitiatedNotificationInput : pb::IMessage<GetInitiatedNotificationInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetInitiatedNotificationInput> _parser = new pb::MessageParser<GetInitiatedNotificationInput>(() => new GetInitiatedNotificationInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInitiatedNotificationInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInitiatedNotificationInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInitiatedNotificationInput(GetInitiatedNotificationInput other) : this() {
      externalId_ = other.externalId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInitiatedNotificationInput Clone() {
      return new GetInitiatedNotificationInput(this);
    }

    /// <summary>Field number for the "external_id" field.</summary>
    public const int ExternalIdFieldNumber = 1;
    private string externalId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalId {
      get { return externalId_; }
      set {
        externalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInitiatedNotificationInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInitiatedNotificationInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExternalId != other.ExternalId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExternalId.Length != 0) hash ^= ExternalId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ExternalId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExternalId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ExternalId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExternalId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExternalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInitiatedNotificationInput other) {
      if (other == null) {
        return;
      }
      if (other.ExternalId.Length != 0) {
        ExternalId = other.ExternalId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExternalId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ExternalId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetInitiatedNotificationOutput : pb::IMessage<GetInitiatedNotificationOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetInitiatedNotificationOutput> _parser = new pb::MessageParser<GetInitiatedNotificationOutput>(() => new GetInitiatedNotificationOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInitiatedNotificationOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInitiatedNotificationOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInitiatedNotificationOutput(GetInitiatedNotificationOutput other) : this() {
      initiatedNotification_ = other.initiatedNotification_ != null ? other.initiatedNotification_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInitiatedNotificationOutput Clone() {
      return new GetInitiatedNotificationOutput(this);
    }

    /// <summary>Field number for the "initiated_notification" field.</summary>
    public const int InitiatedNotificationFieldNumber = 1;
    private global::SKF.Enlight.API.Notification.InitiatedNotification initiatedNotification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Notification.InitiatedNotification InitiatedNotification {
      get { return initiatedNotification_; }
      set {
        initiatedNotification_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInitiatedNotificationOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInitiatedNotificationOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InitiatedNotification, other.InitiatedNotification)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (initiatedNotification_ != null) hash ^= InitiatedNotification.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (initiatedNotification_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InitiatedNotification);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (initiatedNotification_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InitiatedNotification);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (initiatedNotification_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InitiatedNotification);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInitiatedNotificationOutput other) {
      if (other == null) {
        return;
      }
      if (other.initiatedNotification_ != null) {
        if (initiatedNotification_ == null) {
          InitiatedNotification = new global::SKF.Enlight.API.Notification.InitiatedNotification();
        }
        InitiatedNotification.MergeFrom(other.InitiatedNotification);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (initiatedNotification_ == null) {
              InitiatedNotification = new global::SKF.Enlight.API.Notification.InitiatedNotification();
            }
            input.ReadMessage(InitiatedNotification);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (initiatedNotification_ == null) {
              InitiatedNotification = new global::SKF.Enlight.API.Notification.InitiatedNotification();
            }
            input.ReadMessage(InitiatedNotification);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RemoveInitiatedNotificationInput : pb::IMessage<RemoveInitiatedNotificationInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RemoveInitiatedNotificationInput> _parser = new pb::MessageParser<RemoveInitiatedNotificationInput>(() => new RemoveInitiatedNotificationInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveInitiatedNotificationInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveInitiatedNotificationInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveInitiatedNotificationInput(RemoveInitiatedNotificationInput other) : this() {
      externalId_ = other.externalId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveInitiatedNotificationInput Clone() {
      return new RemoveInitiatedNotificationInput(this);
    }

    /// <summary>Field number for the "external_id" field.</summary>
    public const int ExternalIdFieldNumber = 1;
    private string externalId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalId {
      get { return externalId_; }
      set {
        externalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveInitiatedNotificationInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveInitiatedNotificationInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExternalId != other.ExternalId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExternalId.Length != 0) hash ^= ExternalId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ExternalId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExternalId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ExternalId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExternalId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExternalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveInitiatedNotificationInput other) {
      if (other == null) {
        return;
      }
      if (other.ExternalId.Length != 0) {
        ExternalId = other.ExternalId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExternalId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ExternalId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserNotification : pb::IMessage<UserNotification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserNotification> _parser = new pb::MessageParser<UserNotification>(() => new UserNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserNotification(UserNotification other) : this() {
      externalId_ = other.externalId_;
      initiatedNotification_ = other.initiatedNotification_ != null ? other.initiatedNotification_.Clone() : null;
      userPreference_ = other.userPreference_ != null ? other.userPreference_.Clone() : null;
      sendState_ = other.sendState_;
      scheduledTime_ = other.scheduledTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserNotification Clone() {
      return new UserNotification(this);
    }

    /// <summary>Field number for the "external_id" field.</summary>
    public const int ExternalIdFieldNumber = 1;
    private string externalId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalId {
      get { return externalId_; }
      set {
        externalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "initiated_notification" field.</summary>
    public const int InitiatedNotificationFieldNumber = 2;
    private global::SKF.Enlight.API.Notification.InitiatedNotification initiatedNotification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Notification.InitiatedNotification InitiatedNotification {
      get { return initiatedNotification_; }
      set {
        initiatedNotification_ = value;
      }
    }

    /// <summary>Field number for the "user_preference" field.</summary>
    public const int UserPreferenceFieldNumber = 3;
    private global::SKF.Enlight.API.Notification.UserPreference userPreference_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Notification.UserPreference UserPreference {
      get { return userPreference_; }
      set {
        userPreference_ = value;
      }
    }

    /// <summary>Field number for the "send_state" field.</summary>
    public const int SendStateFieldNumber = 4;
    private global::SKF.Enlight.API.Notification.SendState sendState_ = global::SKF.Enlight.API.Notification.SendState.New;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Notification.SendState SendState {
      get { return sendState_; }
      set {
        sendState_ = value;
      }
    }

    /// <summary>Field number for the "scheduled_time" field.</summary>
    public const int ScheduledTimeFieldNumber = 5;
    private long scheduledTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ScheduledTime {
      get { return scheduledTime_; }
      set {
        scheduledTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExternalId != other.ExternalId) return false;
      if (!object.Equals(InitiatedNotification, other.InitiatedNotification)) return false;
      if (!object.Equals(UserPreference, other.UserPreference)) return false;
      if (SendState != other.SendState) return false;
      if (ScheduledTime != other.ScheduledTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExternalId.Length != 0) hash ^= ExternalId.GetHashCode();
      if (initiatedNotification_ != null) hash ^= InitiatedNotification.GetHashCode();
      if (userPreference_ != null) hash ^= UserPreference.GetHashCode();
      if (SendState != global::SKF.Enlight.API.Notification.SendState.New) hash ^= SendState.GetHashCode();
      if (ScheduledTime != 0L) hash ^= ScheduledTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ExternalId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExternalId);
      }
      if (initiatedNotification_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InitiatedNotification);
      }
      if (userPreference_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserPreference);
      }
      if (SendState != global::SKF.Enlight.API.Notification.SendState.New) {
        output.WriteRawTag(32);
        output.WriteEnum((int) SendState);
      }
      if (ScheduledTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ScheduledTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ExternalId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExternalId);
      }
      if (initiatedNotification_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InitiatedNotification);
      }
      if (userPreference_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserPreference);
      }
      if (SendState != global::SKF.Enlight.API.Notification.SendState.New) {
        output.WriteRawTag(32);
        output.WriteEnum((int) SendState);
      }
      if (ScheduledTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ScheduledTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExternalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalId);
      }
      if (initiatedNotification_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InitiatedNotification);
      }
      if (userPreference_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserPreference);
      }
      if (SendState != global::SKF.Enlight.API.Notification.SendState.New) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SendState);
      }
      if (ScheduledTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ScheduledTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserNotification other) {
      if (other == null) {
        return;
      }
      if (other.ExternalId.Length != 0) {
        ExternalId = other.ExternalId;
      }
      if (other.initiatedNotification_ != null) {
        if (initiatedNotification_ == null) {
          InitiatedNotification = new global::SKF.Enlight.API.Notification.InitiatedNotification();
        }
        InitiatedNotification.MergeFrom(other.InitiatedNotification);
      }
      if (other.userPreference_ != null) {
        if (userPreference_ == null) {
          UserPreference = new global::SKF.Enlight.API.Notification.UserPreference();
        }
        UserPreference.MergeFrom(other.UserPreference);
      }
      if (other.SendState != global::SKF.Enlight.API.Notification.SendState.New) {
        SendState = other.SendState;
      }
      if (other.ScheduledTime != 0L) {
        ScheduledTime = other.ScheduledTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExternalId = input.ReadString();
            break;
          }
          case 18: {
            if (initiatedNotification_ == null) {
              InitiatedNotification = new global::SKF.Enlight.API.Notification.InitiatedNotification();
            }
            input.ReadMessage(InitiatedNotification);
            break;
          }
          case 26: {
            if (userPreference_ == null) {
              UserPreference = new global::SKF.Enlight.API.Notification.UserPreference();
            }
            input.ReadMessage(UserPreference);
            break;
          }
          case 32: {
            SendState = (global::SKF.Enlight.API.Notification.SendState) input.ReadEnum();
            break;
          }
          case 40: {
            ScheduledTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ExternalId = input.ReadString();
            break;
          }
          case 18: {
            if (initiatedNotification_ == null) {
              InitiatedNotification = new global::SKF.Enlight.API.Notification.InitiatedNotification();
            }
            input.ReadMessage(InitiatedNotification);
            break;
          }
          case 26: {
            if (userPreference_ == null) {
              UserPreference = new global::SKF.Enlight.API.Notification.UserPreference();
            }
            input.ReadMessage(UserPreference);
            break;
          }
          case 32: {
            SendState = (global::SKF.Enlight.API.Notification.SendState) input.ReadEnum();
            break;
          }
          case 40: {
            ScheduledTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetUserNotificationsInput : pb::IMessage<GetUserNotificationsInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUserNotificationsInput> _parser = new pb::MessageParser<GetUserNotificationsInput>(() => new GetUserNotificationsInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserNotificationsInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserNotificationsInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserNotificationsInput(GetUserNotificationsInput other) : this() {
      userId_ = other.userId_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserNotificationsInput Clone() {
      return new GetUserNotificationsInput(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserNotificationsInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserNotificationsInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Limit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Limit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserNotificationsInput other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetUserNotificationsOutput : pb::IMessage<GetUserNotificationsOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUserNotificationsOutput> _parser = new pb::MessageParser<GetUserNotificationsOutput>(() => new GetUserNotificationsOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserNotificationsOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserNotificationsOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserNotificationsOutput(GetUserNotificationsOutput other) : this() {
      notifications_ = other.notifications_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserNotificationsOutput Clone() {
      return new GetUserNotificationsOutput(this);
    }

    /// <summary>Field number for the "notifications" field.</summary>
    public const int NotificationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SKF.Enlight.API.Notification.UserNotification> _repeated_notifications_codec
        = pb::FieldCodec.ForMessage(10, global::SKF.Enlight.API.Notification.UserNotification.Parser);
    private readonly pbc::RepeatedField<global::SKF.Enlight.API.Notification.UserNotification> notifications_ = new pbc::RepeatedField<global::SKF.Enlight.API.Notification.UserNotification>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SKF.Enlight.API.Notification.UserNotification> Notifications {
      get { return notifications_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserNotificationsOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserNotificationsOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!notifications_.Equals(other.notifications_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= notifications_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      notifications_.WriteTo(output, _repeated_notifications_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      notifications_.WriteTo(ref output, _repeated_notifications_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += notifications_.CalculateSize(_repeated_notifications_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserNotificationsOutput other) {
      if (other == null) {
        return;
      }
      notifications_.Add(other.notifications_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            notifications_.AddEntriesFrom(input, _repeated_notifications_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            notifications_.AddEntriesFrom(ref input, _repeated_notifications_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RemoveUserNotificationsInput : pb::IMessage<RemoveUserNotificationsInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RemoveUserNotificationsInput> _parser = new pb::MessageParser<RemoveUserNotificationsInput>(() => new RemoveUserNotificationsInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveUserNotificationsInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveUserNotificationsInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveUserNotificationsInput(RemoveUserNotificationsInput other) : this() {
      userId_ = other.userId_;
      initiatedNotificationExternalId_ = other.initiatedNotificationExternalId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveUserNotificationsInput Clone() {
      return new RemoveUserNotificationsInput(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "initiated_notification_external_id" field.</summary>
    public const int InitiatedNotificationExternalIdFieldNumber = 2;
    private string initiatedNotificationExternalId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InitiatedNotificationExternalId {
      get { return initiatedNotificationExternalId_; }
      set {
        initiatedNotificationExternalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveUserNotificationsInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveUserNotificationsInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (InitiatedNotificationExternalId != other.InitiatedNotificationExternalId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (InitiatedNotificationExternalId.Length != 0) hash ^= InitiatedNotificationExternalId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (InitiatedNotificationExternalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InitiatedNotificationExternalId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (InitiatedNotificationExternalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InitiatedNotificationExternalId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (InitiatedNotificationExternalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InitiatedNotificationExternalId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveUserNotificationsInput other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.InitiatedNotificationExternalId.Length != 0) {
        InitiatedNotificationExternalId = other.InitiatedNotificationExternalId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            InitiatedNotificationExternalId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            InitiatedNotificationExternalId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserPreferenceSchedule : pb::IMessage<UserPreferenceSchedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserPreferenceSchedule> _parser = new pb::MessageParser<UserPreferenceSchedule>(() => new UserPreferenceSchedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserPreferenceSchedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPreferenceSchedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPreferenceSchedule(UserPreferenceSchedule other) : this() {
      type_ = other.type_;
      timeOfDay_ = other.timeOfDay_;
      notificationInterval_ = other.notificationInterval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPreferenceSchedule Clone() {
      return new UserPreferenceSchedule(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::SKF.Enlight.API.Notification.DeliveryChannel type_ = global::SKF.Enlight.API.Notification.DeliveryChannel.Mail;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Notification.DeliveryChannel Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "time_of_day" field.</summary>
    public const int TimeOfDayFieldNumber = 2;
    private string timeOfDay_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeOfDay {
      get { return timeOfDay_; }
      set {
        timeOfDay_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "notification_interval" field.</summary>
    public const int NotificationIntervalFieldNumber = 3;
    private string notificationInterval_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotificationInterval {
      get { return notificationInterval_; }
      set {
        notificationInterval_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserPreferenceSchedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserPreferenceSchedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (TimeOfDay != other.TimeOfDay) return false;
      if (NotificationInterval != other.NotificationInterval) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::SKF.Enlight.API.Notification.DeliveryChannel.Mail) hash ^= Type.GetHashCode();
      if (TimeOfDay.Length != 0) hash ^= TimeOfDay.GetHashCode();
      if (NotificationInterval.Length != 0) hash ^= NotificationInterval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::SKF.Enlight.API.Notification.DeliveryChannel.Mail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (TimeOfDay.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TimeOfDay);
      }
      if (NotificationInterval.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NotificationInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::SKF.Enlight.API.Notification.DeliveryChannel.Mail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (TimeOfDay.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TimeOfDay);
      }
      if (NotificationInterval.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NotificationInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::SKF.Enlight.API.Notification.DeliveryChannel.Mail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (TimeOfDay.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeOfDay);
      }
      if (NotificationInterval.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotificationInterval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserPreferenceSchedule other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::SKF.Enlight.API.Notification.DeliveryChannel.Mail) {
        Type = other.Type;
      }
      if (other.TimeOfDay.Length != 0) {
        TimeOfDay = other.TimeOfDay;
      }
      if (other.NotificationInterval.Length != 0) {
        NotificationInterval = other.NotificationInterval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::SKF.Enlight.API.Notification.DeliveryChannel) input.ReadEnum();
            break;
          }
          case 18: {
            TimeOfDay = input.ReadString();
            break;
          }
          case 26: {
            NotificationInterval = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::SKF.Enlight.API.Notification.DeliveryChannel) input.ReadEnum();
            break;
          }
          case 18: {
            TimeOfDay = input.ReadString();
            break;
          }
          case 26: {
            NotificationInterval = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserPreference : pb::IMessage<UserPreference>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserPreference> _parser = new pb::MessageParser<UserPreference>(() => new UserPreference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserPreference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPreference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPreference(UserPreference other) : this() {
      userId_ = other.userId_;
      notificationTypeExtId_ = other.notificationTypeExtId_;
      deliveryChannel_ = other.deliveryChannel_;
      deliverySchedule_ = other.deliverySchedule_ != null ? other.deliverySchedule_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPreference Clone() {
      return new UserPreference(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "notification_type_ext_id" field.</summary>
    public const int NotificationTypeExtIdFieldNumber = 2;
    private string notificationTypeExtId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotificationTypeExtId {
      get { return notificationTypeExtId_; }
      set {
        notificationTypeExtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "delivery_channel" field.</summary>
    public const int DeliveryChannelFieldNumber = 3;
    private global::SKF.Enlight.API.Notification.DeliveryChannel deliveryChannel_ = global::SKF.Enlight.API.Notification.DeliveryChannel.Mail;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Notification.DeliveryChannel DeliveryChannel {
      get { return deliveryChannel_; }
      set {
        deliveryChannel_ = value;
      }
    }

    /// <summary>Field number for the "delivery_schedule" field.</summary>
    public const int DeliveryScheduleFieldNumber = 4;
    private global::SKF.Enlight.API.Notification.DeliverySchedule deliverySchedule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Notification.DeliverySchedule DeliverySchedule {
      get { return deliverySchedule_; }
      set {
        deliverySchedule_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserPreference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserPreference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (NotificationTypeExtId != other.NotificationTypeExtId) return false;
      if (DeliveryChannel != other.DeliveryChannel) return false;
      if (!object.Equals(DeliverySchedule, other.DeliverySchedule)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (NotificationTypeExtId.Length != 0) hash ^= NotificationTypeExtId.GetHashCode();
      if (DeliveryChannel != global::SKF.Enlight.API.Notification.DeliveryChannel.Mail) hash ^= DeliveryChannel.GetHashCode();
      if (deliverySchedule_ != null) hash ^= DeliverySchedule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (NotificationTypeExtId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NotificationTypeExtId);
      }
      if (DeliveryChannel != global::SKF.Enlight.API.Notification.DeliveryChannel.Mail) {
        output.WriteRawTag(24);
        output.WriteEnum((int) DeliveryChannel);
      }
      if (deliverySchedule_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DeliverySchedule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (NotificationTypeExtId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NotificationTypeExtId);
      }
      if (DeliveryChannel != global::SKF.Enlight.API.Notification.DeliveryChannel.Mail) {
        output.WriteRawTag(24);
        output.WriteEnum((int) DeliveryChannel);
      }
      if (deliverySchedule_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DeliverySchedule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (NotificationTypeExtId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotificationTypeExtId);
      }
      if (DeliveryChannel != global::SKF.Enlight.API.Notification.DeliveryChannel.Mail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DeliveryChannel);
      }
      if (deliverySchedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeliverySchedule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserPreference other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.NotificationTypeExtId.Length != 0) {
        NotificationTypeExtId = other.NotificationTypeExtId;
      }
      if (other.DeliveryChannel != global::SKF.Enlight.API.Notification.DeliveryChannel.Mail) {
        DeliveryChannel = other.DeliveryChannel;
      }
      if (other.deliverySchedule_ != null) {
        if (deliverySchedule_ == null) {
          DeliverySchedule = new global::SKF.Enlight.API.Notification.DeliverySchedule();
        }
        DeliverySchedule.MergeFrom(other.DeliverySchedule);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            NotificationTypeExtId = input.ReadString();
            break;
          }
          case 24: {
            DeliveryChannel = (global::SKF.Enlight.API.Notification.DeliveryChannel) input.ReadEnum();
            break;
          }
          case 34: {
            if (deliverySchedule_ == null) {
              DeliverySchedule = new global::SKF.Enlight.API.Notification.DeliverySchedule();
            }
            input.ReadMessage(DeliverySchedule);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            NotificationTypeExtId = input.ReadString();
            break;
          }
          case 24: {
            DeliveryChannel = (global::SKF.Enlight.API.Notification.DeliveryChannel) input.ReadEnum();
            break;
          }
          case 34: {
            if (deliverySchedule_ == null) {
              DeliverySchedule = new global::SKF.Enlight.API.Notification.DeliverySchedule();
            }
            input.ReadMessage(DeliverySchedule);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetUserPreferencesInput : pb::IMessage<SetUserPreferencesInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetUserPreferencesInput> _parser = new pb::MessageParser<SetUserPreferencesInput>(() => new SetUserPreferencesInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetUserPreferencesInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUserPreferencesInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUserPreferencesInput(SetUserPreferencesInput other) : this() {
      preferences_ = other.preferences_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUserPreferencesInput Clone() {
      return new SetUserPreferencesInput(this);
    }

    /// <summary>Field number for the "preferences" field.</summary>
    public const int PreferencesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SKF.Enlight.API.Notification.UserPreference> _repeated_preferences_codec
        = pb::FieldCodec.ForMessage(10, global::SKF.Enlight.API.Notification.UserPreference.Parser);
    private readonly pbc::RepeatedField<global::SKF.Enlight.API.Notification.UserPreference> preferences_ = new pbc::RepeatedField<global::SKF.Enlight.API.Notification.UserPreference>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SKF.Enlight.API.Notification.UserPreference> Preferences {
      get { return preferences_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetUserPreferencesInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetUserPreferencesInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!preferences_.Equals(other.preferences_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= preferences_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      preferences_.WriteTo(output, _repeated_preferences_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      preferences_.WriteTo(ref output, _repeated_preferences_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += preferences_.CalculateSize(_repeated_preferences_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetUserPreferencesInput other) {
      if (other == null) {
        return;
      }
      preferences_.Add(other.preferences_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            preferences_.AddEntriesFrom(input, _repeated_preferences_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            preferences_.AddEntriesFrom(ref input, _repeated_preferences_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetUserPreferencesInput : pb::IMessage<GetUserPreferencesInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUserPreferencesInput> _parser = new pb::MessageParser<GetUserPreferencesInput>(() => new GetUserPreferencesInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserPreferencesInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserPreferencesInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserPreferencesInput(GetUserPreferencesInput other) : this() {
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserPreferencesInput Clone() {
      return new GetUserPreferencesInput(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserPreferencesInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserPreferencesInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserPreferencesInput other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetUserPreferencesOutput : pb::IMessage<GetUserPreferencesOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUserPreferencesOutput> _parser = new pb::MessageParser<GetUserPreferencesOutput>(() => new GetUserPreferencesOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserPreferencesOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserPreferencesOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserPreferencesOutput(GetUserPreferencesOutput other) : this() {
      preferences_ = other.preferences_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserPreferencesOutput Clone() {
      return new GetUserPreferencesOutput(this);
    }

    /// <summary>Field number for the "preferences" field.</summary>
    public const int PreferencesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SKF.Enlight.API.Notification.UserPreference> _repeated_preferences_codec
        = pb::FieldCodec.ForMessage(10, global::SKF.Enlight.API.Notification.UserPreference.Parser);
    private readonly pbc::RepeatedField<global::SKF.Enlight.API.Notification.UserPreference> preferences_ = new pbc::RepeatedField<global::SKF.Enlight.API.Notification.UserPreference>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SKF.Enlight.API.Notification.UserPreference> Preferences {
      get { return preferences_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserPreferencesOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserPreferencesOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!preferences_.Equals(other.preferences_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= preferences_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      preferences_.WriteTo(output, _repeated_preferences_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      preferences_.WriteTo(ref output, _repeated_preferences_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += preferences_.CalculateSize(_repeated_preferences_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserPreferencesOutput other) {
      if (other == null) {
        return;
      }
      preferences_.Add(other.preferences_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            preferences_.AddEntriesFrom(input, _repeated_preferences_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            preferences_.AddEntriesFrom(ref input, _repeated_preferences_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RemoveUserPreferencesInput : pb::IMessage<RemoveUserPreferencesInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RemoveUserPreferencesInput> _parser = new pb::MessageParser<RemoveUserPreferencesInput>(() => new RemoveUserPreferencesInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveUserPreferencesInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveUserPreferencesInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveUserPreferencesInput(RemoveUserPreferencesInput other) : this() {
      userId_ = other.userId_;
      notificationTypeExtId_ = other.notificationTypeExtId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveUserPreferencesInput Clone() {
      return new RemoveUserPreferencesInput(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "notification_type_ext_id" field.</summary>
    public const int NotificationTypeExtIdFieldNumber = 2;
    private string notificationTypeExtId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotificationTypeExtId {
      get { return notificationTypeExtId_; }
      set {
        notificationTypeExtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveUserPreferencesInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveUserPreferencesInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (NotificationTypeExtId != other.NotificationTypeExtId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (NotificationTypeExtId.Length != 0) hash ^= NotificationTypeExtId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (NotificationTypeExtId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NotificationTypeExtId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (NotificationTypeExtId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NotificationTypeExtId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (NotificationTypeExtId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotificationTypeExtId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveUserPreferencesInput other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.NotificationTypeExtId.Length != 0) {
        NotificationTypeExtId = other.NotificationTypeExtId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            NotificationTypeExtId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            NotificationTypeExtId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UpdateUserNotificationStatusInput : pb::IMessage<UpdateUserNotificationStatusInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateUserNotificationStatusInput> _parser = new pb::MessageParser<UpdateUserNotificationStatusInput>(() => new UpdateUserNotificationStatusInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateUserNotificationStatusInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SKF.Enlight.API.Notification.GrpcapiReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateUserNotificationStatusInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateUserNotificationStatusInput(UpdateUserNotificationStatusInput other) : this() {
      notificationId_ = other.notificationId_;
      sendState_ = other.sendState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateUserNotificationStatusInput Clone() {
      return new UpdateUserNotificationStatusInput(this);
    }

    /// <summary>Field number for the "notification_id" field.</summary>
    public const int NotificationIdFieldNumber = 1;
    private string notificationId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotificationId {
      get { return notificationId_; }
      set {
        notificationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "send_state" field.</summary>
    public const int SendStateFieldNumber = 2;
    private global::SKF.Enlight.API.Notification.SendState sendState_ = global::SKF.Enlight.API.Notification.SendState.New;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SKF.Enlight.API.Notification.SendState SendState {
      get { return sendState_; }
      set {
        sendState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateUserNotificationStatusInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateUserNotificationStatusInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NotificationId != other.NotificationId) return false;
      if (SendState != other.SendState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NotificationId.Length != 0) hash ^= NotificationId.GetHashCode();
      if (SendState != global::SKF.Enlight.API.Notification.SendState.New) hash ^= SendState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NotificationId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NotificationId);
      }
      if (SendState != global::SKF.Enlight.API.Notification.SendState.New) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SendState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NotificationId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NotificationId);
      }
      if (SendState != global::SKF.Enlight.API.Notification.SendState.New) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SendState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NotificationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotificationId);
      }
      if (SendState != global::SKF.Enlight.API.Notification.SendState.New) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SendState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateUserNotificationStatusInput other) {
      if (other == null) {
        return;
      }
      if (other.NotificationId.Length != 0) {
        NotificationId = other.NotificationId;
      }
      if (other.SendState != global::SKF.Enlight.API.Notification.SendState.New) {
        SendState = other.SendState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NotificationId = input.ReadString();
            break;
          }
          case 16: {
            SendState = (global::SKF.Enlight.API.Notification.SendState) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            NotificationId = input.ReadString();
            break;
          }
          case 16: {
            SendState = (global::SKF.Enlight.API.Notification.SendState) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
